import { HermesSubject } from './hermes.subject';
import { HermesSubscriber } from './subscriber/hermes.subscriber';
export class HermesReplaySubject extends HermesSubject {
    constructor(bufferSize = 1) {
        super();
        this.bufferSize = bufferSize;
        this.values = [];
    }
    pipe(...operations) {
        return super.pipe(...operations);
    }
    next(value) {
        this.values.push(value);
        if (this.bufferSize < this.values.length) {
            this.values.shift();
        }
        super.next(value);
    }
    subscribe() {
        let subscriber;
        if (arguments[0] instanceof HermesSubscriber) {
            subscriber = arguments[0];
        }
        else {
            subscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);
        }
        const subscription = super.subscribe(subscriber);
        for (const value of this.values) {
            subscriber.next(value);
        }
        return subscription;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVybWVzLnJlcGxheS1zdWJqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL2d1aS1oZXJtZXMvc3JjL2NvbW1vbi9zdHJlYW0vY29yZS9vYnNlcnZhYmxlL2hlcm1lcy5yZXBsYXktc3ViamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHbEUsTUFBTSxPQUFPLG1CQUF1QixTQUFRLGFBQWdCO0lBSTNELFlBQTZCLGFBQXFCLENBQUM7UUFDbEQsS0FBSyxFQUFFLENBQUM7UUFEb0IsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZsQyxXQUFNLEdBQWEsRUFBRSxDQUFDO0lBSXZDLENBQUM7SUFFUSxJQUFJLENBQUMsR0FBRyxVQUFtRDtRQUNuRSxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxVQUFVLENBQTZCLENBQUM7SUFDOUQsQ0FBQztJQUVRLElBQUksQ0FBQyxLQUFRO1FBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hCLElBQUksSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN6QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ3BCO1FBQ0QsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQixDQUFDO0lBVVEsU0FBUztRQUVqQixJQUFJLFVBQStCLENBQUM7UUFFcEMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLFlBQVksZ0JBQWdCLEVBQUU7WUFDN0MsVUFBVSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMxQjthQUFNO1lBQ04sVUFBVSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzdFO1FBRUQsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUVqRCxLQUFLLE1BQU0sS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN2QjtRQUVELE9BQU8sWUFBWSxDQUFDO0lBQ3JCLENBQUM7Q0FFRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlcm1lc1N1YmplY3QgfSBmcm9tICcuL2hlcm1lcy5zdWJqZWN0JztcbmltcG9ydCB7IEhlcm1lc1N1YnNjcmlwdGlvbiB9IGZyb20gJy4uL3N1YnNjcmlwdGlvbi9oZXJtZXMuc3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IEhlcm1lc1N1YnNjcmliZXIgfSBmcm9tICcuL3N1YnNjcmliZXIvaGVybWVzLnN1YnNjcmliZXInO1xuaW1wb3J0IHsgSGVybWVzT3BlcmF0b3JGdW5jdGlvbiB9IGZyb20gJy4vaGVybWVzLm9ic2VydmFibGUnO1xuXG5leHBvcnQgY2xhc3MgSGVybWVzUmVwbGF5U3ViamVjdDxUPiBleHRlbmRzIEhlcm1lc1N1YmplY3Q8VD4ge1xuXG5cdHByaXZhdGUgcmVhZG9ubHkgdmFsdWVzOiBBcnJheTxUPiA9IFtdO1xuXG5cdGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgYnVmZmVyU2l6ZTogbnVtYmVyID0gMSkge1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHRvdmVycmlkZSBwaXBlKC4uLm9wZXJhdGlvbnM6IEFycmF5PEhlcm1lc09wZXJhdG9yRnVuY3Rpb248YW55LCBhbnk+Pik6IEhlcm1lc1JlcGxheVN1YmplY3Q8YW55PiB7XG5cdFx0cmV0dXJuIHN1cGVyLnBpcGUoLi4ub3BlcmF0aW9ucykgYXMgSGVybWVzUmVwbGF5U3ViamVjdDxhbnk+O1xuXHR9XG5cblx0b3ZlcnJpZGUgbmV4dCh2YWx1ZTogVCk6IHZvaWQge1xuXHRcdHRoaXMudmFsdWVzLnB1c2godmFsdWUpO1xuXHRcdGlmICh0aGlzLmJ1ZmZlclNpemUgPCB0aGlzLnZhbHVlcy5sZW5ndGgpIHtcblx0XHRcdHRoaXMudmFsdWVzLnNoaWZ0KCk7XG5cdFx0fVxuXHRcdHN1cGVyLm5leHQodmFsdWUpO1xuXHR9XG5cblx0b3ZlcnJpZGUgc3Vic2NyaWJlKFxuXHRcdG5leHQ/OiAodmFsdWU6IFQpID0+IHZvaWQsXG5cdFx0ZXJyb3I/OiAoZXJyb3I6IGFueSkgPT4gdm9pZCxcblx0XHRjb21wbGV0ZT86ICgpID0+IHZvaWRcblx0KTogSGVybWVzU3Vic2NyaXB0aW9uO1xuXHRvdmVycmlkZSBzdWJzY3JpYmUoXG5cdFx0c3Vic2NyaWJlcjogSGVybWVzU3Vic2NyaWJlcjxUPlxuXHQpOiBIZXJtZXNTdWJzY3JpcHRpb247XG5cdG92ZXJyaWRlIHN1YnNjcmliZSgpOiBIZXJtZXNTdWJzY3JpcHRpb24ge1xuXG5cdFx0bGV0IHN1YnNjcmliZXI6IEhlcm1lc1N1YnNjcmliZXI8VD47XG5cblx0XHRpZiAoYXJndW1lbnRzWzBdIGluc3RhbmNlb2YgSGVybWVzU3Vic2NyaWJlcikge1xuXHRcdFx0c3Vic2NyaWJlciA9IGFyZ3VtZW50c1swXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3Vic2NyaWJlciA9IHRoaXMuY3JlYXRlU3Vic2NyaWJlcihhcmd1bWVudHNbMF0sIGFyZ3VtZW50c1sxXSwgYXJndW1lbnRzWzJdKTtcblx0XHR9XG5cblx0XHRjb25zdCBzdWJzY3JpcHRpb24gPSBzdXBlci5zdWJzY3JpYmUoc3Vic2NyaWJlcik7XG5cblx0XHRmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMudmFsdWVzKSB7XG5cdFx0XHRzdWJzY3JpYmVyLm5leHQodmFsdWUpO1xuXHRcdH1cblxuXHRcdHJldHVybiBzdWJzY3JpcHRpb247XG5cdH1cblxufVxuIl19