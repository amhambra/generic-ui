import { Key } from './key';
import { NotFoundKey } from './not-found-key';
export class KeyRegister {
    constructor() {
        this.records = new Map();
    }
    getKey(token) {
        const key = this.records.get(token);
        if (!key) {
            return new NotFoundKey(token);
        }
        return key;
    }
    getKeyAndTryRegister(token, provider) {
        if (!this.has(token)) {
            this.set(token, provider);
        }
        return this.getKey(token);
    }
    has(token) {
        return this.records.has(token);
    }
    set(token, _provider) {
        this.records.set(token, Key.from(token));
    }
    clear() {
        this.records.clear();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5LnJlZ2lzdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL2d1aS1oZXJtZXMvc3JjL2NvbW1vbi9kaS9saWIva2V5L2tleS5yZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBRzVCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUU5QyxNQUFNLE9BQU8sV0FBVztJQUF4QjtRQUVrQixZQUFPLEdBQUcsSUFBSSxHQUFHLEVBQXdCLENBQUM7SUFnQzVELENBQUM7SUE5QkEsTUFBTSxDQUFJLEtBQWU7UUFDeEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFcEMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNULE9BQU8sSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDOUI7UUFFRCxPQUFPLEdBQUcsQ0FBQztJQUNaLENBQUM7SUFFRCxvQkFBb0IsQ0FBSSxLQUFlLEVBQUUsUUFBdUI7UUFFL0QsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDckIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDMUI7UUFFRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELEdBQUcsQ0FBSSxLQUFlO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELEdBQUcsQ0FBSSxLQUFlLEVBQUUsU0FBd0I7UUFDL0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsS0FBSztRQUNKLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdEIsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2V5IH0gZnJvbSAnLi9rZXknO1xuaW1wb3J0IHsgVG9rZW4gfSBmcm9tICcuLi90b2tlbic7XG5pbXBvcnQgeyBDbGFzc1Byb3ZpZGVyIH0gZnJvbSAnLi4vcHJvdmlkZXIvY2xhc3MvY2xhc3MtcHJvdmlkZXInO1xuaW1wb3J0IHsgTm90Rm91bmRLZXkgfSBmcm9tICcuL25vdC1mb3VuZC1rZXknO1xuXG5leHBvcnQgY2xhc3MgS2V5UmVnaXN0ZXIge1xuXG5cdHByaXZhdGUgcmVhZG9ubHkgcmVjb3JkcyA9IG5ldyBNYXA8VG9rZW48YW55PiwgS2V5PGFueT4+KCk7XG5cblx0Z2V0S2V5PFQ+KHRva2VuOiBUb2tlbjxUPik6IEtleTxUPiB7XG5cdFx0Y29uc3Qga2V5ID0gdGhpcy5yZWNvcmRzLmdldCh0b2tlbik7XG5cblx0XHRpZiAoIWtleSkge1xuXHRcdFx0cmV0dXJuIG5ldyBOb3RGb3VuZEtleSh0b2tlbik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGtleTtcblx0fVxuXG5cdGdldEtleUFuZFRyeVJlZ2lzdGVyPFQ+KHRva2VuOiBUb2tlbjxUPiwgcHJvdmlkZXI6IENsYXNzUHJvdmlkZXIpOiBLZXk8VD4ge1xuXG5cdFx0aWYgKCF0aGlzLmhhcyh0b2tlbikpIHtcblx0XHRcdHRoaXMuc2V0KHRva2VuLCBwcm92aWRlcik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZ2V0S2V5KHRva2VuKTtcblx0fVxuXG5cdGhhczxUPih0b2tlbjogVG9rZW48VD4pOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5yZWNvcmRzLmhhcyh0b2tlbik7XG5cdH1cblxuXHRzZXQ8VD4odG9rZW46IFRva2VuPFQ+LCBfcHJvdmlkZXI6IENsYXNzUHJvdmlkZXIpOiB2b2lkIHtcblx0XHR0aGlzLnJlY29yZHMuc2V0KHRva2VuLCBLZXkuZnJvbSh0b2tlbikpO1xuXHR9XG5cblx0Y2xlYXIoKTogdm9pZCB7XG5cdFx0dGhpcy5yZWNvcmRzLmNsZWFyKCk7XG5cdH1cbn1cbiJdfQ==