import { DomainEventBus } from '../../domain/event/domain-event.bus';
import { ReactiveService } from '../../../common/reactive/reactive.service';
import { hermesFilter } from '../../../common/stream/core/operator/hermes.filter';
import { CoreContainer } from '../core.container';
export class EventRepository extends ReactiveService {
    constructor() {
        super();
        this.domainEventBus = CoreContainer.resolve(DomainEventBus);
    }
    onEvent(aggregateId, eventType) {
        return this.domainEventBus
            .ofEvents([
            eventType
        ])
            .pipe(hermesFilter((event) => event.getAggregateId().toString() === aggregateId.toString()));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQucmVwb3NpdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9ndWktaGVybWVzL3NyYy9jb3JlL2FwaS9ldmVudC9ldmVudC5yZXBvc2l0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDNUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG9EQUFvRCxDQUFDO0FBRWxGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVsRCxNQUFNLE9BQWdCLGVBQTJDLFNBQVEsZUFBZTtJQUl2RjtRQUNDLEtBQUssRUFBRSxDQUFDO1FBSFEsbUJBQWMsR0FBbUIsYUFBYSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUl4RixDQUFDO0lBRVMsT0FBTyxDQUFDLFdBQWMsRUFBRSxTQUFjO1FBRS9DLE9BQU8sSUFBSSxDQUFDLGNBQWM7YUFDcEIsUUFBUSxDQUFDO1lBQ1IsU0FBZ0I7U0FDaEIsQ0FDRDthQUNBLElBQUksQ0FDSixZQUFZLENBQUMsQ0FBQyxLQUErQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUMsUUFBUSxFQUFFLEtBQUssV0FBVyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQy9HLENBQUM7SUFDUixDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZ2dyZWdhdGVJZCB9IGZyb20gJy4uL3RhY3RpY2FsL2FnZ3JlZ2F0ZS9hZ2dyZWdhdGUtaWQnO1xuaW1wb3J0IHsgRG9tYWluRXZlbnQgfSBmcm9tICcuL2RvbWFpbi1ldmVudCc7XG5pbXBvcnQgeyBSZWFkTW9kZWxSb290SWQgfSBmcm9tICcuLi9yZWFkL3JlYWQtbW9kZWwtcm9vdC1pZCc7XG5pbXBvcnQgeyBEb21haW5FdmVudEJ1cyB9IGZyb20gJy4uLy4uL2RvbWFpbi9ldmVudC9kb21haW4tZXZlbnQuYnVzJztcbmltcG9ydCB7IFJlYWN0aXZlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9yZWFjdGl2ZS9yZWFjdGl2ZS5zZXJ2aWNlJztcbmltcG9ydCB7IGhlcm1lc0ZpbHRlciB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9zdHJlYW0vY29yZS9vcGVyYXRvci9oZXJtZXMuZmlsdGVyJztcbmltcG9ydCB7IEhlcm1lc09ic2VydmFibGUgfSBmcm9tICcuLi8uLi8uLi9jb21tb24vc3RyZWFtL2NvcmUvb2JzZXJ2YWJsZS9oZXJtZXMub2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBDb3JlQ29udGFpbmVyIH0gZnJvbSAnLi4vY29yZS5jb250YWluZXInO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRXZlbnRSZXBvc2l0b3J5PFIgZXh0ZW5kcyBSZWFkTW9kZWxSb290SWQ+IGV4dGVuZHMgUmVhY3RpdmVTZXJ2aWNlIHtcblxuXHRwcml2YXRlIHJlYWRvbmx5IGRvbWFpbkV2ZW50QnVzOiBEb21haW5FdmVudEJ1cyA9IENvcmVDb250YWluZXIucmVzb2x2ZShEb21haW5FdmVudEJ1cyk7XG5cblx0cHJvdGVjdGVkIGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgb25FdmVudChhZ2dyZWdhdGVJZDogUiwgZXZlbnRUeXBlOiBhbnkpOiBIZXJtZXNPYnNlcnZhYmxlPERvbWFpbkV2ZW50PGFueT4+IHtcblxuXHRcdHJldHVybiB0aGlzLmRvbWFpbkV2ZW50QnVzXG5cdFx0XHRcdCAgIC5vZkV2ZW50cyhbXG5cdFx0XHRcdFx0XHQgICBldmVudFR5cGUgYXMgYW55XG5cdFx0XHRcdFx0ICAgXVxuXHRcdFx0XHQgICApXG5cdFx0XHRcdCAgIC5waXBlKFxuXHRcdFx0XHRcdCAgIGhlcm1lc0ZpbHRlcigoZXZlbnQ6IERvbWFpbkV2ZW50PEFnZ3JlZ2F0ZUlkPikgPT4gZXZlbnQuZ2V0QWdncmVnYXRlSWQoKS50b1N0cmluZygpID09PSBhZ2dyZWdhdGVJZC50b1N0cmluZygpKVxuXHRcdFx0XHQgICApO1xuXHR9XG59XG4iXX0=