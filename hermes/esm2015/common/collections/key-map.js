import { Optional } from '../optional';
export class KeyMap {
    constructor() {
        this.keys = new Map();
        this.values = new WeakMap();
    }
    get(key) {
        const internalKey = this.getInternalKey(key);
        if (internalKey !== undefined) {
            return Optional.of(this.values.get(internalKey));
        }
        else {
            return Optional.empty();
        }
    }
    has(key) {
        const internalKey = this.getInternalKey(key);
        return this.values.has(internalKey);
    }
    set(key, value) {
        this.keys.set(key.toString(), key);
        this.values.set(key, value);
    }
    size() {
        return this.keys.size;
    }
    remove(key) {
        if (this.hasInternalKey(key)) {
            this.keys.delete(key.toString());
            this.values.delete(key);
        }
    }
    removeAll() {
        this.keys.forEach((value) => {
            this.values.delete(value);
        });
        this.keys.clear();
    }
    getInternalKey(key) {
        return this.keys.get(key.toString());
    }
    hasInternalKey(key) {
        return this.keys.has(key.toString());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5LW1hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9ndWktaGVybWVzL3NyYy9jb21tb24vY29sbGVjdGlvbnMva2V5LW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXZDLE1BQU0sT0FBTyxNQUFNO0lBQW5CO1FBRWtCLFNBQUksR0FBRyxJQUFJLEdBQUcsRUFBYSxDQUFDO1FBRTVCLFdBQU0sR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO0lBbUQvQyxDQUFDO0lBakRBLEdBQUcsQ0FBQyxHQUFNO1FBRVQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU3QyxJQUFJLFdBQVcsS0FBSyxTQUFTLEVBQUU7WUFDOUIsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDakQ7YUFBTTtZQUNOLE9BQU8sUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ3hCO0lBQ0YsQ0FBQztJQUVELEdBQUcsQ0FBQyxHQUFNO1FBRVQsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUU3QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxHQUFHLENBQUMsR0FBTSxFQUFFLEtBQVE7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsSUFBSTtRQUNILE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDdkIsQ0FBQztJQUVELE1BQU0sQ0FBQyxHQUFNO1FBQ1osSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzdCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3hCO0lBQ0YsQ0FBQztJQUVELFNBQVM7UUFDUixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQzNCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRU8sY0FBYyxDQUFDLEdBQU07UUFDNUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU8sY0FBYyxDQUFDLEdBQU07UUFDNUIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBRUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXkgfSBmcm9tICcuL2tleSc7XG5pbXBvcnQgeyBPcHRpb25hbCB9IGZyb20gJy4uL29wdGlvbmFsJztcblxuZXhwb3J0IGNsYXNzIEtleU1hcDxLIGV4dGVuZHMgS2V5LCBUPiB7XG5cblx0cHJpdmF0ZSByZWFkb25seSBrZXlzID0gbmV3IE1hcDxzdHJpbmcsIEs+KCk7XG5cblx0cHJpdmF0ZSByZWFkb25seSB2YWx1ZXMgPSBuZXcgV2Vha01hcDxLLCBUPigpO1xuXG5cdGdldChrZXk6IEspOiBPcHRpb25hbDxUPiB7XG5cblx0XHRjb25zdCBpbnRlcm5hbEtleSA9IHRoaXMuZ2V0SW50ZXJuYWxLZXkoa2V5KTtcblxuXHRcdGlmIChpbnRlcm5hbEtleSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRyZXR1cm4gT3B0aW9uYWwub2YodGhpcy52YWx1ZXMuZ2V0KGludGVybmFsS2V5KSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBPcHRpb25hbC5lbXB0eSgpO1xuXHRcdH1cblx0fVxuXG5cdGhhcyhrZXk6IEspOiBib29sZWFuIHtcblxuXHRcdGNvbnN0IGludGVybmFsS2V5ID0gdGhpcy5nZXRJbnRlcm5hbEtleShrZXkpO1xuXG5cdFx0cmV0dXJuIHRoaXMudmFsdWVzLmhhcyhpbnRlcm5hbEtleSk7XG5cdH1cblxuXHRzZXQoa2V5OiBLLCB2YWx1ZTogVCk6IHZvaWQge1xuXHRcdHRoaXMua2V5cy5zZXQoa2V5LnRvU3RyaW5nKCksIGtleSk7XG5cdFx0dGhpcy52YWx1ZXMuc2V0KGtleSwgdmFsdWUpO1xuXHR9XG5cblx0c2l6ZSgpOiBudW1iZXIge1xuXHRcdHJldHVybiB0aGlzLmtleXMuc2l6ZTtcblx0fVxuXG5cdHJlbW92ZShrZXk6IEspOiB2b2lkIHtcblx0XHRpZiAodGhpcy5oYXNJbnRlcm5hbEtleShrZXkpKSB7XG5cdFx0XHR0aGlzLmtleXMuZGVsZXRlKGtleS50b1N0cmluZygpKTtcblx0XHRcdHRoaXMudmFsdWVzLmRlbGV0ZShrZXkpO1xuXHRcdH1cblx0fVxuXG5cdHJlbW92ZUFsbCgpOiB2b2lkIHtcblx0XHR0aGlzLmtleXMuZm9yRWFjaCgodmFsdWUpID0+IHtcblx0XHRcdHRoaXMudmFsdWVzLmRlbGV0ZSh2YWx1ZSk7XG5cdFx0fSk7XG5cdFx0dGhpcy5rZXlzLmNsZWFyKCk7XG5cdH1cblxuXHRwcml2YXRlIGdldEludGVybmFsS2V5KGtleTogSyk6IEsge1xuXHRcdHJldHVybiB0aGlzLmtleXMuZ2V0KGtleS50b1N0cmluZygpKTtcblx0fVxuXG5cdHByaXZhdGUgaGFzSW50ZXJuYWxLZXkoa2V5OiBLKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMua2V5cy5oYXMoa2V5LnRvU3RyaW5nKCkpO1xuXHR9XG5cbn1cbiJdfQ==