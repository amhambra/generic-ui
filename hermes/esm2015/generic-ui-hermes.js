/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { HermesApi, enableHermesLoggers, disableHermesLoggers, provideEventHandlers, CommandDispatcher, Command, AggregateFactory, CommandBus, CommandLogger, CommandStream, ReplayCommandDispatcher, AggregateEvent, AggregateRepository, AggregateStore, AggregateStoreRegister, Aggregate, AggregateId, DomainEventStatus, StatusResponse, DomainEvent, DomainEventPublisher, DomainEventBus, DomainEventHandler, DomainEventLogger, DomainEventPayload, DomainEventStream, DOMAIN_EVENT_HANDLERS, ReadModel, ReadModelRepository, ReadModelStore, RootAggregate, Entity, ValueObject, AggregateArchive, RandomStringGenerator, Optional, PersistAnemia, PersistStateStore, PersistReadModelStore, PersistAggregateStore, InMemoryAggregateStore, InMemoryReadModelStore, InMemoryStore, HermesModule, COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, assertDomainEvents, assertAggregateEvents } from './public-api';
export { Logger as ɵc } from './common/logger';
export { Reactive as ɵg } from './common/reactive';
export { ReactiveService as ɵh } from './common/reactive.service';
export { aggregateDefinitionToken as ɵr } from './domain/command/config/aggregate-definition.token';
export { AggregateFactoryArchive as ɵn, AggregateRepositoryArchive as ɵo } from './domain/command/config/define';
export { AggregateCommandHandlerImpl as ɵx, aggregateCommandHandlerFactory as ɵw } from './domain/command/create-handler/aggregate-command-handler.impl';
export { AGGREGATE_COMMAND_HANDLERS as ɵp } from './domain/command/create-handler/aggregate-command-handlers.token';
export { FILTERED_COMMAND_STREAM as ɵe } from './domain/command/filtered-command-stream';
export { CommandHandlerImpl as ɵv, commandHandlerFactory as ɵu } from './domain/command/handler/command-handler-impl';
export { COMMAND_HANDLERS as ɵq } from './domain/command/handler/command-handlers';
export { DomainEventStore as ɵf } from './domain/event/domain-event.store';
export { Message as ɵd } from './domain/message';
export { ConsoleCommandLogger as ɵi } from './infrastructure/logger/command/console.command.logger';
export { NoopCommandLogger as ɵj } from './infrastructure/logger/command/noop.command.logger';
export { ConsoleEventLogger as ɵk } from './infrastructure/logger/event/console.event.logger';
export { NoopEventLogger as ɵl } from './infrastructure/logger/event/noop.event.logger';
export { HermesDomainModule as ɵt } from './ui-api/hermes.domain.module';
export { HermesLoggersInitializer as ɵm } from './ui-api/hermes.loggers.initializer';
export { commandLoggerFactory as ɵa, eventLoggerFactory as ɵb } from './ui-api/hermes.module';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy11aS1oZXJtZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VuZXJpYy11aS9oZXJtZXMvIiwic291cmNlcyI6WyJnZW5lcmljLXVpLWhlcm1lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEseTJCQUFjLGNBQWMsQ0FBQztBQUU3QixPQUFPLEVBQUMsTUFBTSxJQUFJLEVBQUUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxRQUFRLElBQUksRUFBRSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUVoRSxPQUFPLEVBQUMsd0JBQXdCLElBQUksRUFBRSxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDbEcsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RyxPQUFPLEVBQUMsMkJBQTJCLElBQUksRUFBRSxFQUFDLDhCQUE4QixJQUFJLEVBQUUsRUFBQyxNQUFNLGdFQUFnRSxDQUFDO0FBQ3RKLE9BQU8sRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSxrRUFBa0UsQ0FBQztBQUNsSCxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDdkYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUNuSCxPQUFPLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDakYsT0FBTyxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxPQUFPLElBQUksRUFBRSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxNQUFNLHdEQUF3RCxDQUFDO0FBQ2xHLE9BQU8sRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxxREFBcUQsQ0FBQztBQUM1RixPQUFPLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDNUYsT0FBTyxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsTUFBTSxpREFBaUQsQ0FBQztBQUN0RixPQUFPLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDdkUsT0FBTyxFQUFDLHdCQUF3QixJQUFJLEVBQUUsRUFBQyxNQUFNLHFDQUFxQyxDQUFDO0FBQ25GLE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0sd0JBQXdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7TG9nZ2VyIGFzIMm1Y30gZnJvbSAnLi9jb21tb24vbG9nZ2VyJztcbmV4cG9ydCB7UmVhY3RpdmUgYXMgybVnfSBmcm9tICcuL2NvbW1vbi9yZWFjdGl2ZSc7XG5leHBvcnQge1JlYWN0aXZlU2VydmljZSBhcyDJtWh9IGZyb20gJy4vY29tbW9uL3JlYWN0aXZlLnNlcnZpY2UnO1xuZXhwb3J0IHtBZ2dyZWdhdGVEZWZpbml0aW9uIGFzIMm1c30gZnJvbSAnLi9kb21haW4vY29tbWFuZC9jb25maWcvYWdncmVnYXRlLWRlZmluaXRpb24nO1xuZXhwb3J0IHthZ2dyZWdhdGVEZWZpbml0aW9uVG9rZW4gYXMgybVyfSBmcm9tICcuL2RvbWFpbi9jb21tYW5kL2NvbmZpZy9hZ2dyZWdhdGUtZGVmaW5pdGlvbi50b2tlbic7XG5leHBvcnQge0FnZ3JlZ2F0ZUZhY3RvcnlBcmNoaXZlIGFzIMm1bixBZ2dyZWdhdGVSZXBvc2l0b3J5QXJjaGl2ZSBhcyDJtW99IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvY29uZmlnL2RlZmluZSc7XG5leHBvcnQge0FnZ3JlZ2F0ZUNvbW1hbmRIYW5kbGVySW1wbCBhcyDJtXgsYWdncmVnYXRlQ29tbWFuZEhhbmRsZXJGYWN0b3J5IGFzIMm1d30gZnJvbSAnLi9kb21haW4vY29tbWFuZC9jcmVhdGUtaGFuZGxlci9hZ2dyZWdhdGUtY29tbWFuZC1oYW5kbGVyLmltcGwnO1xuZXhwb3J0IHtBR0dSRUdBVEVfQ09NTUFORF9IQU5ETEVSUyBhcyDJtXB9IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvY3JlYXRlLWhhbmRsZXIvYWdncmVnYXRlLWNvbW1hbmQtaGFuZGxlcnMudG9rZW4nO1xuZXhwb3J0IHtGSUxURVJFRF9DT01NQU5EX1NUUkVBTSBhcyDJtWV9IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvZmlsdGVyZWQtY29tbWFuZC1zdHJlYW0nO1xuZXhwb3J0IHtDb21tYW5kSGFuZGxlckltcGwgYXMgybV2LGNvbW1hbmRIYW5kbGVyRmFjdG9yeSBhcyDJtXV9IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvaGFuZGxlci9jb21tYW5kLWhhbmRsZXItaW1wbCc7XG5leHBvcnQge0NPTU1BTkRfSEFORExFUlMgYXMgybVxfSBmcm9tICcuL2RvbWFpbi9jb21tYW5kL2hhbmRsZXIvY29tbWFuZC1oYW5kbGVycyc7XG5leHBvcnQge0RvbWFpbkV2ZW50U3RvcmUgYXMgybVmfSBmcm9tICcuL2RvbWFpbi9ldmVudC9kb21haW4tZXZlbnQuc3RvcmUnO1xuZXhwb3J0IHtNZXNzYWdlIGFzIMm1ZH0gZnJvbSAnLi9kb21haW4vbWVzc2FnZSc7XG5leHBvcnQge0NvbnNvbGVDb21tYW5kTG9nZ2VyIGFzIMm1aX0gZnJvbSAnLi9pbmZyYXN0cnVjdHVyZS9sb2dnZXIvY29tbWFuZC9jb25zb2xlLmNvbW1hbmQubG9nZ2VyJztcbmV4cG9ydCB7Tm9vcENvbW1hbmRMb2dnZXIgYXMgybVqfSBmcm9tICcuL2luZnJhc3RydWN0dXJlL2xvZ2dlci9jb21tYW5kL25vb3AuY29tbWFuZC5sb2dnZXInO1xuZXhwb3J0IHtDb25zb2xlRXZlbnRMb2dnZXIgYXMgybVrfSBmcm9tICcuL2luZnJhc3RydWN0dXJlL2xvZ2dlci9ldmVudC9jb25zb2xlLmV2ZW50LmxvZ2dlcic7XG5leHBvcnQge05vb3BFdmVudExvZ2dlciBhcyDJtWx9IGZyb20gJy4vaW5mcmFzdHJ1Y3R1cmUvbG9nZ2VyL2V2ZW50L25vb3AuZXZlbnQubG9nZ2VyJztcbmV4cG9ydCB7SGVybWVzRG9tYWluTW9kdWxlIGFzIMm1dH0gZnJvbSAnLi91aS1hcGkvaGVybWVzLmRvbWFpbi5tb2R1bGUnO1xuZXhwb3J0IHtIZXJtZXNMb2dnZXJzSW5pdGlhbGl6ZXIgYXMgybVtfSBmcm9tICcuL3VpLWFwaS9oZXJtZXMubG9nZ2Vycy5pbml0aWFsaXplcic7XG5leHBvcnQge2NvbW1hbmRMb2dnZXJGYWN0b3J5IGFzIMm1YSxldmVudExvZ2dlckZhY3RvcnkgYXMgybVifSBmcm9tICcuL3VpLWFwaS9oZXJtZXMubW9kdWxlJzsiXX0=