{"version":3,"file":"generic-ui-hermes.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../build-cli/projects/gui-hermes/src/core/api/logger/logger.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.logger.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.logger.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes-api.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes-api.helpers.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-handlers.ts","../../build-cli/projects/gui-hermes/src/core/domain/provider.helpers.ts","../../build-cli/projects/gui-hermes/src/common/stream/subscription/hermes.subscription.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/subscriber/hermes.subscriber.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.observable.ts","../../build-cli/projects/gui-hermes/src/common/stream/subscription/hermes-empty.subscription.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.subject.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.stream.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.dispatcher.ts","../../build-cli/projects/gui-hermes/src/common/random-string.generator.ts","../../build-cli/projects/gui-hermes/src/core/domain/message/message.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.ts","../../build-cli/projects/gui-hermes/src/core/domain/message/message-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-factory.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/filtered-command-stream.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/operator-utils.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.filter.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.bus.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-event.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-event-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-repository.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/store/aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/store/aggregate-store.register.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-root.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/hermes.id.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-id.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.of.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.empty.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.take.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.stream.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.publisher.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.bus.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-type.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.take-until.ts","../../build-cli/projects/gui-hermes/src/infrastructure/rxjs/to-rxjs-observable.ts","../../build-cli/projects/gui-hermes/src/common/reactive.ts","../../build-cli/projects/gui-hermes/src/common/reactive.service.ts","../../build-cli/projects/gui-hermes/src/common/optional.ts","../../build-cli/projects/gui-hermes/src/common/collections/key-map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.distinct-until-changed.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.behavior-subject.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.replay-subject.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.archive-subject.ts","../../build-cli/projects/gui-hermes/src/common/key.archive.ts","../../build-cli/projects/gui-hermes/src/common/aggregate.archive.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/event-driven.repository.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-entity.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-entity-id.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root-id.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root.repository.ts","../../build-cli/projects/gui-hermes/src/core/api/read/store/read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/api/event/event.repository.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/entity.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/entity.id.ts","../../build-cli/projects/gui-hermes/src/core/domain/decorators.ts","../../build-cli/projects/gui-hermes/src/core/domain/domain-module.ts","../../build-cli/projects/gui-hermes/src/core/api/api-module.ts","../../build-cli/projects/gui-hermes/src/feature/feature-module.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.never.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.interval.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.timer.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.from-event.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/subscriber/hermes.single-subscriber.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/single/hermes.single.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/single/hermes.single-from-observable.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.throw-error.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.skip.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.switch-map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.tap.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.to-array.ts","../../build-cli/projects/gui-hermes/src/infrastructure/rxjs/from-rxjs-observable.ts","../../build-cli/projects/gui-hermes/src/common/archive.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/persist-anemia.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/persist-state.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/read/persist.read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/command/persist-aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/command/in-memory.aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/read/in-memory.read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/in-memory.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/hermes-tokens.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/command/console.command.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/command/noop.command.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/event/console.event.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/event/noop.event.logger.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.loggers.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command-handlers-token.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/define.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/aggregate-definition.token.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.domain.module.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-handlers.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/init/domain-event-handler.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/init/command-handler.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/aggregate-definition.initializer.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.module.ts","../../build-cli/projects/gui-hermes/src/testing/helpers.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command.ts","../../build-cli/projects/gui-hermes/src/generic-ui-hermes.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Message } from '../../domain/message/message';\n\nexport abstract class Logger<M extends Message<any>> {\n\n\tprivate domainName: string;\n\n\tabstract start(): void;\n\n\tabstract stop(): void;\n\n\tprotected abstract print(message: M): void;\n\n\tsetDomain(domainName: string): void {\n\t\tthis.domainName = domainName;\n\t}\n\n\tlog(message: M): void {\n\t\tif (this.shouldPrint(message)) {\n\t\t\tthis.print(message);\n\t\t}\n\t}\n\n\tprotected shouldPrint(message: M): boolean {\n\n\t\tif (!this.domainName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst log: string = message.toString();\n\n\t\treturn log.includes(this.domainName);\n\t}\n}\n","import { Command } from './command';\nimport { Logger } from '../../api/logger/logger';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class CommandLogger extends Logger<Command<AggregateId>> {\n}\n","import { DomainEvent } from './domain-event';\nimport { Logger } from '../../api/logger/logger';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class DomainEventLogger extends Logger<DomainEvent<AggregateId>> {\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\n\ndeclare const window: any;\n\nexport const hermesApi = 'hermesApi';\n\n@Injectable()\nexport class HermesApi {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: Object,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\tconst api = (api: HermesApi) => {\n\t\t\t\treturn {\n\t\t\t\t\tset loggers(enabled: boolean) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tapi.commandLogger.start();\n\t\t\t\t\t\t\tapi.eventLogger.start();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapi.commandLogger.stop();\n\t\t\t\t\t\t\tapi.eventLogger.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset domain(domainName: string) {\n\t\t\t\t\t\tif (domainName) {\n\t\t\t\t\t\t\tapi.commandLogger.setDomain(domainName);\n\t\t\t\t\t\t\tapi.eventLogger.setDomain(domainName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\twindow[hermesApi] = api(this);\n\n\t\t\twindow[hermesApi].loggers = false;\n\t\t}\n\t}\n}\n","import { hermesApi } from './hermes-api';\n\ndeclare const window: Window;\n\nexport function enableHermesLoggers(domainName?: string, windowObject?: Window): void {\n\n\tconst winRef = windowObject ? windowObject : window;\n\n\tif (domainName) {\n\t\twinRef[hermesApi].domain = domainName;\n\t}\n\n\twinRef[hermesApi].loggers = true;\n}\n\nexport function disableHermesLoggers(windowObject?: Window): void {\n\n\tconst winRef = windowObject ? windowObject : window;\n\n\tdelete winRef[hermesApi].domain;\n\n\twinRef[hermesApi].loggers = false;\n}\n","export const DOMAIN_EVENT_HANDLERS = 'HERMES - DOMAIN_EVENT_HANDLERS_TOKEN';\n","import { StaticProvider, Type } from '@angular/core';\n\nimport { DomainEvent } from './event/domain-event';\n\nimport { AggregateId } from './tactical/aggregate/aggregate-id';\nimport { DomainEventHandler } from './event/handler/domain-event.handler';\nimport { DOMAIN_EVENT_HANDLERS } from './event/handler/domain-event-handlers';\n\nexport function provideEventHandlers<I extends AggregateId, E extends DomainEvent<I>>(handlers: Array<Type<DomainEventHandler<I, E>>>): Array<StaticProvider> {\n\treturn handlers.map((handler: Type<DomainEventHandler<I, E>>) => {\n\t\treturn {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: handler,\n\t\t\tmulti: true\n\t\t};\n\t}) as any;\n}\n","export class HermesSubscription {\n\n\tprivate closed: boolean = false;\n\n\t// tslint-disable-next-line\n\tprivate readonly finalize: () => void = () => {};\n\n\tconstructor(finalize?: () => void, isClosed?: boolean) {\n\n\t\tif (finalize !== undefined && finalize !== null &&\n\t\t\ttypeof finalize === 'function') {\n\t\t\tthis.finalize = finalize;\n\t\t}\n\n\t\tif (isClosed !== undefined && isClosed !== null) {\n\t\t\tthis.closed = isClosed;\n\t\t}\n\t}\n\n\tunsubscribe(): void {\n\n\t\tif (this.closed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closed = true;\n\t\tthis.finalize();\n\t}\n\n\tgetFinalize(): () => void {\n\t\treturn this.finalize;\n\t}\n}\n","import { HermesObserver } from '../hermes.observer';\n\nexport class HermesSubscriber<T> {\n\n\tprivate observer: Partial<HermesObserver<T>>;\n\n\t// eslint-disable-next-line\n\tprivate finalize: () => void = () => {\n\t};\n\n\tprivate completed: boolean = false;\n\n\tprivate closed: boolean = false;\n\n\tconstructor(config: Partial<HermesObserver<T>>) {\n\t\tthis.observer = config;\n\t}\n\n\tnext(value: T): void {\n\n\t\tif (this.isCompleted()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.observer && this.observer.next) {\n\t\t\tthis.observer.next(value);\n\t\t}\n\t}\n\n\terror(error: any): void {\n\n\t\tif (this.completed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.observer && this.observer.error) {\n\t\t\tthis.observer.error(error);\n\t\t}\n\t\tthis.unsubscribe();\n\t}\n\n\tcomplete(): void {\n\n\t\tif (this.completed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.completed = true;\n\t\tif (this.observer && this.observer.complete) {\n\t\t\tthis.observer.complete();\n\t\t}\n\n\t\tthis.unsubscribe();\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.closed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closed = true;\n\t\tthis.completed = true;\n\n\t\tthis.finalize();\n\t}\n\n\tsetFinalize(finalize: () => void): void {\n\t\tif (finalize && typeof finalize === 'function') {\n\t\t\tthis.finalize = finalize;\n\t\t} else {\n\n\t\t}\n\t}\n\n\tprotected isCompleted(): boolean {\n\t\treturn this.completed;\n\t}\n\n\tprotected isClosed(): boolean {\n\t\treturn this.closed;\n\t}\n\n\tprotected getObserver(): Partial<HermesObserver<T>> {\n\t\treturn this.observer;\n\t}\n\n}\n","import { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\nimport { HermesObserver } from './hermes.observer';\n\n\nexport interface HermesOperatorFunction<T, R> {\n\t(source: HermesObservable<T>): HermesObservable<R>\n}\n\nexport class HermesObservable<T> {\n\n\tprotected readonly generatorFn: any;\n\n\tprivate source: HermesObservable<T>;\n\n\t// private operator: HermesObservable<T>;\n\n\t// eslint-disable-next-line\n\tprivate generatorFinalize: () => void;\n\n\tconstructor(generator?: (observer?: HermesObserver<T>) => void) {\n\t\tthis.generatorFn = generator;\n\t}\n\n\tpipe<T, R>(...operations: Array<HermesOperatorFunction<any, any>>): HermesObservable<any> {\n\t\tthis.source = this;\n\n\t\tfor (const operation of operations) {\n\t\t\tthis.source = this.innerPipe(operation, this.source);\n\t\t}\n\t\treturn this.source;\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\tobserver: Partial<HermesObserver<T>>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else if (arg !== null && this.isObserver(arg)) {\n\n\t\t\tconst { next, error, complete } = arg;\n\n\t\t\tsubscriber = this.createSubscriber(next, error, complete);\n\t\t} else {\n\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tif (this.generatorFn) {\n\t\t\tthis.generatorFinalize = this.generatorFn(subscriber);\n\t\t\tsubscriber.setFinalize(this.generatorFinalize);\n\t\t}\n\n\t\treturn this.getSubscription();\n\t}\n\n\tprotected createSubscriber(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscriber<T> {\n\t\treturn new HermesSubscriber({\n\t\t\tnext,\n\t\t\terror,\n\t\t\tcomplete\n\t\t});\n\t}\n\n\tprotected getSubscription(): HermesSubscription {\n\t\treturn new HermesSubscription(this.generatorFinalize);\n\t}\n\n\tprivate innerPipe<T, R>(operation: HermesOperatorFunction<T, R>, stream$: HermesObservable<T>): HermesObservable<R> {\n\t\treturn ((input: any) => {\n\t\t\treturn operation(input);\n\t\t})(stream$);\n\t}\n\n\tprivate isObserver(observer: any): boolean {\n\t\treturn typeof observer === 'object';\n\t}\n\n}\n","import { HermesSubscription } from './hermes.subscription';\n\nexport function hermesEmptySubscription(): HermesSubscription {\n\treturn new HermesSubscription(() => {\n\t}, true);\n}\n","import { HermesObservable } from './hermes.observable';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\nimport { hermesEmptySubscription } from '../subscription/hermes-empty.subscription';\n\nexport class HermesSubject<T> extends HermesObservable<T> {\n\n\t/**\n\t * After error\n\t */\n\tprivate thrownError: Error | string = null;\n\n\t/**\n\t * After complete\n\t */\n\tprivate isCompleted: boolean = false;\n\n\t/**\n\t * After unsubscribe\n\t */\n\tprivate isClosed: boolean = false;\n\n\tprivate readonly subscribers: Array<HermesSubscriber<T>> = [];\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tnext(value: T): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted || this.thrownError !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.next(value);\n\t\t}\n\t}\n\n\terror(error: any): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.thrownError = error;\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.error(error);\n\t\t}\n\t\tthis.subscribers.length = 0;\n\t}\n\n\tcomplete(): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isCompleted = true;\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.complete();\n\t\t}\n\t\tthis.subscribers.length = 0;\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tthis.verifyNotClosed();\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else {\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tif (this.thrownError !== null) {\n\t\t\tsubscriber.error(this.thrownError);\n\t\t\treturn hermesEmptySubscription();\n\t\t} else if (this.isCompleted) {\n\t\t\tsubscriber.complete();\n\t\t\treturn hermesEmptySubscription();\n\t\t} else {\n\t\t\tthis.subscribers.push(subscriber);\n\t\t\treturn this.getSubscription();\n\t\t}\n\t}\n\n\tunsubscribe(): void {\n\t\tthis.isCompleted = true;\n\t\tthis.isClosed = true;\n\t\tthis.subscribers.length = 0;\n\t}\n\n\ttoObservable(): HermesObservable<T> {\n\t\treturn new HermesObservable((observer) => {\n\t\t\tconst subscription = this.subscribe(\n\t\t\t\t(v) => observer.next(v),\n\t\t\t\t(error) => observer.error(error),\n\t\t\t\t() => observer.complete()\n\t\t\t);\n\n\t\t\treturn () => subscription.unsubscribe();\n\t\t});\n\t}\n\n\tprivate verifyNotClosed(): void {\n\t\tif (this.isClosed) {\n\t\t\tthrow new Error('Observable already closed');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class CommandStream extends HermesSubject<Command<AggregateId>> {\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandStream } from './command.stream';\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\n\n@Injectable()\nexport class CommandDispatcher {\n\n\tconstructor(private readonly commandStream: CommandStream) {\n\t}\n\n\tdispatch(command: Command<AggregateId>): void {\n\t\tthis.commandStream.next(command);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RandomStringGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): string {\n\t\treturn Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + `${RandomStringGenerator.index++}`;\n\t}\n\n}\n","import { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nimport { RandomStringGenerator } from '../../../common/random-string.generator';\n\nexport abstract class Message<I extends AggregateId> {\n\n\tprotected constructor(private readonly aggregateId: I,\n\t\t\t\t\t\t  protected readonly messageType: string,\n\t\t\t\t\t\t  private readonly messageId: string = RandomStringGenerator.generate()) {\n\t}\n\n\tgetMessageType(): string {\n\t\treturn this.messageType;\n\t}\n\n\tgetAggregateId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetMessageId(): string {\n\t\treturn this.messageId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.messageType;\n\t}\n\n\tequalsByType(message: Message<I>): boolean {\n\t\treturn this.getMessageType() === message.getMessageType();\n\t}\n\n\tequals(message: Message<I>): boolean {\n\t\treturn (this.getMessageType() === message.getMessageType()) && (this.messageId === message.messageId);\n\t}\n\n\tofMessageType(messageType: string): boolean;\n\tofMessageType(messageTypes: Array<string>): boolean;\n\tofMessageType(arg: string | Array<string>): boolean {\n\n\t\tif (Array.isArray(arg)) {\n\n\t\t\tconst found = arg.find((messageType: string) => this.isMessageType(messageType));\n\n\t\t\treturn !!found;\n\n\t\t} else {\n\t\t\treturn this.isMessageType(arg);\n\t\t}\n\t}\n\n\tprivate isMessageType(messageType: string): boolean {\n\t\treturn this.getMessageType() === messageType;\n\t}\n}\n","import { Message } from '../message/message';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class Command<I extends AggregateId> extends Message<I> {\n}\n","export const MessageType = Function;\n\n// eslint-disable-next-line no-redeclare\nexport interface MessageType<T> extends Function {\n\tnew(...args: any[]): T;\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const CommandType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface CommandType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from './aggregate-id';\n\nexport abstract class AggregateFactory<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract create(aggregateId: I): A;\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\nexport const FILTERED_COMMAND_STREAM = new InjectionToken<HermesSubject<Command<AggregateId>>>('FILTERED_COMMAND_STREAM');\n","import { HermesObserver } from '../observable/hermes.observer';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\n\nexport function subscriberForOperator<T>(\n\tobserver: HermesObserver<T>,\n\tnext?: (value: T) => void,\n\tcomplete?: () => void): HermesSubscriber<T> {\n\n\tconst nextFn = next ? next : (v: T) => {\n\t\t\tobserver.next(v);\n\t\t},\n\t\tcompleteFn = complete ? complete : () => {\n\t\t\tobserver.complete();\n\t\t};\n\n\treturn new HermesSubscriber({\n\t\tnext: nextFn,\n\t\terror: (e: any) => observer.error(e),\n\t\tcomplete: completeFn\n\t});\n}\n\nexport function subscriberFromObserver<T>(observer: HermesObserver<T>): HermesSubscriber<T> {\n\treturn new HermesSubscriber({\n\t\tnext: (v: T) => observer.next(v),\n\t\terror: (e: any) => observer.error(e),\n\t\tcomplete: () => observer.complete()\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\nexport function hermesFilter<T>(operation: (value: any) => boolean): HermesOperatorFunction<T, T> {\n\treturn (source) => {\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\tif (operation(value)) {\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { Command } from './command';\nimport { FILTERED_COMMAND_STREAM } from './filtered-command-stream';\nimport { AggregateRoot } from '../tactical/aggregate/aggregate-root';\nimport { CreateAggregateCommandHandlerImpl } from './create-aggregate/create-aggregate.command-handler-impl';\nimport { CommandHandlerImpl } from './handler/command-handler-impl';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { CreateAggregateCommand } from './create-aggregate/create-aggregate.command';\nimport { CommandStream } from './command.stream';\nimport { HermesSubscription } from '../../../common/stream/subscription/hermes.subscription';\nimport { HermesSubscriber } from '../../../common/stream/observable/subscriber/hermes.subscriber';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\n\n@Injectable()\nexport class CommandBus<C = Command<AggregateId>> extends HermesObservable<C> {\n\n\tconstructor(@Inject(FILTERED_COMMAND_STREAM) private readonly commandsStream: CommandStream) {\n\t\tsuper();\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: C) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<C>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\treturn this.commandsStream.toObservable().subscribe(arguments[0], arguments[1], arguments[2]);\n\t}\n\n\tofCommand<C2 extends C>(...commandTypes: Array<string>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\t\t\t\t\treturn commandTypes.some((commandType: string) => command.ofMessageType(commandType));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCommandHandler<C2 extends C>(...handlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\t\t\t\t\treturn handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>) => {\n\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCreateAggregateHandler<C2 extends C>(\n\t\t...handlers: Array<CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, CreateAggregateCommand>>\n\t): any {\n\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: CreateAggregateCommand) => {\n\t\t\t\t\treturn handlers.some((handler: CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, CreateAggregateCommand>) => {\n\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofNullHandler<C2 extends C>(\n\t\thandlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>>,\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, CreateAggregateCommand>>\n\t): any {\n\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\n\t\t\t\t\tif (!handlers && !aggregateCommandHandlers) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet foundHandlerForCommand = true;\n\n\t\t\t\t\tif (handlers) {\n\t\t\t\t\t\tfoundHandlerForCommand =\n\t\t\t\t\t\t\t!handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>) => {\n\t\t\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aggregateCommandHandlers) {\n\t\t\t\t\t\tfoundHandlerForCommand = foundHandlerForCommand &&\n\t\t\t\t\t\t\t!aggregateCommandHandlers.some((handler: CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, any>) => {\n\t\t\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn foundHandlerForCommand;\n\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { AggregateId } from './aggregate-id';\nimport { DomainEvent } from '../../event/domain-event';\n\nexport abstract class AggregateEvent<T extends AggregateId> {\n\n\tprotected constructor(\n\t\tprivate readonly aggregateId: T,\n\t\tprivate readonly type: string) {\n\t}\n\n\tabstract toDomainEvent(): DomainEvent<T>;\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tequals(event: AggregateEvent<T>): boolean {\n\t\treturn this.equalsByType(event) &&\n\t\t\tthis.getAggregateId().equals(event.getAggregateId());\n\t}\n\n\tequalsByType(event: AggregateEvent<T>): boolean {\n\t\treturn this.getType() === event.getType();\n\t}\n\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const AggregateEventType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface AggregateEventType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from './aggregate-id';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class AggregateRepository<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract findById(aggregateId: I): Optional<A>;\n\n\tabstract save(aggregate: A): void;\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class AggregateStore<I extends AggregateId, S extends AggregateRoot<I>> {\n\n\tabstract save(aggregate: S): void ;\n\n\tabstract findById(aggregateId: I): Optional<S>;\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { AggregateStore } from './aggregate.store';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\nexport class AggregateStoreRegister {\n\n\tprivate readonly stores: Array<AggregateStore<AggregateId, AggregateRoot<AggregateId>>> = [];\n\n\tregister(store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>): void {\n\t\tthis.stores.push(store);\n\t}\n\n\tcaptureAggregatesSnapshot(aggregateId: AggregateId): { [key: string]: AggregateRoot<AggregateId> } {\n\n\t\tif (!aggregateId) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst aggregates = {};\n\n\t\tthis.stores.forEach((store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>) => {\n\n\t\t\tconst aggregate = store.findById(aggregateId);\n\n\t\t\tif (aggregate) {\n\n\t\t\t\tconst aggregateName = aggregate.constructor.name;\n\n\t\t\t\taggregates[aggregateName] = aggregate;\n\t\t\t}\n\n\t\t});\n\n\t\treturn this.cloneAggregates(aggregates);\n\t}\n\n\tprivate cloneAggregates(aggregates: { [key: string]: AggregateRoot<AggregateId> }): { [key: string]: AggregateRoot<AggregateId> } {\n\t\t// return JSON.parse(JSON.stringify(aggregates));\n\t\treturn aggregates;\n\t}\n}\n","import { AggregateEvent } from './aggregate-event';\nimport { AggregateId } from './aggregate-id';\nimport { AggregateEventType } from './aggregate-event-type';\n\n\nexport abstract class AggregateRoot<I extends AggregateId> {\n\n\tprivate readonly aggregateId: I;\n\n\tprivate readonly events: Array<AggregateEvent<I>>;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  private readonly type: string) {\n\t\tthis.aggregateId = aggregateId;\n\t\tthis.events = [];\n\t}\n\n\tabstract createEvent(): AggregateEventType<AggregateEvent<I>>;\n\n\tgetId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tgetEvents(): ReadonlyArray<AggregateEvent<I>> {\n\t\treturn this.events as ReadonlyArray<AggregateEvent<I>>;\n\t}\n\n\taddEvent(event: AggregateEvent<I>): void;\n\taddEvent(events: Array<AggregateEvent<I>>): void;\n\taddEvent(args: AggregateEvent<I> | Array<AggregateEvent<I>>): void {\n\n\t\tif (Array.isArray(args)) {\n\t\t\tfor (const event of args) {\n\t\t\t\tthis.events.push(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events.push(args as AggregateEvent<I>);\n\t\t}\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tequals(aggregate: AggregateRoot<I>): boolean {\n\t\treturn aggregate.getId().toString() === this.getId().toString();\n\t}\n}\n","export abstract class HermesId<T> {\n\n\tprivate readonly uid: T;\n\n\tprotected constructor(uid: T) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toString(): string;\n\n\tgetId(): T {\n\t\treturn this.uid;\n\t}\n\n\tequals(hermesId: HermesId<T>): boolean {\n\t\treturn this.uid === hermesId.getId();\n\t}\n}\n","import { ReadModelRootId } from '../../../api/read/read-model-root-id';\nimport { HermesId } from '../hermes.id';\n\nexport abstract class AggregateId extends HermesId<string> {\n\n\tprotected constructor(uid: string) {\n\t\tsuper(uid);\n\t}\n\n\tabstract toReadModelRootId(): ReadModelRootId;\n\n\ttoString(): string {\n\t\treturn super.getId();\n\t}\n\n}\n","import { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { Message } from '../message/message';\n\n\nexport abstract class DomainEvent<I extends AggregateId = AggregateId> extends Message<I> {\n\n\tprivate readonly payload: any;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  payload: any,\n\t\t\t\t\t\t  messageType: string) {\n\t\tsuper(aggregateId, messageType);\n\t\tthis.payload = payload;\n\t}\n\n\tisSameType(event: DomainEvent<I>): boolean {\n\t\treturn this.constructor.name === event.constructor.name;\n\t}\n\n\tgetPayload(): any {\n\t\treturn this.payload;\n\t}\n}\n","import { HermesObservable } from '../hermes.observable';\n\nexport function hermesOf<T>(...args: Array<T>): HermesObservable<T> {\n\n\treturn new HermesObservable<T>(observer => {\n\n\t\targs.forEach(value => {\n\t\t\tobserver.next(value);\n\t\t});\n\n\t\tobserver.complete();\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesEmpty<T>(): HermesObservable<T> {\n\treturn new HermesObservable<T>((observer: HermesObserver<T>) => {\n\t\tobserver.complete();\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { hermesEmpty } from '../observable/creator/hermes.empty';\n\n\nexport function hermesTake<T>(valuesNumber: number): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\n\t\tif (valuesNumber === 0) {\n\t\t\treturn hermesEmpty();\n\t\t}\n\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = new HermesSubscriber({\n\t\t\t\tnext: (v: T) => {\n\t\t\t\t},\n\t\t\t\terror: (e: any) => observer.error(e),\n\t\t\t\tcomplete: () => observer.complete()\n\t\t\t});\n\n\t\t\t(subscriber as any).observer.next = function(v: any) {\n\t\t\t\tif (index < valuesNumber) {\n\t\t\t\t\tobserver.next(v);\n\t\t\t\t\tindex++;\n\n\t\t\t\t\tif (index === valuesNumber) {\n\t\t\t\t\t\tsubscriber.complete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst subscription = source.subscribe(\n\t\t\t\tsubscriber\n\t\t\t);\n\n\t\t\treturn subscription.getFinalize();\n\t\t});\n\t};\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\nimport { hermesOf } from '../../../common/stream/observable/creator/hermes.of';\nimport { hermesTake } from '../../../common/stream/operator/hermes.take';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\n\n\n@Injectable()\nexport class DomainEventStore {\n\n\tprivate readonly domainEvents: Array<DomainEvent<AggregateId>> = [];\n\n\tprivate readonly domainEvents$: HermesSubject<DomainEvent<AggregateId>> = new HermesSubject<DomainEvent<AggregateId>>();\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tthis.domainEvents.push(event);\n\t\tthis.domainEvents$.next(event);\n\t}\n\n\tfindEventByType(eventType: string): DomainEvent<AggregateId> {\n\n\t\tconst events: Array<DomainEvent<AggregateId>> = this.getEvents();\n\n\t\treturn events.reverse()\n\t\t\t\t\t .find((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\t\t return event.constructor.name === eventType;\n\t\t\t\t\t });\n\t}\n\n\t/**\n\t * First tries to event event in the history,\n\t * than method waits for future occurrences of the event.\n\t */\n\twaitForEvent(eventType: string): HermesObservable<DomainEvent<AggregateId>> {\n\n\t\t// find in a history\n\t\tconst event = this.findEventByType(eventType);\n\n\t\tif (event) {\n\t\t\treturn hermesOf(event);\n\t\t}\n\n\t\t// wait for future occurrence\n\t\treturn this.waitForNextEventOccurrence(eventType);\n\t}\n\n\twaitForNextEventOccurrence(eventType: string): HermesObservable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(event: DomainEvent<AggregateId>): HermesObservable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(arg: string | DomainEvent<AggregateId>): HermesObservable<DomainEvent<AggregateId>> {\n\n\t\tlet eventType: string;\n\n\t\tif (arg instanceof DomainEvent) {\n\t\t\teventType = arg.constructor.name;\n\t\t} else if (typeof arg === 'string') {\n\t\t\teventType = arg;\n\t\t} else {\n\t\t\treturn new HermesObservable((observer) => {\n\t\t\t\tobserver.error(new Error('Unsupported argument type.'));\n\t\t\t});\n\t\t\t// return throwError(new Error('Unsupported argument type.'));\n\t\t}\n\n\t\treturn this.domainEvents$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event) => event.constructor.name === eventType),\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tprivate getEvents(): Array<DomainEvent<AggregateId>> {\n\t\treturn this.domainEvents;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStore } from './domain-event.store';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class DomainEventStream extends HermesSubject<DomainEvent<AggregateId>> {\n\n\tconstructor(private readonly eventStore: DomainEventStore) {\n\t\tsuper();\n\t}\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tsuper.next(event);\n\t\tthis.eventStore.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateEvent } from '../tactical/aggregate/aggregate-event';\n\nimport { DomainEventStream } from './domain-event.stream';\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../tactical/aggregate/aggregate-root';\n\n\n@Injectable()\nexport class DomainEventPublisher {\n\n\tconstructor(private readonly eventStream: DomainEventStream) {\n\t}\n\n\tpublish(event: DomainEvent<AggregateId>): void;\n\tpublish(events: ReadonlyArray<DomainEvent<AggregateId>>): void;\n\tpublish(args: DomainEvent<AggregateId> | ReadonlyArray<DomainEvent<AggregateId>>): void {\n\n\t\tif (Array.isArray(args)) {\n\n\t\t\tfor (const arg of args) {\n\t\t\t\tthis.publishEvent(arg);\n\t\t\t}\n\t\t} else if (args instanceof DomainEvent) {\n\t\t\tthis.publishEvent(args);\n\t\t}\n\t}\n\n\tpublishFromAggregate(aggregate: AggregateRoot<AggregateId>): void {\n\n\t\taggregate.getEvents()\n\t\t\t\t .forEach((aggregateEvent: AggregateEvent<AggregateId>) => {\n\t\t\t\t\t this.publish(\n\t\t\t\t\t\t aggregateEvent.toDomainEvent()\n\t\t\t\t\t );\n\t\t\t\t });\n\t}\n\n\tprivate publishEvent(event: DomainEvent<AggregateId>): void {\n\n\t\tif (!event) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`${event} is not defined`);\n\t\t}\n\n\t\tif (!(event instanceof DomainEvent)) {\n\t\t\t// throw new Error(`${event} is not a DomainEvent`);\n\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`${event} is not a DomainEvent`);\n\t\t}\n\n\t\tthis.eventStream.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStream } from './domain-event.stream';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { DomainEventHandlerImpl } from './handler/domain-event-handler-impl';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesSubscription } from '../../../common/stream/subscription/hermes.subscription';\nimport { HermesSubscriber } from '../../../common/stream/observable/subscriber/hermes.subscriber';\n\n@Injectable()\nexport class DomainEventBus<E = DomainEvent<AggregateId>> extends HermesObservable<E> {\n\n\tconstructor(private readonly eventStream: DomainEventStream) {\n\t\tsuper();\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: E) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<E>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\treturn this.eventStream.toObservable().subscribe(arguments[0], arguments[1], arguments[2]);\n\t}\n\n\tofEvents<E2 extends E>(events: Array<typeof DomainEvent>): HermesObservable<any> {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.eventStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn events.some((event: typeof DomainEvent) => {\n\t\t\t\t\t\tconst eventInstance = this.createEventInstance(event);\n\t\t\t\t\t\treturn eventInstance.equalsByType(domainEvent);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofEventHandlers<E2 extends E>(handlers: Array<DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>>): any {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.eventStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn handlers.some((handler: DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>) => handler.forEvents([event]));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tprivate createEventInstance(event: typeof DomainEvent): DomainEvent<AggregateId> {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = event.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (event as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (event as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (event as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('DomainEventBus constructor out of arguments');\n\t\t}\n\t}\n\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const DomainEventType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface DomainEventType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { subscriberFromObserver } from './operator-utils';\n\n\nexport function hermesTakeUntil<T>(notifier: HermesObservable<any>): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\t\treturn new HermesObservable<T>(observer => {\n\n\t\t\tconst subscriber = subscriberFromObserver(observer);\n\n\t\t\tconst notifierSubscriber = new HermesSubscriber({\n\t\t\t\tnext: () => subscriber.complete()\n\t\t\t});\n\n\t\t\tnotifier.subscribe(notifierSubscriber);\n\n\t\t\tconst subscription = source.subscribe(subscriber);\n\n\t\t\treturn subscription.getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable } from '../../common/stream/observable/hermes.observable';\nimport { Observable } from 'rxjs';\n\nexport function toRxJsObservable<T>(source$: HermesObservable<T>): Observable<T> {\n\treturn new Observable((observer) => {\n\t\tconst subscription = source$.subscribe(\n\t\t\t(value: T) => observer.next(value),\n\t\t\t(error: any) => observer.error(error),\n\t\t\t() => observer.complete()\n\t\t);\n\t\treturn () => subscription.unsubscribe();\n\t});\n}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { HermesSubject } from './stream/observable/hermes.subject';\nimport { hermesTakeUntil } from './stream/operator/hermes.take-until';\nimport { toRxJsObservable } from '../infrastructure/rxjs/to-rxjs-observable';\nimport { takeUntil } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class Reactive {\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected takeUntil<T>(): MonoTypeOperatorFunction<T> {\n\t\treturn takeUntil(\n\t\t\ttoRxJsObservable(this.hermesUnsubscribe$)\n\t\t);\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected isNotStopped(): boolean {\n\t\treturn !(this.hermesUnsubscribe$ as any).isCompleted;\n\t}\n\n}\n","import { OnDestroy, Injectable } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\n@Injectable()\nexport abstract class ReactiveService extends Reactive implements OnDestroy {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n}\n","export class Optional<T> {\n\n\tprivate readonly value: T;\n\n\tprivate constructor(value: T) {\n\n\t\tif (Optional.isValueEmpty(value)) {\n\t\t\tthis.value = null;\n\t\t} else {\n\t\t\tthis.value = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tstatic empty(): Optional<any> {\n\t\treturn new Optional<any>(null);\n\t}\n\n\tstatic of<U>(value: U): Optional<U> {\n\t\treturn new Optional<U>(value);\n\t}\n\n\tprivate static isValueEmpty(value: any): boolean {\n\t\treturn typeof value === 'undefined' || value === null;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn Optional.isValueEmpty(this.value);\n\t}\n\n\tisPresent(): boolean {\n\t\treturn !this.isEmpty();\n\t}\n\n\tfilter(filterer: (value: T) => boolean): Optional<T> {\n\t\tif (this.isPresent() && filterer(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\tforEach(callback: (value: T) => any): void {\n\t\tif (this.isPresent()) {\n\t\t\tcallback(this.value);\n\t\t}\n\t}\n\n\tmap<U>(mapper: (value: T) => U): Optional<U> {\n\t\tif (this.isPresent()) {\n\t\t\treturn new Optional<U>(mapper(this.value));\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetValueOrNullOrThrowError(): T {\n\t\treturn this.value;\n\t}\n\n\tgetOrThrow(): T {\n\t\tif (this.isEmpty()) {\n\t\t\tthrow new Error('Called getOrThrow on an empty Optional');\n\t\t}\n\t\treturn this.value;\n\t}\n\n\tgetOrElse<U extends T>(other: () => U): T {\n\t\tif (this.isPresent()) {\n\t\t\treturn this.value;\n\t\t}\n\t\treturn other();\n\t}\n\n\tifPresent(method: (value: T) => void): void {\n\t\tif (this.isPresent()) {\n\t\t\tmethod(this.value);\n\t\t}\n\t}\n\n\tifEmpty(method: () => void): void {\n\t\tif (this.isEmpty()) {\n\t\t\tmethod();\n\t\t}\n\t}\n\n\torElse<U extends T>(other: () => Optional<U>): Optional<T> {\n\t\tif (this.isPresent()) {\n\t\t\treturn this;\n\t\t}\n\t\treturn other();\n\t}\n\n}\n","import { Key } from './key';\nimport { Optional } from '../optional';\n\nexport class KeyMap<K extends Key, T> {\n\n\tprivate readonly keys = new Map<string, K>();\n\n\tprivate readonly values = new WeakMap<K, T>();\n\n\tget(key: K): Optional<T> {\n\n\t\tconst internalKey = this.getInternalKey(key);\n\n\t\tif (internalKey !== undefined) {\n\t\t\treturn Optional.of(this.values.get(internalKey));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n\n\thas(key: K): boolean {\n\n\t\tconst internalKey = this.getInternalKey(key);\n\n\t\treturn this.values.has(internalKey);\n\t}\n\n\tset(key: K, value: T): void {\n\t\tthis.keys.set(key.toString(), key);\n\t\tthis.values.set(key, value);\n\t}\n\n\tsize(): number {\n\t\treturn this.keys.size;\n\t}\n\n\tremove(key: K): void {\n\t\tif (this.hasInternalKey(key)) {\n\t\t\tthis.keys.delete(key.toString());\n\t\t\tthis.values.delete(key);\n\t\t}\n\t}\n\n\tremoveAll(): void {\n\t\tthis.keys.forEach((value) => {\n\t\t\tthis.values.delete(value);\n\t\t});\n\t\tthis.keys.clear();\n\t}\n\n\tprivate getInternalKey(key: K): K {\n\t\treturn this.keys.get(key.toString());\n\t}\n\n\tprivate hasInternalKey(key: K): boolean {\n\t\treturn this.keys.has(key.toString());\n\t}\n\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\nimport { HermesObserver } from '../observable/hermes.observer';\n\n\nexport function hermesMap<T, R>(convert: (value: T, index: number) => R): HermesOperatorFunction<T, R> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<R>((observer: HermesObserver<any>) => {\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value: T) => {\n\t\t\t\tobserver.next(convert(value, index++));\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesObserver } from '../observable/hermes.observer';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesDistinctUntilChanged<T>(compareFn?: (one: T, two: T) => boolean): HermesOperatorFunction<T, T> {\n\n\tconst compare = compareFn ? compareFn : defaultCompareFn;\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<T>((observer: HermesObserver<any>) => {\n\n\t\t\tlet previousValue: T = null;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value: T) => {\n\n\t\t\t\tif (previousValue === null || !compare(previousValue, value)) {\n\t\t\t\t\tpreviousValue = value;\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n\nfunction defaultCompareFn<T>(a: T, b: T): boolean {\n\treturn a === b;\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\n\nexport class HermesBehaviorSubject<T> extends HermesSubject<T> {\n\n\tprivate lastValue: T;\n\n\tconstructor(defaultValue: T) {\n\t\tsuper();\n\t\tthis.lastValue = defaultValue;\n\t}\n\n\tnext(value: T) {\n\t\tthis.lastValue = value;\n\t\tsuper.next(value);\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tconst subscription = super.subscribe(arguments[0], arguments[1], arguments[2]);\n\n\t\tsuper.next(this.lastValue);\n\n\t\treturn subscription;\n\t}\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\n\nexport class HermesReplaySubject<T> extends HermesSubject<T> {\n\n\tprivate readonly values: Array<T> = [];\n\n\tconstructor(private readonly bufferSize: number = 1) {\n\t\tsuper();\n\t}\n\n\tnext(value: T) {\n\t\tthis.values.push(value);\n\t\tif (this.bufferSize < this.values.length) {\n\t\t\tthis.values.shift();\n\t\t}\n\t\tsuper.next(value);\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else {\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tconst subscription = super.subscribe(subscriber);\n\n\t\tfor (const value of this.values) {\n\t\t\tsubscriber.next(value);\n\t\t}\n\n\t\treturn subscription;\n\t}\n\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesBehaviorSubject } from './hermes.behavior-subject';\nimport { HermesReplaySubject } from './hermes.replay-subject';\n\nexport class HermesArchiveSubject<T> extends HermesSubject<T> {\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tstatic of<T>(value?: T) {\n\t\tif (value !== undefined) {\n\t\t\treturn new HermesBehaviorSubject<T>(value);\n\t\t} else {\n\t\t\treturn new HermesReplaySubject<T>(1);\n\t\t}\n\t}\n}\n","import { ReactiveService } from './reactive.service';\nimport { KeyMap } from './collections/key-map';\nimport { Optional } from './optional';\nimport { hermesFilter } from './stream/operator/hermes.filter';\nimport { hermesMap } from './stream/operator/hermes.map';\nimport { hermesDistinctUntilChanged } from './stream/operator/hermes.distinct-until-changed';\nimport { HermesArchiveSubject } from './stream/observable/hermes.archive-subject';\nimport { HermesObservable } from './stream/observable/hermes.observable';\nimport { hermesTake } from './stream/operator/hermes.take';\nimport { Key } from './collections/key';\n\n\nexport abstract class KeyArchive<K extends Key, T> extends ReactiveService {\n\n\tprivate readonly archive = new KeyMap<K, T>();\n\n\tprivate readonly archive$: HermesArchiveSubject<KeyMap<K, T>>;\n\n\tprivate defaultValue: Optional<T> = Optional.empty();\n\n\tprotected constructor(defaultValue?: T) {\n\t\tsuper();\n\n\t\tthis.archive$ = HermesArchiveSubject.of();\n\n\t\tif (defaultValue !== undefined && defaultValue !== null) {\n\t\t\tthis.defaultValue = Optional.of(defaultValue);\n\t\t}\n\t}\n\n\ton(key: K): HermesObservable<T> {\n\n\t\tthis.tryToInitDefault(key);\n\n\t\treturn this.archive$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter(() => this.isNotStopped()),\n\t\t\t\t\t   hermesMap((map: KeyMap<K, T>) => {\n\t\t\t\t\t\t   return map.get(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((value: Optional<T>) => value.isPresent()),\n\t\t\t\t\t   hermesMap((value: Optional<T>) => value.getValueOrNullOrThrowError()),\n\t\t\t\t\t   hermesDistinctUntilChanged(this.equals),\n\t\t\t\t\t   this.hermesTakeUntil()\n\t\t\t\t   );\n\t}\n\n\tonce(key: K): HermesObservable<T> {\n\n\t\treturn this.on(key)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tget(key: K): Optional<T> {\n\n\t\tthis.tryToInitDefault(key);\n\n\t\treturn this.archive.get(key);\n\t}\n\n\tnext(key: K, value: T): void {\n\t\tthis.archive.set(key, value);\n\t\tthis.archive$.next(this.archive);\n\t}\n\n\tprotected equals(a: T, b: T): boolean {\n\t\treturn a === b;\n\t}\n\n\tprotected createDefaultValue(defaultValue: T): T {\n\t\treturn defaultValue;\n\t}\n\n\tprivate tryToInitDefault(key: K): void {\n\t\tthis.defaultValue\n\t\t\t.ifPresent((value) => {\n\n\t\t\t\tif (!this.archive.has(key)) {\n\t\t\t\t\tthis.next(key, value);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '../core/domain/tactical/aggregate/aggregate-id';\nimport { KeyArchive } from './key.archive';\n\n\nexport abstract class AggregateArchive<T> extends KeyArchive<AggregateId, T> {\n\n\tprotected constructor(defaultValue?: T) {\n\t\tsuper(defaultValue);\n\t}\n\n}\n","import { DomainEventHandler } from './domain-event.handler';\nimport { DomainEventType } from './domain-event-type';\nimport { AggregateArchive } from '../../../../common/aggregate.archive';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\n\n\nexport abstract class EventDrivenRepository<I extends AggregateId, E extends DomainEvent<I>, V>\n\textends AggregateArchive<V> implements DomainEventHandler<I, E> {\n\n\tprotected constructor(defaultValues?: V) {\n\t\tsuper(defaultValues);\n\t}\n\n\tabstract forEvent(): DomainEventType<E>;\n\n\thandle(event: E): void {\n\t\tthis.next(event.getAggregateId(), event.getPayload());\n\t}\n}\n","import { ReadModelEntityId } from './read-model-entity-id';\n\nexport abstract class ReadModelEntity<T extends ReadModelEntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.entityId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.entityId;\n\t}\n}\n","export class ReadModelEntityId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelEntityId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n}\n","import { ReadModelRootId } from './read-model-root-id';\n\nexport abstract class ReadModelRoot<T extends ReadModelRootId> {\n\n\tprivate readonly rootId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.rootId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.rootId;\n\t}\n\n}\n","import { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelRootId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toAggregateId(): AggregateId;\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelRootId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n\n}\n","import { DomainEvent } from '../../domain/event/domain-event';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\n\nimport { Reactive } from '../../../common/reactive';\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelRootRepository<I extends AggregateId> extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvents(\n\t\t\t\tthis.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<I>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subscribe(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subscribe(event: DomainEvent<I>): void;\n\n}\n","import { ReadModelRoot } from '../read-model-root';\n\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../read-model-root-id';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelStore<I extends ReadModelRootId, R extends ReadModelRoot<I>> {\n\n\tabstract getById(readModelRootId: AggregateId): Optional<R>;\n\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../../domain/event/domain-event';\nimport { ReadModelRootId } from '../read/read-model-root-id';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\nimport { ReactiveService } from '../../../common/reactive.service';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\n\nexport abstract class EventRepository<R extends ReadModelRootId, I extends AggregateId> extends ReactiveService {\n\n\tprotected constructor(private readonly domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t}\n\n\tprotected onEvent(aggregateId: R, eventType: Type<DomainEvent<I>>): HermesObservable<DomainEvent<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   eventType as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<AggregateId>) => event.getAggregateId().toString() === aggregateId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { EntityId } from './entity.id';\n\nexport abstract class Entity<T extends EntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(id: T) {\n\t\tthis.entityId = id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.entityId;\n\t}\n\n\tequals(entity: Entity<T>): boolean {\n\t\treturn this.entityId.equals(entity.getId());\n\t}\n\n}\n","import { HermesId } from './hermes.id';\n\nexport abstract class EntityId<T = string> extends HermesId<T> {\n\n}\n","export function ValueObject(target: Function) {\n}\n\nexport function DomainObject(target: Function) {\n}\n\nexport function ReadModelObject(target: Function) {\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class DomainModule {\n\n\tprotected constructor() {\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class ApiModule {\n\n\t// protected constructor() {\n\t// }\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class FeatureModule {\n\n\t// protected constructor() {\n\t// }\n\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesNever<T>(): HermesObservable<T> {\n\treturn new HermesObservable<T>((observer: HermesObserver<T>) => {\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesInterval(interval: number): HermesObservable<number> {\n\n\tlet counter = 0;\n\n\treturn new HermesObservable<number>((observer: HermesObserver<number>) => {\n\n\t\tconst id = setInterval(() => {\n\t\t\tobserver.next(counter++);\n\t\t}, interval);\n\n\t\treturn () => {\n\t\t\tclearInterval(id);\n\t\t\tobserver.complete();\n\t\t};\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesTimer(time: number): HermesObservable<number> {\n\n\treturn new HermesObservable<number>((observer: HermesObserver<number>) => {\n\n\t\tconst id = setTimeout(() => {\n\t\t\tobserver.next(0);\n\t\t}, time);\n\n\t\treturn () => {\n\t\t\tclearTimeout(id);\n\t\t\tobserver.complete();\n\t\t};\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\n\ntype EventType = string;\n\nexport function hermesFromEvent(element: HTMLElement, type: EventType): HermesObservable<any> {\n\n\treturn new HermesObservable<any>((observer) => {\n\n\t\tconst listener = (event: Event) => {\n\t\t\tobserver.next(event);\n\t\t};\n\n\t\telement.addEventListener(type, listener);\n\n\t\treturn () => {\n\t\t\telement.removeEventListener(type, listener);\n\t\t};\n\t});\n}\n","import { HermesSubscriber } from './hermes.subscriber';\n\nexport class HermesSingleSubscriber<T> extends HermesSubscriber<T> {\n\n\tnext(value: T): void {\n\n\t\tif (this.isCompleted()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst observer = this.getObserver();\n\n\t\tif (observer && observer.next) {\n\t\t\tobserver.next(value);\n\t\t\tthis.complete();\n\t\t}\n\t}\n\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesSubscriber } from '../subscriber/hermes.subscriber';\nimport { HermesSingleSubscriber } from '../subscriber/hermes.single-subscriber';\n\n\nexport class HermesSingle<T> extends HermesObservable<T> {\n\n\tprotected createSubscriber(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscriber<T> {\n\n\t\treturn new HermesSingleSubscriber({\n\t\t\tnext,\n\t\t\terror,\n\t\t\tcomplete\n\t\t});\n\t}\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesSubscriber } from '../subscriber/hermes.subscriber';\nimport { HermesSingle } from './hermes.single';\n\nexport function singleFromObservable<T>(source: HermesObservable<T>): HermesSingle<T> {\n\n\treturn new HermesSingle<T>((observer) => {\n\n\t\tconst subscriber = new HermesSubscriber({\n\t\t\tnext: (value: T) => observer.next(value),\n\t\t\terror: (error: any) => observer.error(error),\n\t\t\tcomplete: () => {\n\t\t\t}\n\t\t});\n\n\t\tconst subscription = source.subscribe(\n\t\t\tsubscriber\n\t\t);\n\n\t\treturn subscription.getFinalize();\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\n\nexport function hermesThrowError<T>(error: any): HermesObservable<T> {\n\n\treturn new HermesObservable<T>(observer => {\n\t\tobserver.error(error);\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesSkip<T>(valuesNumber: number): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\tif (index >= valuesNumber) {\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { subscriberForOperator } from './operator-utils';\nimport { HermesObserver } from '../observable/hermes.observer';\n\n\nexport function hermesSwitchMap<T, R>(operation: (value: T) => HermesObservable<R>): HermesOperatorFunction<T, R> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<R>((observer: HermesObserver<any>) => {\n\n\t\t\tlet isOuterCompleted = false;\n\t\t\tlet innerSubscriber: HermesSubscriber<T> | null = null;\n\n\t\t\tconst tryToComplete = function() {\n\t\t\t\tif (isOuterCompleted && !innerSubscriber) {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst outerSubscriber = subscriberForOperator<T>(\n\t\t\t\tobserver,\n\t\t\t\t(v: T) => {\n\n\t\t\t\t\tif (innerSubscriber) {\n\t\t\t\t\t\tinnerSubscriber.unsubscribe();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst subscriber = new HermesSubscriber({\n\t\t\t\t\t\tnext: (v2: any) => observer.next(v2),\n\t\t\t\t\t\terror: (e: any) => observer.error(e),\n\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\tinnerSubscriber = null;\n\t\t\t\t\t\t\ttryToComplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tinnerSubscriber = subscriber;\n\n\t\t\t\t\tconst innerSubscription = operation(v).subscribe(\n\t\t\t\t\t\tsubscriber\n\t\t\t\t\t);\n\n\t\t\t\t\treturn innerSubscription.getFinalize();\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tisOuterCompleted = true;\n\t\t\t\t\ttryToComplete();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn source.subscribe(outerSubscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\nexport function hermesTap<T>(operation: (value: T) => void): HermesOperatorFunction<T, T> {\n\treturn (source) => {\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\toperation(value);\n\t\t\t\tobserver.next(value);\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesToArray<T>(): HermesOperatorFunction<T, Array<T>> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<Array<T>>((observer) => {\n\n\t\t\tconst values: Array<T> = [];\n\n\t\t\tconst subscriber =\n\t\t\t\tsubscriberForOperator<any>(\n\t\t\t\t\tobserver,\n\t\t\t\t\t(value: T) => {\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (values.length > 0) {\n\t\t\t\t\t\t\tobserver.next(values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable } from '../../common/stream/observable/hermes.observable';\nimport { Observable } from 'rxjs';\n\nexport function fromRxJsObservable<T>(source$: Observable<T>): HermesObservable<T> {\n\treturn new HermesObservable((observer) => {\n\t\tconst subscription = source$.subscribe(\n\t\t\t(value: T) => observer.next(value),\n\t\t\t(error: any) => observer.error(error),\n\t\t\t() => observer.complete()\n\t\t);\n\t\treturn () => subscription.unsubscribe();\n\t});\n}\n","import { HermesArchiveSubject } from './stream/observable/hermes.archive-subject';\nimport { HermesObservable } from './stream/observable/hermes.observable';\nimport { hermesDistinctUntilChanged } from './stream/operator/hermes.distinct-until-changed';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: HermesArchiveSubject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tthis.archive$ = HermesArchiveSubject.of(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.archive$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesDistinctUntilChanged(this.compare)\n\t\t\t\t   );\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n\tcompare(one: T, two: T): boolean {\n\t\treturn one === two;\n\t}\n}\n","import { ReadModelRootId } from '../../api/read/read-model-root-id';\n\nexport abstract class PersistAnemia<I extends ReadModelRootId> {\n\n\tprivate readonly readModelRootId: I;\n\n\tprotected constructor(uid: I) {\n\t\tthis.readModelRootId = uid;\n\t}\n\n\tgetReadModelRootId(): I {\n\t\treturn this.readModelRootId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.getReadModelRootId().toString();\n\t}\n\n}\n","import { PersistAnemia } from './persist-anemia';\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../../api/read/read-model-root-id';\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\n\nexport abstract class PersistStateStore<I extends ReadModelRootId, A extends PersistAnemia<I>> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(anemia: A): void {\n\t\tthis.state.set(anemia.getId(), anemia);\n\t}\n\n\tsetMany(anemias: Array<A>): void {\n\t\tanemias.forEach((anemia: A) => {\n\t\t\tthis.set(anemia);\n\t\t});\n\t}\n\n\tget(aggregateId: AggregateId): Optional<A> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<A> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n}\n","import { ReadModelRoot } from '../../../api/read/read-model-root';\nimport { ReadModelStore } from '../../../api/read/store/read-model.store';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\n\nexport abstract class PersistReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tA extends PersistAnemia<I>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<I, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(anemia: A): R;\n\n\tgetById(aggregateId: AggregateId): Optional<R> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): Array<R> {\n\t\treturn this.getAllValues();\n\t}\n\n\tprivate getAllValues(): Array<R> {\n\t\treturn this.stateStore\n\t\t\t\t   .getAll()\n\t\t\t\t   .map((anemia: A) => this.toReadModel(anemia));\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): Optional<R> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.toReadModel);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\n\n\nexport abstract class PersistAggregateStore<I extends AggregateId, D extends AggregateRoot<I>, A extends PersistAnemia<ReadModelRootId>>\n\textends AggregateStore<I, D> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<any, A>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tabstract toAnemia(aggregate: D): A;\n\n\tabstract fromAnemia(anemia: A): D;\n\n\tsave(aggregate: D): void {\n\t\tthis.saveValue(aggregate);\n\t}\n\n\tfindById(aggregateId: I): Optional<D> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate saveValue(aggregate: D): void {\n\n\t\tconst anemia = this.toAnemia(aggregate);\n\n\t\tthis.stateStore.set(anemia);\n\t}\n\n\tprivate getValue(aggregateId: I): Optional<D> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.fromAnemia);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { InMemoryStore } from '../in-memory.store';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class InMemoryAggregateStore<I extends AggregateId, T extends AggregateRoot<I>> extends AggregateStore<I, T> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<I, T>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tsave(aggregate: T): void;\n\tsave(aggregates: Array<T>): void;\n\tsave(arg: T | Array<T>): void {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\targ.forEach((aggregate: T) => {\n\t\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t\t});\n\t\t} else {\n\t\t\tconst aggregate = arg;\n\n\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t}\n\t}\n\n\tfindById(aggregateId: I): Optional<T> {\n\n\t\tconst optAggregate = this.inMemoryStore.get(aggregateId);\n\n\t\toptAggregate.ifPresent((a) => a.clearEvents());\n\n\t\treturn optAggregate;\n\t}\n\n\tremove(aggregateId: I): void {\n\t\tthis.inMemoryStore.delete(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\n\nimport { ReadModelRoot } from '../../../api/read/read-model-root';\n\nimport { ReadModelStore } from '../../../api/read/store/read-model.store';\n\nimport { InMemoryStore } from '../in-memory.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\n\n\nexport abstract class InMemoryReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tB extends AggregateId,\n\tA extends AggregateRoot<B>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<B, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(aggregate: A): R;\n\n\tgetById(aggregateId: B): Optional<R> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate getValue(aggregateId: B): Optional<R> {\n\n\t\tconst optAggregate: Optional<A> = this.inMemoryStore.get(aggregateId);\n\n\t\treturn optAggregate.map(this.toReadModel.bind(this));\n\t}\n\n}\n","import { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../domain/tactical/aggregate/aggregate-root';\nimport { Optional } from '../../../common/optional';\n\nexport abstract class InMemoryStore<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(aggregate: A): void {\n\t\tthis.state.set(aggregate.getId().toString(), aggregate);\n\t}\n\n\tsetMany(aggregates: Array<A>): void {\n\t\taggregates.forEach((aggregate: A) => {\n\t\t\tthis.set(aggregate);\n\t\t});\n\t}\n\n\tget(aggregateId: I): Optional<A> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<Optional<A>> {\n\t\treturn Array.from(this.state.values()).map(v => Optional.of(v));\n\t}\n\n\thas(aggregateId: I): boolean {\n\t\treturn this.state.has(aggregateId.toString());\n\t}\n\n\tdelete(aggregateId: I): void {\n\t\tthis.state.delete(aggregateId.toString());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n\n}\n","export const COMMAND_LOGGER_ENABLED = 'GUI - COMMAND_LOGGER_ENABLED';\nexport const EVENT_LOGGER_ENABLED = 'GUI - EVENT_LOGGER_ENABLED';\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { CommandBus } from '../../../domain/command/command.bus';\nimport { Command } from '../../../domain/command/command';\nimport { CommandLogger } from '../../../domain/command/command.logger';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { hermesFilter } from '../../../../common/stream/operator/hermes.filter';\nimport { hermesTakeUntil } from '../../../../common/stream/operator/hermes.take-until';\nimport { HermesSubject } from '../../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class ConsoleCommandLogger extends CommandLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor(commandBus: CommandBus) {\n\t\tsuper();\n\n\t\tcommandBus\n\t\t\t.pipe(\n\t\t\t\thermesFilter(() => this.enabled),\n\t\t\t\thermesTakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((command: Command<AggregateId>) => {\n\t\t\t\tthis.log(command);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(command: Command<AggregateId>): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(command.toString(), command);\n\t}\n\n}\n","import { CommandLogger } from '../../../domain/command/command.logger';\nimport { Command } from '../../../domain/command/command';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\n\nexport class NoopCommandLogger extends CommandLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprotected print(command: Command<AggregateId>): void {\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEventBus } from '../../../domain/event/domain-event.bus';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { hermesFilter } from '../../../../common/stream/operator/hermes.filter';\nimport { hermesTakeUntil } from '../../../../common/stream/operator/hermes.take-until';\nimport { HermesSubject } from '../../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class ConsoleEventLogger extends DomainEventLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor(eventBus: DomainEventBus,\n\t\t\t\tprivate readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\n\t\teventBus\n\t\t\t.pipe(\n\t\t\t\thermesFilter(() => this.enabled),\n\t\t\t\thermesTakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\tthis.log(domainEvent);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(domainEvent: DomainEvent<AggregateId>): void {\n\t\tconst aggregateId = domainEvent.getAggregateId(),\n\t\t\taggregates = this.aggregateStoreRegister.captureAggregatesSnapshot(aggregateId);\n\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(domainEvent.toString(), domainEvent, aggregates);\n\t}\n\n}\n","import { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nexport class NoopEventLogger extends DomainEventLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprint(event: DomainEvent<AggregateId>): void {\n\t}\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { CommandLogger } from '../domain/command/command.logger';\n\n\n@Injectable()\nexport class HermesLoggersInitializer {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\t}\n\n\tstart(): void {\n\t\tthis.loggersStart();\n\t}\n\n\tstop(): void {\n\t\tthis.loggersStop();\n\t}\n\n\tprivate loggersStart(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.start();\n\t\t\tthis.eventLogger.start();\n\t\t}\n\t}\n\n\tprivate loggersStop(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.stop();\n\t\t\tthis.eventLogger.stop();\n\t\t}\n\t}\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { CreateAggregateCommandHandler } from './create-aggregate.command-handler';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../config/define';\nimport { AggregateFactory } from '../../tactical/aggregate/aggregate-factory';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { CreateAggregateCommand } from './create-aggregate.command';\nimport { DomainEventPublisher } from '../../event/domain-event.publisher';\n\n\nexport function createAggregateCommandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand>(\n\tcreateAggregateCommandHandler: CreateAggregateCommandHandler<A, C>,\n\tfactoryArchive: AggregateFactoryArchive<I, A>, aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\taggregateName: string, domainEventPublisher: DomainEventPublisher\n): CreateAggregateCommandHandlerImpl<I, A, C> {\n\n\treturn new CreateAggregateCommandHandlerImpl<I, A, C>(\n\t\tcreateAggregateCommandHandler,\n\t\tfactoryArchive,\n\t\taggregateRepositoryArchive,\n\t\taggregateName,\n\t\tdomainEventPublisher\n\t);\n}\n\nexport class CreateAggregateCommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly createAggregateCommandHandler: CreateAggregateCommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\thandleCommand(command: C) {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optFactory = this.aggregateFactoryArchive.get(this.aggregateType);\n\n\t\toptFactory.ifPresent((factory: AggregateFactory<I, A>) => {\n\n\t\t\tconst aggregate = factory.create(aggregateId);\n\n\t\t\tconst type = aggregate.getType(),\n\t\t\t\tcreateCommandConstructor = aggregate.createEvent();\n\n\t\t\tconst createCommand = new createCommandConstructor(aggregateId, type);\n\n\t\t\taggregate.addEvent(createCommand);\n\n\t\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\t\trepo.save(aggregate);\n\n\t\t\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.createAggregateCommandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('CreateAggregateCommandHandlerImpl constructor out of arguments');\n\t\t}\n\t}\n\n}\n","/**\n * ngc for grid package for some reasons doesn't allow to use injection token\n */\nexport const CREATE_AGGREGATE_COMMAND_HANDLERS = 'HERMES - CREATE_AGGREGATE_COMMAND_HANDLERS';\n","import { Provider } from '@angular/core';\n\nimport { AggregateFactory } from '../../tactical/aggregate/aggregate-factory';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Optional } from '../../../../common/optional';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../create-aggregate/create-aggregate.command-handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Command } from '../command';\n\n\nexport class AggregateFactoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateFactory<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, factory: AggregateFactory<I, A>): void {\n\n\t\tthis.map.set(key, factory);\n\t}\n\n\tget(key: string): Optional<AggregateFactory<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n\n\thas(key: string): boolean {\n\t\treturn this.map.has(key);\n\t}\n}\n\nexport class AggregateRepositoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateRepository<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, repository: AggregateRepository<I, A>): void {\n\n\t\tthis.map.set(key, repository);\n\t}\n\n\tget(key: string): Optional<AggregateRepository<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n\n\thas(key: string): boolean {\n\t\treturn this.map.has(key);\n\t}\n}\n\nexport interface AggregateConfig<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> {\n\n\trepository: AggregateRepository<I, A>;\n\n\tfactory: AggregateFactory<I, A>;\n\n\tkey: string;\n\n\tcreateHandler: CreateAggregateCommandHandler<A, C>;\n\n\tcommandHandlers: Array<Provider>\n\n}\n","export const aggregateDefinitionToken = 'Hermes - aggregateDefinitionToken';\n","import { NgModule, OnDestroy } from '@angular/core';\n\n@NgModule({})\nexport class HermesDomainModule implements OnDestroy {\n\n\tngOnDestroy() {\n\t}\n\n}\n","export const COMMAND_HANDLERS = 'HERMES - COMMAND_HANDLERS_TOKEN';\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Command } from '../command';\nimport { AggregateRepositoryArchive } from '../config/define';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { CommandHandler } from './command.handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\n\nexport function commandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\tcommandHandler: CommandHandler<A, C>,\n\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\taggregateName: string\n): CommandHandlerImpl<I, A, C> {\n\treturn new CommandHandlerImpl<I, A, C>(commandHandler, aggregateRepositoryArchive, aggregateName);\n}\n\nexport class CommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly commandHandler: CommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\tpublishDomainEvents(aggregate: A, command: C): void {\n\t\tthis.commandHandler.publish(aggregate, command);\n\t}\n\n\thandleCommand(command: C): void {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\tconst optAggregate = repo.findById(aggregateId);\n\n\t\t\toptAggregate.ifPresent((aggregate: A) => {\n\n\t\t\t\tthis.commandHandler.handle(aggregate, command);\n\n\t\t\t\tthis.publishDomainEvents(aggregate, command);\n\t\t\t});\n\t\t});\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.commandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('CommandHandlerImpl constructor out of arguments');\n\t\t}\n\t}\n\n}\n","import { DomainEventHandler } from './domain-event.handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\nimport { MultiDomainEventHandler } from './multi-domain-event.handler';\nimport { DomainEventType } from './domain-event-type';\n\n\nexport function domainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: DomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, [domainEventHandler.forEvent()]);\n}\n\n\nexport function multiDomainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: MultiDomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, domainEventHandler.forEvents());\n}\n\n\nexport class DomainEventHandlerImpl<I extends AggregateId, E extends DomainEvent<I>> {\n\n\tprivate readonly eventTypes: Array<string>;\n\n\tconstructor(private readonly domainEventHandler: DomainEventHandler<I, E> | MultiDomainEventHandler<I, E>,\n\t\t\t\tprivate readonly events: Array<DomainEventType<E>>) {\n\t\tthis.eventTypes = this.createDomainEventTypes();\n\t}\n\n\thandleEvent(event: E): void {\n\t\tthis.domainEventHandler.handle(event);\n\t}\n\n\tforEvents(events: Array<E>): boolean {\n\t\treturn events.some((event: E) => {\n\t\t\treturn this.eventTypes.some((type: string) => {\n\t\t\t\treturn type === event.getMessageType();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate createDomainEventTypes(): Array<string> {\n\n\t\tconst types = [];\n\n\t\tfor (const event of this.events) {\n\t\t\tconst instance = this.createDomainEventInstance(event);\n\t\t\ttypes.push(instance.getMessageType());\n\t\t}\n\n\t\treturn types;\n\t}\n\n\tprivate createDomainEventInstance(eventType: DomainEventType<E>): E {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = eventType.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (eventType as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (eventType as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (eventType as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('DomainEventHandler constructor out of arguments');\n\t\t}\n\t}\n\n\n}\n","import { DomainEventHandlerImpl } from '../handler/domain-event-handler-impl';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\nimport { DomainEventBus } from '../domain-event.bus';\nimport { Reactive } from '../../../../common/reactive';\n\n\nexport class DomainEventHandlerInitializer<I extends AggregateId, E extends DomainEvent<I>> extends Reactive {\n\n\tinit(\n\t\teventHandlers: Array<DomainEventHandlerImpl<I, E>>,\n\t\tdomainEventBus: DomainEventBus\n\t): void {\n\n\t\tif (eventHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<DomainEventHandlerImpl<I, E>> = [];\n\n\t\t\teventHandlers.filter((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\tif (!set.has((handler as any).domainEventHandler)) {\n\t\t\t\t\tset.add((handler as any).domainEventHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\tdomainEventBus\n\t\t\t\t\t.ofEventHandlers([handler])\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((event: E) => {\n\t\t\t\t\t\thandler.handleEvent(event);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered event handlers:', filteredHandlers.length)\n\t\t\t// console.log('Registered event handlers:', filteredHandlers)\n\t\t}\n\t}\n}\n","import { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Reactive } from '../../../../common/reactive';\nimport { CommandHandlerImpl } from '../handler/command-handler-impl';\nimport { CommandBus } from '../command.bus';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Command } from '../command';\nimport { CreateAggregateCommandHandlerImpl } from '../create-aggregate/create-aggregate.command-handler-impl';\n\n\nexport class CommandHandlerInitializer<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> extends Reactive {\n\n\tregister(\n\t\tcommandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\tcommandBus: CommandBus\n\t): void {\n\n\t\tif (commandHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<CommandHandlerImpl<I, A, C>> = [];\n\n\t\t\tcommandHandlers.filter((handler: CommandHandlerImpl<I, A, C>) => {\n\t\t\t\tif (!set.has((handler as any).commandHandler)) {\n\t\t\t\t\tset.add((handler as any).commandHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: CommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCommandHandler(handler)\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered command handlers:' + filteredHandlers.length);\n\t\t\t// console.log('Registered command handlers:', filteredHandlers);\n\t\t}\n\n\t}\n\n\tregisterAggregateCommandHandlers(\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>,\n\t\tcommandBus: CommandBus\n\t) {\n\n\t\tif (aggregateCommandHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>> = [];\n\n\t\t\taggregateCommandHandlers.filter((handler: CreateAggregateCommandHandlerImpl<I, A, C>) => {\n\t\t\t\tif (!set.has((handler as any).createAggregateCommandHandler)) {\n\t\t\t\t\tset.add((handler as any).createAggregateCommandHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: CreateAggregateCommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCreateAggregateHandler(handler)\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered create command handlers:' + filteredHandlers.length);\n\t\t\t// console.log('Registered create command handlers:', filteredHandlers);\n\t\t}\n\t}\n\n}\n","import { AggregateDefinition } from './aggregate-definition';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from './define';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Injector } from '@angular/core';\n\nexport class AggregateDefinitionInitializer<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tregister(\n\t\tdefinedAggregate: Array<AggregateDefinition<I, A>>,\n\t\tinjector: Injector,\n\t\taggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>\n\t): void {\n\n\t\tif (definedAggregate) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredDefinitions: Array<AggregateDefinition<I, A>> = [];\n\n\t\t\tdefinedAggregate.filter((def: AggregateDefinition<I, A>) => {\n\t\t\t\tif (!set.has(def.key)) {\n\t\t\t\t\tset.add(def.key);\n\t\t\t\t\tfilteredDefinitions.push(def);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredDefinitions.forEach((def: AggregateDefinition<I, A>) => {\n\n\t\t\t\tconst factory = injector.get(def.factory),\n\t\t\t\t\trepository = injector.get(def.repository);\n\n\t\t\t\tif (!aggregateFactoryArchive.has(def.key)) {\n\t\t\t\t\taggregateFactoryArchive.add(def.key, factory);\n\t\t\t\t}\n\n\t\t\t\tif (!aggregateRepositoryArchive.has(def.key)) {\n\t\t\t\t\taggregateRepositoryArchive.add(def.key, repository);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// console.log('Registered aggregate definition:' + filteredDefinitions.length);\n\t\t\t// console.log('Registered aggregate definition:', filteredDefinitions);\n\t\t}\n\t}\n\n}\n","import { Inject, Injector, ModuleWithProviders, NgModule, OnDestroy, Optional, Provider, Type, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Command\n */\nimport { AggregateRoot } from '../domain/tactical/aggregate/aggregate-root';\nimport { Command } from '../domain/command/command';\nimport { CommandBus } from '../domain/command/command.bus';\nimport { CommandDispatcher } from '../domain/command/command.dispatcher';\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { CommandStream } from '../domain/command/command.stream';\nimport { FILTERED_COMMAND_STREAM } from '../domain/command/filtered-command-stream';\nimport { AggregateStoreRegister } from '../domain/command/store/aggregate-store.register';\nimport { DomainEvent } from '../domain/event/domain-event';\nimport { DomainEventBus } from '../domain/event/domain-event.bus';\nimport { DomainEventPublisher } from '../domain/event/domain-event.publisher';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { DomainEventStore } from '../domain/event/domain-event.store';\nimport { DomainEventStream } from '../domain/event/domain-event.stream';\n/**\n * APP\n */\nimport { HermesModuleConfig } from './hermes-module-config';\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED } from '../domain/hermes-tokens';\nimport { HermesApi } from './hermes-api';\n/**\n * Infrastructure\n */\nimport { ConsoleCommandLogger } from '../infrastructure/logger/command/console.command.logger';\nimport { NoopCommandLogger } from '../infrastructure/logger/command/noop.command.logger';\nimport { ConsoleEventLogger } from '../infrastructure/logger/event/console.event.logger';\nimport { NoopEventLogger } from '../infrastructure/logger/event/noop.event.logger';\nimport { RandomStringGenerator } from '../../common/random-string.generator';\nimport { HermesLoggersInitializer } from './hermes.loggers.initializer';\nimport {\n\tcreateAggregateCommandHandlerFactory,\n\tCreateAggregateCommandHandlerImpl\n} from '../domain/command/create-aggregate/create-aggregate.command-handler-impl';\nimport { CREATE_AGGREGATE_COMMAND_HANDLERS } from '../domain/command/create-aggregate/create-aggregate.command-handlers-token';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../domain/command/config/define';\nimport { AggregateFactory } from '../domain/tactical/aggregate/aggregate-factory';\nimport { aggregateDefinitionToken } from '../domain/command/config/aggregate-definition.token';\nimport { AggregateDefinition } from '../domain/command/config/aggregate-definition';\nimport { AggregateRepository } from '../domain/tactical/aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../domain/command/create-aggregate/create-aggregate.command-handler';\nimport { HermesDomainModule } from './hermes.domain.module';\nimport { COMMAND_HANDLERS } from '../domain/command/handler/command-handlers';\nimport { commandHandlerFactory, CommandHandlerImpl } from '../domain/command/handler/command-handler-impl';\nimport { CommandHandler } from '../domain/command/handler/command.handler';\nimport { AggregateId } from '../domain/tactical/aggregate/aggregate-id';\nimport { Reactive } from '../../common/reactive';\nimport { domainEventHandlerFactory, DomainEventHandlerImpl, multiDomainEventHandlerFactory } from '../domain/event/handler/domain-event-handler-impl';\nimport { DOMAIN_EVENT_HANDLERS } from '../domain/event/handler/domain-event-handlers';\nimport { DomainEventHandler } from '../domain/event/handler/domain-event.handler';\nimport { MultiDomainEventHandler } from '../domain/event/handler/multi-domain-event.handler';\nimport { DomainEventHandlerInitializer } from '../domain/event/init/domain-event-handler.initializer';\nimport { CommandHandlerInitializer } from '../domain/command/init/command-handler.initializer';\nimport { AggregateDefinitionInitializer } from '../domain/command/config/aggregate-definition.initializer';\n\n\nconst providers = [\n\t{ provide: EVENT_LOGGER_ENABLED, useValue: true },\n\t{ provide: COMMAND_LOGGER_ENABLED, useValue: true },\n\t{ provide: CommandLogger, useFactory: commandLoggerFactory, deps: [COMMAND_LOGGER_ENABLED, ConsoleCommandLogger, NoopCommandLogger] },\n\t{ provide: DomainEventLogger, useFactory: eventLoggerFactory, deps: [EVENT_LOGGER_ENABLED, ConsoleEventLogger, NoopEventLogger] },\n\tConsoleCommandLogger,\n\tNoopCommandLogger,\n\tNoopEventLogger,\n\tConsoleEventLogger,\n\tHermesLoggersInitializer,\n\tAggregateFactoryArchive,\n\tAggregateRepositoryArchive,\n\tRandomStringGenerator,\n\n\t{ provide: FILTERED_COMMAND_STREAM, useExisting: CommandStream },\n\tCommandBus,\n\tCommandStream,\n\tCommandDispatcher,\n\tAggregateStoreRegister,\n\n\tDomainEventBus,\n\tDomainEventStream,\n\tDomainEventPublisher,\n\tDomainEventStore,\n\n\tHermesApi\n];\n\nexport function commandLoggerFactory(enabled: boolean, consoleCommandLogger: ConsoleCommandLogger, noopCommandLogger: NoopCommandLogger) {\n\n\tif (enabled) {\n\t\treturn consoleCommandLogger;\n\t} else {\n\t\treturn noopCommandLogger;\n\t}\n}\n\nexport function eventLoggerFactory(enabled: boolean, consoleEventLogger: ConsoleEventLogger, noopEventLogger: NoopEventLogger) {\n\n\tif (enabled) {\n\t\treturn consoleEventLogger;\n\t} else {\n\t\treturn noopEventLogger;\n\t}\n}\n\n@Injectable()\nexport class HermesBaseModule<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>, E extends DomainEvent<I>>\n\textends Reactive implements OnDestroy {\n\n\tprivate readonly aggregateDefinitionInitializer = new AggregateDefinitionInitializer();\n\n\tprivate readonly commandHandlerInitializer = new CommandHandlerInitializer();\n\n\tprivate readonly domainEventHandlerInitializer = new DomainEventHandlerInitializer();\n\n\tconstructor(@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandlerImpl<I, E>>,\n\t\t\t\t@Optional() @Inject(CREATE_AGGREGATE_COMMAND_HANDLERS) aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(aggregateDefinitionToken) definedAggregate: Array<AggregateDefinition<I, A>>,\n\t\t\t\tinjector: Injector,\n\t\t\t\taggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tprivate hermesLoggersInitializer: HermesLoggersInitializer,\n\t\t\t\tprivate hermesApi: HermesApi) { // HermesApi initialization\n\t\tsuper();\n\n\t\tthis.hermesLoggersInitializer.start();\n\n\t\tthis.checkNullCommand(commandBus, commandHandlers, aggregateCommandHandlers);\n\t\tthis.checkCommandHandlerIsCollection(commandHandlers);\n\t\tthis.checkDomainEventHandlerIsCollection(eventHandlers);\n\n\n\t\tthis.aggregateDefinitionInitializer.register(definedAggregate, injector, aggregateFactoryArchive, aggregateRepositoryArchive);\n\t\tthis.commandHandlerInitializer.register(commandHandlers, commandBus);\n\t\tthis.commandHandlerInitializer.registerAggregateCommandHandlers(aggregateCommandHandlers, commandBus);\n\t\tthis.domainEventHandlerInitializer.init(eventHandlers, domainEventBus);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.hermesLoggersInitializer.stop();\n\t\tthis.commandHandlerInitializer.ngOnDestroy();\n\t\tthis.domainEventHandlerInitializer.ngOnDestroy();\n\t}\n\n\tprivate checkNullCommand(\n\t\tcommandBus: CommandBus,\n\t\tcommandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>\n\t): void {\n\n\t\tcommandBus\n\t\t\t.ofNullHandler(commandHandlers, aggregateCommandHandlers)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((command: C) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(`Command ${command.toString()} was not intercepted by any CommandHandler.`);\n\t\t\t});\n\t}\n\n\tprivate checkCommandHandlerIsCollection(commandHandlers: Array<CommandHandlerImpl<I, A, C>>): void {\n\t\tif (commandHandlers && !Array.isArray(commandHandlers)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('You might provided commandHandler without specifying \"multi: true\".');\n\t\t}\n\t}\n\n\tprivate checkDomainEventHandlerIsCollection(eventHandlers: Array<DomainEventHandlerImpl<I, E>>): void {\n\t\tif (eventHandlers && !Array.isArray(eventHandlers)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('You might provided eventHandler without specifying \"multi: true\".');\n\t\t}\n\t}\n\n}\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: providers\n})\nexport class HermesModule extends HermesBaseModule<any, any, any, any> {\n\n\tconstructor(@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandlerImpl<any, any>>,\n\t\t\t\t@Optional() @Inject(CREATE_AGGREGATE_COMMAND_HANDLERS) aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<any, any, any>>,\n\t\t\t\t@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandlerImpl<any, any, any>>,\n\t\t\t\t@Optional() @Inject(aggregateDefinitionToken) definedAggregate: Array<AggregateDefinition<any, any>>,\n\t\t\t\tinjector: Injector,\n\t\t\t\taggregateFactoryArchive: AggregateFactoryArchive<any, any>,\n\t\t\t\taggregateRepositoryArchive: AggregateRepositoryArchive<any, any>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\thermesLoggersInitializer: HermesLoggersInitializer,\n\t\t\t\thermesApi: HermesApi) { // HermesApi initialization\n\t\tsuper(\n\t\t\teventHandlers,\n\t\t\taggregateCommandHandlers,\n\t\t\tcommandHandlers,\n\t\t\tdefinedAggregate,\n\t\t\tinjector,\n\t\t\taggregateFactoryArchive,\n\t\t\taggregateRepositoryArchive,\n\t\t\tcommandBus,\n\t\t\tdomainEventBus,\n\t\t\thermesLoggersInitializer,\n\t\t\thermesApi\n\t\t);\n\t}\n\n\tstatic defineAggregate<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\taggregateKey: string,\n\t\tfactory: Type<AggregateFactory<I, A>>,\n\t\trepository: Type<AggregateRepository<I, A>>,\n\t\tcreateCommandHandler: Type<CreateAggregateCommandHandler<A, C>>,\n\t\tcommandHandlers: Array<Provider> = [],\n\t\tdomainEventHandlers: Array<Provider> = []): ModuleWithProviders<HermesDomainModule> {\n\t\treturn {\n\t\t\tngModule: HermesDomainModule,\n\t\t\tproviders: [{\n\t\t\t\tprovide: aggregateDefinitionToken,\n\t\t\t\tmulti: true,\n\t\t\t\tuseValue: {\n\t\t\t\t\tkey: aggregateKey,\n\t\t\t\t\tfactory: factory,\n\t\t\t\t\trepository: repository\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tprovide: aggregateKey,\n\t\t\t\tuseValue: aggregateKey\n\t\t\t},\n\t\t\t\tfactory,\n\t\t\t\trepository,\n\t\t\t\tHermesModule.registerCreateCommandHandler(createCommandHandler, aggregateKey),\n\t\t\t\tcommandHandlers,\n\t\t\t\tdomainEventHandlers\n\t\t\t]\n\t\t};\n\t}\n\n\tstatic withConfig(config: HermesModuleConfig = { loggers: false }): ModuleWithProviders<HermesModule> {\n\t\treturn {\n\t\t\tngModule: HermesModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic registerCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\tcommandHandlerType: Type<CommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: commandHandlerType,\n\t\t\t\tuseClass: commandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: COMMAND_HANDLERS,\n\t\t\t\tuseFactory: commandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcommandHandlerType,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<DomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: domainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerMultiDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<MultiDomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: multiDomainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tprivate static registerCreateCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\tcreateCommandHandlerType: Type<CreateAggregateCommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: createCommandHandlerType,\n\t\t\t\tuseClass: createCommandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: CREATE_AGGREGATE_COMMAND_HANDLERS,\n\t\t\t\tuseFactory: createAggregateCommandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcreateCommandHandlerType,\n\t\t\t\t\tAggregateFactoryArchive,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName,\n\t\t\t\t\tDomainEventPublisher\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\n}\n","import { AggregateId } from '../core/domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateEvent } from '../core/domain/tactical/aggregate/aggregate-event';\nimport { DomainEvent } from '../core/domain/event/domain-event';\nimport { HermesObservable } from '../common/stream/observable/hermes.observable';\n\ndeclare const expect: any;\ndeclare const it: any;\ndeclare const jest: any;\n\nexport function assertDomainEvents<I extends AggregateId>(actualEvents: ReadonlyArray<DomainEvent<I>>, expectedEvents: Array<DomainEvent<I>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length);\n\n\tfor (const actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: DomainEvent<I>) => {\n\t\t\treturn event.equalsByType(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t\texpect(actualEvent.equalsByType(expectedEvent)).toBeTruthy();\n\t\t// expect(actualEvent.aggregateId).toEqual(expectedEvent.aggregateId, 'Events aggregateId should be the same');\n\t\texpect(actualEvent.getPayload()).toEqual(expectedEvent.getPayload(), 'Events payload should be the same');\n\t}\n\n}\n\nexport function assertAggregateEvents<T extends AggregateId>(actualEvents: ReadonlyArray<AggregateEvent<T>>, expectedEvents: Array<AggregateEvent<T>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length, 'Aggregate events');\n\n\tfor (const actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: AggregateEvent<T>) => {\n\t\t\treturn event.equals(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t}\n}\n\nexport function testEventRepositoryIsEmptyOnStart<T>(createStream: () => HermesObservable<T>, desc: string): void {\n\n\tit('should be no ' + desc + ' events on start', () => {\n\n\t\texpect.assertions(3);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t() => nextFn(),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).not.toHaveBeenCalled();\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).not.toHaveBeenCalled();\n\t});\n}\n\nexport function testWarehouseDefaultValueOnStart<T>(createStream: () => HermesObservable<T>, defaultValue: T, desc: string): void {\n\n\tit('should have default value ' + desc, () => {\n\n\t\texpect.assertions(4);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t(value) => nextFn(value),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).toHaveBeenCalledWith(defaultValue);\n\t\texpect(nextFn).toHaveBeenCalledTimes(1);\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).not.toHaveBeenCalled();\n\t});\n}\n\nexport function testWarehouseDefaultValueOnStartOnce<T>(createStream: () => HermesObservable<T>, defaultValue: T, desc: string): void {\n\n\tit('should have default value ' + desc, () => {\n\n\t\texpect.assertions(4);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t(value) => nextFn(value),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).toHaveBeenCalledWith(defaultValue);\n\t\texpect(nextFn).toHaveBeenCalledTimes(1);\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).toHaveBeenCalledTimes(1);\n\t});\n}\n","import { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Command } from '../command';\n\nexport abstract class CreateAggregateCommand extends Command<AggregateId> {\n\n\tprotected constructor(aggregateId: AggregateId,\n\t\t\t\t\t\t  type: string) {\n\t\tsuper(aggregateId, type);\n\t}\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {KeyArchive as ɵh} from './common/key.archive';\nexport {HermesLoggersInitializer as ɵp} from './core/api/hermes.loggers.initializer';\nexport {HermesBaseModule as ɵc,commandLoggerFactory as ɵa,eventLoggerFactory as ɵb} from './core/api/hermes.module';\nexport {Logger as ɵd} from './core/api/logger/logger';\nexport {AggregateDefinition as ɵm} from './core/domain/command/config/aggregate-definition';\nexport {aggregateDefinitionToken as ɵl} from './core/domain/command/config/aggregate-definition.token';\nexport {AggregateFactoryArchive as ɵn,AggregateRepositoryArchive as ɵo} from './core/domain/command/config/define';\nexport {CreateAggregateCommandHandlerImpl as ɵba,createAggregateCommandHandlerFactory as ɵz} from './core/domain/command/create-aggregate/create-aggregate.command-handler-impl';\nexport {CREATE_AGGREGATE_COMMAND_HANDLERS as ɵj} from './core/domain/command/create-aggregate/create-aggregate.command-handlers-token';\nexport {FILTERED_COMMAND_STREAM as ɵf} from './core/domain/command/filtered-command-stream';\nexport {CommandHandlerImpl as ɵv,commandHandlerFactory as ɵu} from './core/domain/command/handler/command-handler-impl';\nexport {COMMAND_HANDLERS as ɵk} from './core/domain/command/handler/command-handlers';\nexport {DomainEventStore as ɵg} from './core/domain/event/domain-event.store';\nexport {DomainEventHandlerImpl as ɵy,domainEventHandlerFactory as ɵw,multiDomainEventHandlerFactory as ɵx} from './core/domain/event/handler/domain-event-handler-impl';\nexport {DOMAIN_EVENT_HANDLERS as ɵi} from './core/domain/event/handler/domain-event-handlers';\nexport {Message as ɵe} from './core/domain/message/message';\nexport {ConsoleCommandLogger as ɵq} from './core/infrastructure/logger/command/console.command.logger';\nexport {NoopCommandLogger as ɵr} from './core/infrastructure/logger/command/noop.command.logger';\nexport {ConsoleEventLogger as ɵs} from './core/infrastructure/logger/event/console.event.logger';\nexport {NoopEventLogger as ɵt} from './core/infrastructure/logger/event/noop.event.logger';"],"names":["isPlatformBrowser","Injectable","Inject","PLATFORM_ID","InjectionToken","Observable","takeUntil","NgModule","Optional","Injector","CommonModule"],"mappings":"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"}