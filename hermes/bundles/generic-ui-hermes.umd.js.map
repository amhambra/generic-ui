{"version":3,"file":"generic-ui-hermes.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/hermes/common/logger.ts","ng://@generic-ui/hermes/domain/command/command.logger.ts","ng://@generic-ui/hermes/domain/event/domain-event.logger.ts","ng://@generic-ui/hermes/domain-api/hermes-api.ts","ng://@generic-ui/hermes/domain-api/hermes-api.helpers.ts","ng://@generic-ui/hermes/domain/event/handler/domain-event-handlers.ts","ng://@generic-ui/hermes/domain/provider.helpers.ts","ng://@generic-ui/hermes/domain/command/command.stream.ts","ng://@generic-ui/hermes/domain/command/command.dispatcher.ts","ng://@generic-ui/hermes/common/random-string.generator.ts","ng://@generic-ui/hermes/domain/message.ts","ng://@generic-ui/hermes/domain/command/command.ts","ng://@generic-ui/hermes/domain/command/aggregate/aggregate-factory.ts","ng://@generic-ui/hermes/domain/command/filtered-command-stream.ts","ng://@generic-ui/hermes/domain/command/command.bus.ts","ng://@generic-ui/hermes/domain/command/replay-command.dispatcher.ts","ng://@generic-ui/hermes/domain/command/aggregate/aggregate-event.ts","ng://@generic-ui/hermes/domain/command/aggregate/aggregate-repository.ts","ng://@generic-ui/hermes/domain/command/store/aggregate.store.ts","ng://@generic-ui/hermes/domain/command/store/aggregate-store.register.ts","ng://@generic-ui/hermes/domain/command/aggregate/aggregate-root.ts","ng://@generic-ui/hermes/domain/aggregate-id.ts","ng://@generic-ui/hermes/domain/event/status/domain-event-status.ts","ng://@generic-ui/hermes/domain/event/status/status.response.ts","ng://@generic-ui/hermes/domain/event/domain-event.ts","ng://@generic-ui/hermes/domain/event/domain-event.store.ts","ng://@generic-ui/hermes/domain/event/domain-event.stream.ts","ng://@generic-ui/hermes/domain/event/domain-event.publisher.ts","ng://@generic-ui/hermes/domain/event/domain-event.bus.ts","ng://@generic-ui/hermes/domain/event/domain-event.payload.ts","ng://@generic-ui/hermes/domain-api/read/read-model-entity.ts","ng://@generic-ui/hermes/domain-api/read/read-model-entity-id.ts","ng://@generic-ui/hermes/domain-api/read/read-model-root.ts","ng://@generic-ui/hermes/domain-api/read/read-model-root-id.ts","ng://@generic-ui/hermes/common/reactive.ts","ng://@generic-ui/hermes/domain-api/read/read-model-root.repository.ts","ng://@generic-ui/hermes/domain-api/read/store/read-model.store.ts","ng://@generic-ui/hermes/domain-api/event/event.repository.ts","ng://@generic-ui/hermes/domain/tactical/entity.ts","ng://@generic-ui/hermes/domain/tactical/entity-id.ts","ng://@generic-ui/hermes/domain/decorators.ts","ng://@generic-ui/hermes/domain/domain-module.ts","ng://@generic-ui/hermes/domain-api/api-module.ts","ng://@generic-ui/hermes/feature/feature-module.ts","ng://@generic-ui/hermes/common/reactive.service.ts","ng://@generic-ui/hermes/common/aggregate.archive.ts","ng://@generic-ui/hermes/common/archive.ts","ng://@generic-ui/hermes/common/optional.ts","ng://@generic-ui/hermes/infrastructure/persist/persist-anemia.ts","ng://@generic-ui/hermes/infrastructure/persist/persist-state.store.ts","ng://@generic-ui/hermes/infrastructure/persist/read/persist.read-model.store.ts","ng://@generic-ui/hermes/infrastructure/persist/command/persist-aggregate.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/command/in-memory.aggregate.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/read/in-memory.read-model.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/in-memory.store.ts","ng://@generic-ui/hermes/domain/hermes-tokens.ts","ng://@generic-ui/hermes/infrastructure/logger/command/console.command.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/command/noop.command.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/event/console.event.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/event/noop.event.logger.ts","ng://@generic-ui/hermes/domain-api/hermes.loggers.initializer.ts","ng://@generic-ui/hermes/domain/command/aggregate/create/create-aggregate.command-handler-impl.ts","ng://@generic-ui/hermes/domain/command/aggregate/create/create-aggregate.command-handlers-token.ts","ng://@generic-ui/hermes/domain/command/config/define.ts","ng://@generic-ui/hermes/domain/command/config/aggregate-definition.token.ts","ng://@generic-ui/hermes/domain-api/hermes.domain.module.ts","ng://@generic-ui/hermes/domain/command/handler/command-handlers.ts","ng://@generic-ui/hermes/domain/command/handler/command-handler-impl.ts","ng://@generic-ui/hermes/domain/event/handler/domain-event-handler-impl.ts","ng://@generic-ui/hermes/domain-api/hermes.module.ts","ng://@generic-ui/hermes/testing/helpers.ts","ng://@generic-ui/hermes/domain/command/aggregate/create/create-aggregate.command.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Message } from '../domain/message';\n\nexport abstract class Logger<M extends Message<any>> {\n\n\tprivate domainName: string;\n\n\tabstract start(): void;\n\n\tabstract stop(): void;\n\n\tprotected abstract print(message: M): void;\n\n\tsetDomain(domainName: string): void {\n\t\tthis.domainName = domainName;\n\t}\n\n\tlog(message: M): void {\n\t\tif (this.shouldPrint(message)) {\n\t\t\tthis.print(message);\n\t\t}\n\t}\n\n\tprotected shouldPrint(message: M): boolean {\n\n\t\tif (!this.domainName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst log: string = message.toString();\n\n\t\treturn log.includes(this.domainName);\n\t}\n}\n","import { Command } from './command';\nimport { Logger } from '../../common/logger';\n\nexport abstract class CommandLogger extends Logger<Command> {\n}\n","import { DomainEvent } from './domain-event';\nimport { Logger } from '../../common/logger';\nimport { AggregateId } from '../aggregate-id';\n\nexport abstract class DomainEventLogger extends Logger<DomainEvent<AggregateId>> {\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\n\ndeclare var window: any;\n\nexport const hermesApi = 'hermesApi';\n\n@Injectable()\nexport class HermesApi {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: Object,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\tconst api = (api: HermesApi) => {\n\t\t\t\treturn {\n\t\t\t\t\tset loggers(enabled: boolean) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tapi.commandLogger.start();\n\t\t\t\t\t\t\tapi.eventLogger.start();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapi.commandLogger.stop();\n\t\t\t\t\t\t\tapi.eventLogger.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset domain(domainName: string) {\n\t\t\t\t\t\tif (domainName) {\n\t\t\t\t\t\t\tapi.commandLogger.setDomain(domainName);\n\t\t\t\t\t\t\tapi.eventLogger.setDomain(domainName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\twindow[hermesApi] = api(this);\n\n\t\t\twindow[hermesApi].loggers = false;\n\t\t}\n\t}\n}\n","import { hermesApi } from './hermes-api';\n\ndeclare var window: any;\n\nexport function enableHermesLoggers(domainName?: string): void {\n\n\tif (domainName) {\n\t\twindow[hermesApi].domain = domainName;\n\t}\n\n\twindow[hermesApi].loggers = true;\n}\n\nexport function disableHermesLoggers(): void {\n\n\tdelete window[hermesApi].domain;\n\n\twindow[hermesApi].loggers = false;\n}\n","export const DOMAIN_EVENT_HANDLERS = 'HERMES - DOMAIN_EVENT_HANDLERS_TOKEN';\n","import { StaticProvider, Type } from '@angular/core';\n\nimport { DomainEvent } from './event/domain-event';\n\nimport { AggregateId } from './aggregate-id';\nimport { DomainEventHandler } from './event/handler/domain-event.handler';\nimport { DOMAIN_EVENT_HANDLERS } from './event/handler/domain-event-handlers';\n\nexport function provideEventHandlers<I extends AggregateId, E extends DomainEvent<I>>(handlers: Array<Type<DomainEventHandler<I, E>>>): Array<StaticProvider> {\n\treturn handlers.map((handler: Type<DomainEventHandler<I, E>>) => {\n\t\treturn {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: handler,\n\t\t\tmulti: true\n\t\t};\n\t}) as any;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Command } from './command';\n\n\n@Injectable()\nexport class CommandStream extends Subject<Command> {\n\n\tnext(value: Command): void {\n\t\tsuper.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandStream } from './command.stream';\nimport { Command } from './command';\n\n\n@Injectable()\nexport class CommandDispatcher {\n\n\tconstructor(private commandStream: CommandStream) {\n\t}\n\n\tdispatch(command: Command): void {\n\t\tthis.commandStream.next(command);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RandomStringGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): string {\n\t\treturn Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + `${RandomStringGenerator.index++}`;\n\t}\n\n}\n","import { AggregateId } from './aggregate-id';\n\nimport { RandomStringGenerator } from '../common/random-string.generator';\n\nexport abstract class Message<I extends AggregateId> {\n\n\tprotected constructor(private readonly aggregateId: I,\n\t\t\t\t\t\t  protected readonly messageType: string,\n\t\t\t\t\t\t  private readonly messageId: string = RandomStringGenerator.generate()) {\n\t}\n\n\tgetMessageType(): string {\n\t\treturn this.messageType;\n\t}\n\n\tgetAggregateId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetMessageId(): string {\n\t\treturn this.messageId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.messageType;\n\t}\n\n\tequalsByType(message: Message<I>): boolean {\n\t\treturn this.getMessageType() === message.getMessageType();\n\t}\n\n\tequals(message: Message<I>): boolean {\n\t\treturn (this.getMessageType() === message.getMessageType()) && (this.messageId === message.messageId);\n\t}\n\n\tofMessageType(messageType: string): boolean;\n\tofMessageType(messageTypes: Array<string>): boolean;\n\tofMessageType(arg: string | Array<string>): boolean {\n\n\t\tif (Array.isArray(arg)) {\n\n\t\t\tlet found = arg.find((messageType: string) => this.isMessageType(messageType));\n\n\t\t\treturn !!found;\n\n\t\t} else {\n\t\t\treturn this.isMessageType(arg);\n\t\t}\n\t}\n\n\tprivate isMessageType(messageType: string): boolean {\n\t\treturn this.getMessageType() === messageType;\n\t}\n}\n","import { Message } from '../message';\n\nexport class Command extends Message<any> {\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from '../../aggregate-id';\n\nexport abstract class AggregateFactory<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract create(aggregateId: I): A;\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Command } from './command';\n\n\nexport const FILTERED_COMMAND_STREAM = new InjectionToken<Subject<Command>>('FILTERED_COMMAND_STREAM');\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, Operator, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Command } from './command';\nimport { FILTERED_COMMAND_STREAM } from './filtered-command-stream';\nimport { AggregateRoot } from './aggregate/aggregate-root';\nimport { CreateAggregateCommandHandlerImpl } from './aggregate/create/create-aggregate.command-handler-impl';\nimport { CommandHandlerImpl } from './handler/command-handler-impl';\nimport { AggregateId } from '../aggregate-id';\n\n@Injectable()\nexport class CommandBus<C = Command> extends Observable<C> {\n\n\tconstructor(@Inject(FILTERED_COMMAND_STREAM) commandsStream?: Subject<Command>) {\n\t\tsuper();\n\n\t\tif (commandsStream) {\n\t\t\tthis.source = commandsStream;\n\t\t}\n\t}\n\n\tlift<R>(operator: Operator<C, R>): Observable<R> {\n\t\tconst observable = new CommandBus<R>();\n\t\tobservable.source = this;\n\t\tobservable.operator = operator;\n\t\treturn observable;\n\t}\n\n\tofCommand<C2 extends C>(...commandTypes: Array<string>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\t\t\t\t\treturn commandTypes.some((commandType: string) => command.ofMessageType(commandType));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCommandHandler<C2 extends C>(...handlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\t\t\t\t\treturn handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>) => handler.forCommand(command));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCreateAggregateHandler<C2 extends C>(...handlers: Array<CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, Command>>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\t\t\t\t\treturn handlers.some((handler: CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, Command>) => handler.forCommand(command));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofNullHandler<C2 extends C>(handlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>>, aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\n\t\t\t\t\tif (!handlers) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>) => handler.forCommand(command)) &&\n\t\t\t\t\t\t!aggregateCommandHandlers.some((handler: CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command>) => handler.forCommand(command));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, first, map, takeUntil } from 'rxjs/operators';\n\nimport { Command } from './command';\nimport { CommandDispatcher } from './command.dispatcher';\n\nimport { DomainEvent } from '../event/domain-event';\nimport { DomainEventBus } from '../event/domain-event.bus';\nimport { StatusResponse } from '../event/status/status.response';\nimport { AggregateId } from '../aggregate-id';\n\n\nexport abstract class ReplayCommandDispatcher<I extends AggregateId> implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject();\n\n\tprivate subscriptions: Array<number> = [];\n\n\tprotected constructor(private readonly dispatcher: CommandDispatcher,\n\t\t\t\t\t\t  private readonly bus: DomainEventBus) {\n\t}\n\n\tprotected abstract mapEventToResponse(event: DomainEvent<I>): StatusResponse;\n\n\tdispatch(command: Command): string {\n\n\t\tthis.dispatcher.dispatch(command);\n\n\t\treturn command.getMessageId();\n\t}\n\n\tdispatchAndWait(command: Command): Observable<StatusResponse> {\n\n\t\tconst response$ =\n\t\t\tthis.bus\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter((event: DomainEvent<I>) => event.fromCommand(command)),\n\t\t\t\t\tfirst(),\n\t\t\t\t\tmap((event: DomainEvent<I>) => {\n\t\t\t\t\t\treturn this.mapEventToResponse(event);\n\t\t\t\t\t}),\n\t\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t\t);\n\n\t\tconst subscription = setTimeout(() => {\n\t\t\tthis.dispatcher.dispatch(command);\n\t\t});\n\n\t\tthis.subscriptions.push(subscription);\n\n\t\treturn response$;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\n\t\tthis.subscriptions.forEach((handle: number) => {\n\t\t\tclearTimeout(handle);\n\t\t});\n\t}\n\n}\n","import { AggregateId } from '../../aggregate-id';\nimport { DomainEvent } from '../../event/domain-event';\n\nexport abstract class AggregateEvent<T extends AggregateId> {\n\n\tprotected constructor(\n\t\tprivate readonly aggregateId: T,\n\t\tprivate readonly type: string) {\n\t}\n\n\tabstract toDomainEvent(): DomainEvent<T>;\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tequals(event: AggregateEvent<T>): boolean {\n\t\treturn this.equalsByType(event) &&\n\t\t\tthis.getAggregateId().equals(event.getAggregateId());\n\t}\n\n\tequalsByType(event: AggregateEvent<T>): boolean {\n\t\treturn this.getType() === event.getType();\n\t}\n\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from '../../aggregate-id';\n\nimport { Optional } from '../../../common/optional';\n\nexport abstract class AggregateRepository<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract getById(aggregateId: I): Optional<A>;\n\n\tabstract save(aggregate: A): void;\n\n}\n","import { AggregateRoot } from '../aggregate/aggregate-root';\nimport { AggregateId } from '../../aggregate-id';\n\nimport { Optional } from '../../../common/optional';\n\nexport abstract class AggregateStore<I extends AggregateId, S extends AggregateRoot<I>> {\n\n\tabstract save(aggregate: S): void ;\n\n\tabstract getById(aggregateId: I): Optional<S>;\n\n}\n","import { AggregateRoot } from '../aggregate/aggregate-root';\nimport { AggregateStore } from './aggregate.store';\nimport { AggregateId } from '../../aggregate-id';\n\nexport class AggregateStoreRegister {\n\n\tprivate readonly stores: Array<AggregateStore<AggregateId, AggregateRoot<AggregateId>>> = [];\n\n\tregister(store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>): void {\n\t\tthis.stores.push(store);\n\t}\n\n\tcaptureAggregatesSnapshot(aggregateId: AggregateId): { [key: string]: AggregateRoot<AggregateId> } {\n\n\t\tif (!aggregateId) {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet aggregates = {};\n\n\t\tthis.stores.forEach((store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>) => {\n\n\t\t\tconst aggregate = store.getById(aggregateId);\n\n\t\t\tif (aggregate) {\n\n\t\t\t\tlet aggregateName = aggregate.constructor.name;\n\n\t\t\t\taggregates[aggregateName] = aggregate;\n\t\t\t}\n\n\t\t});\n\n\t\treturn this.cloneAggregates(aggregates);\n\t}\n\n\tprivate cloneAggregates(aggregates: { [key: string]: AggregateRoot<AggregateId> }): { [key: string]: AggregateRoot<AggregateId> } {\n\t\treturn JSON.parse(JSON.stringify(aggregates));\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent } from './aggregate-event';\nimport { AggregateId } from '../../aggregate-id';\n\n\nexport abstract class AggregateRoot<I extends AggregateId> {\n\n\tprivate readonly aggregateId: I;\n\n\tprivate readonly events: Array<AggregateEvent<I>>;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  private readonly type: string) {\n\t\tthis.aggregateId = aggregateId;\n\t\tthis.events = [];\n\t}\n\n\tabstract createEvent(): Type<AggregateEvent<I>>;\n\n\tgetId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tgetEvents(): ReadonlyArray<AggregateEvent<I>> {\n\t\treturn this.events as ReadonlyArray<AggregateEvent<I>>;\n\t}\n\n\taddEvent(event: AggregateEvent<I>): void;\n\taddEvent(events: Array<AggregateEvent<I>>): void;\n\taddEvent(args: AggregateEvent<I> | Array<AggregateEvent<I>>): void {\n\n\t\tif (Array.isArray(args)) {\n\t\t\tfor (let event of args) {\n\t\t\t\tthis.events.push(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events.push(args as AggregateEvent<I>);\n\t\t}\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n}\n","import { ReadModelRootId } from '../domain-api/read/read-model-root-id';\n\nexport abstract class AggregateId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toReadModelRootId(): ReadModelRootId;\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(aggregateId: AggregateId): boolean {\n\t\treturn this.uid === aggregateId.getId();\n\t}\n}\n","export enum DomainEventStatus {\n\tSUCCESS,\n\tFAILURE\n}\n","import { DomainEventStatus } from './domain-event-status';\nimport { DomainEventPayload } from '../domain-event.payload';\n\nexport abstract class StatusResponse {\n\n\tprotected constructor(private readonly status: DomainEventStatus,\n\t\t\t\t\t\t  private readonly payload?: DomainEventPayload) {\n\t}\n\n\tgetStatus(): DomainEventStatus {\n\t\treturn this.status;\n\t}\n\n\tgetPayload(): DomainEventPayload {\n\t\treturn this.payload;\n\t}\n}\n","import { AggregateId } from '../aggregate-id';\nimport { Command } from '../command/command';\nimport { DomainEventPayload } from './domain-event.payload';\nimport { Message } from '../message';\n\n\nexport abstract class DomainEvent<I extends AggregateId> extends Message<I> {\n\n\tprivate requestCommandId: string;\n\n\tprivate payload: DomainEventPayload;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  messageType: string,\n\t\t\t\t\t\t  payload?: any) {\n\t\tsuper(aggregateId, messageType);\n\t\tthis.payload = payload;\n\t}\n\n\tisSameType(event: DomainEvent<I>): boolean {\n\t\treturn this.constructor.name === event.constructor.name;\n\t}\n\n\tsetRequestCommand(command: Command): void {\n\t\tthis.requestCommandId = command.getMessageId();\n\t}\n\n\tfromCommand(command: Command): boolean {\n\t\treturn command.getMessageId() === this.requestCommandId;\n\t}\n\n\tsetPayload(payload: DomainEventPayload): void {\n\t\tthis.payload = payload;\n\t}\n\n\tgetPayload(): any {\n\t\treturn this.payload;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject, throwError } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../aggregate-id';\n\n\n@Injectable()\nexport class DomainEventStore {\n\n\tprivate domainEvents: Array<DomainEvent<AggregateId>> = [];\n\n\tprivate domainEvents$: Subject<DomainEvent<AggregateId>> = new Subject<DomainEvent<AggregateId>>();\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tthis.domainEvents.push(event);\n\t\tthis.domainEvents$.next(event);\n\t}\n\n\tfindEventByType(eventType: string): DomainEvent<AggregateId> {\n\n\t\tconst events: Array<DomainEvent<AggregateId>> = this.getEvents();\n\n\t\treturn events.reverse()\n\t\t\t\t\t .find((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\t\t return event.constructor.name === eventType;\n\t\t\t\t\t });\n\t}\n\n\t/**\n\t * First tries to event event in the history,\n\t * than method waits for future occurrences of the event.\n\t */\n\twaitForEvent(eventType: string): Observable<DomainEvent<AggregateId>> {\n\n\t\t// find in a history\n\t\tconst event = this.findEventByType(eventType);\n\n\t\tif (event) {\n\t\t\treturn of(event);\n\t\t}\n\n\t\t// wait for future occurrence\n\t\treturn this.waitForNextEventOccurrence(eventType);\n\t}\n\n\twaitForNextEventOccurrence(eventType: string): Observable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(event: DomainEvent<AggregateId>): Observable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(arg: string | DomainEvent<AggregateId>): Observable<DomainEvent<AggregateId>> {\n\n\t\tlet eventType: string;\n\n\t\tif (arg instanceof DomainEvent) {\n\t\t\teventType = arg.constructor.name;\n\t\t} else if (typeof arg === 'string') {\n\t\t\teventType = arg;\n\t\t} else {\n\t\t\treturn throwError(new Error('Unsupported argument type.'));\n\t\t}\n\n\t\treturn this.domainEvents$\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event) => event.constructor.name === eventType),\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tprivate getEvents(): Array<DomainEvent<AggregateId>> {\n\t\treturn this.domainEvents;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStore } from './domain-event.store';\nimport { AggregateId } from '../aggregate-id';\n\n\n@Injectable()\nexport class DomainEventStream extends Subject<DomainEvent<AggregateId>> {\n\n\tconstructor(private eventStore: DomainEventStore) {\n\t\tsuper();\n\t}\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tsuper.next(event);\n\t\tthis.eventStore.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateEvent } from '../command/aggregate/aggregate-event';\n\nimport { DomainEventStream } from './domain-event.stream';\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../aggregate-id';\nimport { AggregateRoot } from '../command/aggregate/aggregate-root';\n\n\n@Injectable()\nexport class DomainEventPublisher {\n\n\tconstructor(private eventStream: DomainEventStream) {\n\t}\n\n\tpublish(event: DomainEvent<AggregateId>): void;\n\tpublish(events: ReadonlyArray<DomainEvent<AggregateId>>): void;\n\tpublish(args: DomainEvent<AggregateId> | ReadonlyArray<DomainEvent<AggregateId>>): void {\n\n\t\tif (Array.isArray(args)) {\n\n\t\t\tfor (let arg of args) {\n\t\t\t\tthis.publishEvent(arg);\n\t\t\t}\n\t\t} else if (args instanceof DomainEvent) {\n\t\t\tthis.publishEvent(args);\n\t\t}\n\t}\n\n\tpublishFromAggregate(aggregate: AggregateRoot<AggregateId>): void {\n\t\taggregate.getEvents()\n\t\t\t\t .forEach((aggregateEvent: AggregateEvent<AggregateId>) => {\n\t\t\t\t\t this.publish(\n\t\t\t\t\t\t aggregateEvent.toDomainEvent()\n\t\t\t\t\t );\n\t\t\t\t });\n\t}\n\n\tprivate publishEvent(event: DomainEvent<AggregateId>): void {\n\n\t\tif (!event) {\n\t\t\tconsole.error(`${event} is not defined`);\n\t\t}\n\n\t\tif (!(event instanceof DomainEvent)) {\n\t\t\t// throw new Error(`${event} is not a DomainEvent`);\n\n\t\t\tconsole.error(`${event} is not a DomainEvent`);\n\t\t}\n\n\t\tthis.eventStream.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Operator } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStream } from './domain-event.stream';\nimport { AggregateId } from '../aggregate-id';\nimport { DomainEventHandlerImpl } from './handler/domain-event-handler-impl';\n\n\n@Injectable()\nexport class DomainEventBus<E = DomainEvent<AggregateId>> extends Observable<E> {\n\n\tconstructor(eventStream?: DomainEventStream) {\n\t\tsuper();\n\n\t\tif (eventStream) {\n\t\t\tthis.source = eventStream;\n\t\t}\n\t}\n\n\tlift<R>(operator: Operator<E, R>): Observable<R> {\n\t\tconst observable = new DomainEventBus<R>();\n\t\tobservable.source = this;\n\t\tobservable.operator = operator;\n\t\treturn observable;\n\t}\n\n\tofEvent<E2 extends E>(...events: Array<typeof DomainEvent>): Observable<any> {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn events.some((event: typeof DomainEvent) => {\n\t\t\t\t\t\tconst eventInstance = this.createEventInstance(event);\n\t\t\t\t\t\treturn eventInstance.equalsByType(domainEvent);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofEventHandler<E2 extends E>(...handlers: Array<DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>>): any {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn handlers.some((handler: DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>) => handler.forEvents([event]));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tprivate createEventInstance(event: typeof DomainEvent): DomainEvent<AggregateId> {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = event.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (event as any)(...args));\n\t}\n\n}\n","export class DomainEventPayload {\n\n\tconstructor(private readonly value: any) {\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n}\n","import { ReadModelEntityId } from './read-model-entity-id';\n\nexport abstract class ReadModelEntity<T extends ReadModelEntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.entityId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.entityId;\n\t}\n}\n","export class ReadModelEntityId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelEntityId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n}\n","import { ReadModelRootId } from './read-model-root-id';\n\nexport abstract class ReadModelRoot<T extends ReadModelRootId> {\n\n\tprivate readonly rootId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.rootId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.rootId;\n\t}\n\n}\n","import { AggregateId } from '../../domain/aggregate-id';\n\nexport abstract class ReadModelRootId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toAggregateId(): AggregateId;\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelRootId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n\n}\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { DomainEvent } from '../../domain/event/domain-event';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\n\nimport { Reactive } from '../../common/reactive';\nimport { AggregateId } from '../../domain/aggregate-id';\n\nexport abstract class ReadModelRootRepository<I extends AggregateId> extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<I>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subscribe(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subscribe(event: DomainEvent<I>): void;\n\n}\n","import { ReadModelRoot } from '../read-model-root';\n\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../read-model-root-id';\nimport { AggregateId } from '../../../domain/aggregate-id';\n\nexport abstract class ReadModelStore<I extends ReadModelRootId, R extends ReadModelRoot<I>> {\n\n\tabstract getById(readModelRootId: AggregateId): Optional<R>;\n\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { AggregateId } from '../../domain/aggregate-id';\nimport { DomainEvent } from '../../domain/event/domain-event';\nimport { ReadModelRootId } from '../read/read-model-root-id';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\n\nexport abstract class EventRepository<R extends ReadModelRootId, I extends AggregateId> {\n\n\tprotected constructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tprotected onEvent(aggregateId: R, eventType: Type<DomainEvent<I>>): Observable<DomainEvent<any>> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   eventType as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<AggregateId>) => event.getAggregateId().toString() === aggregateId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { EntityId } from './entity-id';\n\nexport abstract class Entity<T extends EntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(id: T) {\n\t\tthis.entityId = id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.entityId;\n\t}\n\n\tequals(entity: Entity<T>): boolean {\n\t\treturn this.entityId.equals(entity.getId());\n\t}\n\n}\n","export abstract class EntityId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: EntityId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n\n}\n","export function ValueObject(target: Function) {\n}\n\nexport function DomainObject(target: Function) {\n}\n\nexport function ReadModelObject(target: Function) {\n}\n","export abstract class DomainModule {\n\n\tprotected constructor() {\n\t}\n\n}\n","export abstract class ApiModule {\n\n\tprotected constructor() {\n\t}\n\n}\n","export abstract class FeatureModule {\n\n\tprotected constructor() {\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class ReactiveService extends Reactive implements OnDestroy {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '../domain/aggregate-id';\nimport { ReactiveService } from './reactive.service';\n\nexport interface DefaultAggregateValues<T> {\n\taggregateId: AggregateId;\n\tvalue: T;\n}\n\nexport abstract class AggregateArchive<T> extends ReactiveService {\n\n\tprivate archive = new Map<string, T>();\n\n\tprivate archive$: Subject<Map<string, T>>;\n\n\tprotected constructor(defaultValue?: DefaultAggregateValues<T>) {\n\t\tsuper();\n\t\tthis.initArchive(defaultValue);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<T> {\n\t\treturn this.archive$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, T>) => {\n\t\t\t\t\t\t   return map.get(aggregateId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tnext(aggregateId: AggregateId, value: T): void {\n\t\tthis.archive.set(aggregateId.toString(), value);\n\t\tthis.archive$.next(this.archive);\n\t}\n\n\tprivate initArchive(defaultValue?: DefaultAggregateValues<T>): void {\n\t\tif (defaultValue) {\n\t\t\tthis.archive.set(defaultValue.aggregateId.toString(), defaultValue.value);\n\t\t\tthis.archive$ = new BehaviorSubject<Map<string, T>>(this.archive);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject<Map<string, T>>(1);\n\t\t}\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","export class Optional<T> {\n\n\tstatic empty(): Optional<any> {\n\t\treturn new Optional<any>(null);\n\t}\n\n\tstatic of<U>(value: U): Optional<U> {\n\t\treturn new Optional<U>(value);\n\t}\n\n\tprivate static isEmpty(value: any): boolean {\n\t\treturn typeof value === 'undefined' || value === null;\n\t}\n\n\tprivate readonly value: T;\n\n\tprivate constructor(value: T) {\n\t\tif (!Optional.isEmpty(value) && Optional.isEmpty(value)) {\n\t\t\treturn Optional.empty();\n\t\t}\n\t\tthis.value = value;\n\t\treturn this;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn Optional.isEmpty(this.value);\n\t}\n\n\tisPresent(): boolean {\n\t\treturn !this.isEmpty();\n\t}\n\n\tfilter(filterer: (value: T) => boolean): Optional<T> {\n\t\tif (this.isPresent() && filterer(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\tforEach(callback: (value: T) => any): void {\n\t\tif (this.isPresent()) {\n\t\t\tcallback(this.value);\n\t\t}\n\t}\n\n\tmap<U>(mapper: (value: T) => U): Optional<U> {\n\t\tif (this.isPresent()) {\n\t\t\treturn new Optional<U>(mapper(this.value));\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetValueOrNullOrThrowError(): T {\n\t\treturn this.value;\n\t}\n\n\tgetOrThrow(): T {\n\t\tif (this.isEmpty()) {\n\t\t\tthrow new Error('Called getOrThrow on an empty Optional');\n\t\t}\n\t\treturn this.value;\n\t}\n\n\tgetOrElse<U extends T>(other: () => U): T {\n\t\tif (this.isPresent()) {\n\t\t\treturn this.value;\n\t\t}\n\t\treturn other();\n\t}\n\n\tifPresent(method: (value: T) => void): void {\n\t\tif (this.isPresent()) {\n\t\t\tmethod(this.value);\n\t\t}\n\t}\n\n\tifEmpty(method: () => void): void {\n\t\tif (this.isEmpty()) {\n\t\t\tmethod();\n\t\t}\n\t}\n\n\torElse<U extends T>(other: () => Optional<U>): Optional<T> {\n\t\tif (this.isPresent()) {\n\t\t\treturn this;\n\t\t}\n\t\treturn other();\n\t}\n\n}\n","import { ReadModelRootId } from '../../domain-api/read/read-model-root-id';\n\nexport abstract class PersistAnemia<I extends ReadModelRootId> {\n\n\tprivate readonly readModelRootId: I;\n\n\tprotected constructor(uid: I) {\n\t\tthis.readModelRootId = uid;\n\t}\n\n\tgetReadModelRootId(): I {\n\t\treturn this.readModelRootId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.getReadModelRootId().toString();\n\t}\n\n}\n","import { PersistAnemia } from './persist-anemia';\nimport { Optional } from '../../common/optional';\nimport { ReadModelRootId } from '../../domain-api/read/read-model-root-id';\nimport { AggregateId } from '../../domain/aggregate-id';\n\n\nexport abstract class PersistStateStore<I extends ReadModelRootId, A extends PersistAnemia<I>> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(anemia: A): void {\n\t\tthis.state.set(anemia.getId(), anemia);\n\t}\n\n\tsetMany(anemias: Array<A>): void {\n\t\tanemias.forEach((anemia: A) => {\n\t\t\tthis.set(anemia);\n\t\t});\n\t}\n\n\tget(aggregateId: AggregateId): Optional<A> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<A> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n}\n","import { ReadModelRoot } from '../../../domain-api/read/read-model-root';\nimport { ReadModelStore } from '../../../domain-api/read/store/read-model.store';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../../../domain-api/read/read-model-root-id';\nimport { AggregateId } from '../../../domain/aggregate-id';\n\n\nexport abstract class PersistReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tA extends PersistAnemia<I>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<I, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(anemia: A): R;\n\n\tgetById(aggregateId: AggregateId): Optional<R> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): Array<R> {\n\t\treturn this.getAllValues();\n\t}\n\n\tprivate getAllValues(): Array<R> {\n\t\treturn this.stateStore\n\t\t\t\t   .getAll()\n\t\t\t\t   .map((anemia: A) => this.toReadModel(anemia));\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): Optional<R> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.toReadModel);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/command/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../../../domain-api/read/read-model-root-id';\n\n\nexport abstract class PersistAggregateStore<I extends AggregateId, D extends AggregateRoot<I>, A extends PersistAnemia<ReadModelRootId>> extends AggregateStore<I, D> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<any, A>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tabstract toAnemia(aggregate: D): A;\n\n\tabstract fromAnemia(anemia: A): D;\n\n\tsave(aggregate: D): void {\n\t\tthis.saveValue(aggregate);\n\t}\n\n\tgetById(aggregateId: I): Optional<D> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate saveValue(aggregate: D): void {\n\n\t\tconst anemia = this.toAnemia(aggregate);\n\n\t\tthis.stateStore.set(anemia);\n\t}\n\n\tprivate getValue(aggregateId: I): Optional<D> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.fromAnemia);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/command/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { InMemoryStore } from '../in-memory.store';\n\nimport { Optional } from '../../../common/optional';\n\nexport abstract class InMemoryAggregateStore<I extends AggregateId, T extends AggregateRoot<I>> extends AggregateStore<I, T> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<I, T>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tsave(aggregate: T): void;\n\tsave(aggregates: Array<T>): void;\n\tsave(arg: T | Array<T>): void {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\targ.forEach((aggregate: T) => {\n\t\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t\t});\n\t\t} else {\n\t\t\tconst aggregate = arg;\n\n\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t}\n\t}\n\n\tgetById(aggregateId: I): Optional<T> {\n\n\t\tconst optAggregate = this.inMemoryStore.get(aggregateId);\n\n\t\toptAggregate.ifPresent((a) => a.clearEvents());\n\n\t\treturn optAggregate;\n\t}\n\n\tgetAll(): Array<T> {\n\t\treturn this.inMemoryStore.getAll();\n\t}\n\n\tremove(aggregateId: I): void {\n\t\tthis.inMemoryStore.delete(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/aggregate-id';\nimport { AggregateRoot } from '../../../domain/command/aggregate/aggregate-root';\n\nimport { ReadModelRoot } from '../../../domain-api/read/read-model-root';\n\nimport { ReadModelStore } from '../../../domain-api/read/store/read-model.store';\n\nimport { InMemoryStore } from '../in-memory.store';\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../../../domain-api/read/read-model-root-id';\n\n\nexport abstract class InMemoryReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tB extends AggregateId,\n\tA extends AggregateRoot<B>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<B, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(aggregate: A): R;\n\n\tgetById(aggregateId: B): Optional<R> {\n\n\t\t// const aggregateId = readModelRootId.toAggregateId() as B; // TODO remove as\n\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): ReadonlyArray<R> {\n\t\treturn this.inMemoryStore\n\t\t\t\t   .getAll()\n\t\t\t\t   .map((aggregate: A) => this.toReadModel(aggregate));\n\t}\n\n\tprivate getValue(aggregateId: B): Optional<R> {\n\t\tconst optAggregate: Optional<A> = this.inMemoryStore.get(aggregateId);\n\n\t\treturn optAggregate.map(this.toReadModel.bind(this));\n\t}\n\n}\n","import { AggregateId } from '../../domain/aggregate-id';\nimport { AggregateRoot } from '../../domain/command/aggregate/aggregate-root';\nimport { Optional } from '../../common/optional';\n\nexport abstract class InMemoryStore<I extends AggregateId, S extends AggregateRoot<I>> {\n\n\tprivate readonly state: Map<string, S> = new Map();\n\n\tset(aggregate: S): void {\n\t\tthis.state.set(aggregate.getId().toString(), aggregate);\n\t}\n\n\tsetMany(aggregates: Array<S>): void {\n\t\taggregates.forEach((aggregate: S) => {\n\t\t\tthis.set(aggregate);\n\t\t});\n\t}\n\n\tget(aggregateId: I): Optional<S> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<S> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\thas(aggregateId: I): boolean {\n\t\treturn this.state.has(aggregateId.toString());\n\t}\n\n\tdelete(aggregateId: I): void {\n\t\tthis.state.delete(aggregateId.toString());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n\n}\n","export const COMMAND_LOGGER_ENABLED = 'GUI - COMMAND_LOGGER_ENABLED';\nexport const EVENT_LOGGER_ENABLED = 'GUI - EVENT_LOGGER_ENABLED';\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { CommandBus } from '../../../domain/command/command.bus';\nimport { Command } from '../../../domain/command/command';\nimport { CommandLogger } from '../../../domain/command/command.logger';\n\n\n@Injectable()\nexport class ConsoleCommandLogger extends CommandLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(commandBus: CommandBus) {\n\t\tsuper();\n\n\t\tcommandBus\n\t\t\t.pipe(\n\t\t\t\tfilter(() => this.enabled),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((command: Command) => {\n\t\t\t\tthis.log(command);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(command: Command): void {\n\t\tconsole.log(command.toString(), command);\n\t}\n\n}\n","import { CommandLogger } from '../../../domain/command/command.logger';\nimport { Command } from '../../../domain/command/command';\n\n\nexport class NoopCommandLogger extends CommandLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprotected print(command: Command): void {\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEventBus } from '../../../domain/event/domain-event.bus';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\nimport { AggregateId } from '../../../domain/aggregate-id';\n\n\n@Injectable()\nexport class ConsoleEventLogger extends DomainEventLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(eventBus: DomainEventBus,\n\t\t\t\tprivate readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\n\t\teventBus\n\t\t\t.pipe(\n\t\t\t\tfilter(() => this.enabled),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\tthis.log(domainEvent);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(domainEvent: DomainEvent<AggregateId>): void {\n\t\tconst aggregateId = domainEvent.getAggregateId(),\n\t\t\taggregates = this.aggregateStoreRegister.captureAggregatesSnapshot(aggregateId);\n\n\t\tconsole.log(domainEvent.toString(), domainEvent, aggregates);\n\t}\n\n}\n","import { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateId } from '../../../domain/aggregate-id';\n\nexport class NoopEventLogger extends DomainEventLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprint(event: DomainEvent<AggregateId>): void {\n\t}\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { CommandLogger } from '../domain/command/command.logger';\n\n\n@Injectable()\nexport class HermesLoggersInitializer {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\t}\n\n\tstart(): void {\n\t\tthis.loggersStart();\n\t}\n\n\tstop(): void {\n\t\tthis.loggersStop();\n\t}\n\n\tprivate loggersStart(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.start();\n\t\t\tthis.eventLogger.start();\n\t\t}\n\t}\n\n\tprivate loggersStop(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.stop();\n\t\t\tthis.eventLogger.stop();\n\t\t}\n\t}\n\n}\n","import { AggregateRoot } from '../aggregate-root';\nimport { CreateAggregateCommandHandler } from './create-aggregate.command-handler';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../../config/define';\nimport { AggregateFactory } from '../aggregate-factory';\nimport { AggregateRepository } from '../aggregate-repository';\nimport { AggregateId } from '../../../aggregate-id';\nimport { CreateAggregateCommand } from './create-aggregate.command';\nimport { DomainEventPublisher } from '../../../event/domain-event.publisher';\n\n\nexport function createAggregateCommandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand>(createAggregateCommandHandler: CreateAggregateCommandHandler<A, C>, factoryArchive: AggregateFactoryArchive<I, A>, aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>, aggregateName: string, domainEventPublisher: DomainEventPublisher): CreateAggregateCommandHandlerImpl<I, A, C> {\n\treturn new CreateAggregateCommandHandlerImpl<I, A, C>(createAggregateCommandHandler, factoryArchive, aggregateRepositoryArchive, aggregateName, domainEventPublisher);\n}\n\nexport class CreateAggregateCommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly createAggregateCommandHandler: CreateAggregateCommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\thandleCommand(command: C) {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optFactory = this.aggregateFactoryArchive.get(this.aggregateType);\n\n\t\toptFactory.ifPresent((factory: AggregateFactory<I, A>) => {\n\n\t\t\tconst aggregate = factory.create(aggregateId);\n\n\t\t\tconst type = aggregate.getType(),\n\t\t\t\tcreateCommandConstructor = aggregate.createEvent();\n\n\t\t\tconst createCommand = new createCommandConstructor(aggregateId, type);\n\n\t\t\taggregate.addEvent(createCommand);\n\n\t\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\t\trepo.save(aggregate);\n\n\t\t\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.createAggregateCommandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(...args));\n\t}\n\n}\n","/**\n * ngc for grid package for some reasons doesn't allow to use injection token\n */\nexport const CREATE_AGGREGATE_COMMAND_HANDLERS = 'HERMES - CREATE_AGGREGATE_COMMAND_HANDLERS';\n","import { Provider } from '@angular/core';\n\nimport { AggregateFactory } from '../aggregate/aggregate-factory';\nimport { AggregateRoot } from '../aggregate/aggregate-root';\nimport { Optional } from '../../../common/optional';\nimport { AggregateRepository } from '../aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../aggregate/create/create-aggregate.command-handler';\nimport { AggregateId } from '../../aggregate-id';\nimport { Command } from '../command';\n\n\nexport class AggregateFactoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateFactory<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, factory: AggregateFactory<I, A>): void {\n\n\t\tthis.map.set(key, factory);\n\t}\n\n\tget(key: string): Optional<AggregateFactory<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n}\n\nexport class AggregateRepositoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateRepository<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, repository: AggregateRepository<I, A>): void {\n\n\t\tthis.map.set(key, repository);\n\t}\n\n\tget(key: string): Optional<AggregateRepository<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n}\n\nexport interface AggregateConfig<I extends AggregateId, A extends AggregateRoot<I>, C extends Command> {\n\n\trepository: AggregateRepository<I, A>;\n\n\tfactory: AggregateFactory<I, A>;\n\n\tkey: string;\n\n\tcreateHandler: CreateAggregateCommandHandler<A, C>;\n\n\tcommandHandlers: Array<Provider>\n\n}\n","export const aggregateDefinitionToken = 'Hermes - aggregateDefinitionToken';\n","import { NgModule, OnDestroy } from '@angular/core';\n\n@NgModule({})\nexport class HermesDomainModule implements OnDestroy {\n\n\tngOnDestroy() {\n\t}\n\n}\n","export const COMMAND_HANDLERS = 'HERMES - COMMAND_HANDLERS_TOKEN';\n","import { AggregateRoot } from '../aggregate/aggregate-root';\nimport { Command } from '../command';\nimport { AggregateRepositoryArchive } from '../config/define';\nimport { AggregateRepository } from '../aggregate/aggregate-repository';\nimport { CommandHandler } from './command.handler';\nimport { AggregateId } from '../../aggregate-id';\n\n\nexport function commandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends Command>(\n\tcommandHandler: CommandHandler<A, C>,\n\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\taggregateName: string\n): CommandHandlerImpl<I, A, C> {\n\treturn new CommandHandlerImpl<I, A, C>(commandHandler, aggregateRepositoryArchive, aggregateName);\n}\n\nexport class CommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends Command> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly commandHandler: CommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\tpublishDomainEvents(aggregate: A, command: C): void {\n\t\tthis.commandHandler.publishDomainEvents(aggregate, command);\n\t}\n\n\thandleCommand(command: C): void {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\tconst optAggregate = repo.getById(aggregateId);\n\n\t\t\toptAggregate.ifPresent((aggregate: A) => {\n\n\t\t\t\tthis.commandHandler.handleAggregate(aggregate, command);\n\n\t\t\t\tthis.publishDomainEvents(aggregate, command);\n\t\t\t});\n\t\t});\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.commandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (this.commandHandler.forCommand() as any)(...args));\n\t}\n\n}\n","import { Type } from '@angular/core';\n\nimport { DomainEventHandler } from './domain-event.handler';\nimport { AggregateId } from '../../aggregate-id';\nimport { DomainEvent } from '../domain-event';\nimport { MultiDomainEventHandler } from './multi-domain-event.handler';\n\n\nexport function domainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: DomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, [domainEventHandler.forEvent()]);\n}\n\n\nexport function multiDomainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: MultiDomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, domainEventHandler.forEvents());\n}\n\n\nexport class DomainEventHandlerImpl<I extends AggregateId, E extends DomainEvent<I>> {\n\n\tprivate readonly eventTypes: Array<string>;\n\n\tconstructor(private readonly domainEventHandler: DomainEventHandler<I, E> | MultiDomainEventHandler<I, E>,\n\t\t\t\tprivate readonly events: Array<Type<E>>) {\n\t\tthis.eventTypes = this.createDomainEventTypes();\n\t}\n\n\thandleEvent(event: E): void {\n\t\tthis.domainEventHandler.handle(event);\n\t}\n\n\tforEvents(events: Array<E>): boolean {\n\t\treturn events.some((event: E) => {\n\t\t\treturn this.eventTypes.some((type: string) => {\n\t\t\t\treturn type === event.getMessageType();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate createDomainEventTypes(): Array<string> {\n\n\t\tlet types = [];\n\n\t\tfor(let event of this.events) {\n\t\t\tlet instance = this.createDomainEventInstance(event);\n\t\t\ttypes.push(instance.getMessageType());\n\t\t}\n\n\t\treturn types;\n\t}\n\n\tprivate createDomainEventInstance(eventType: Type<E>): E {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = eventType.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (eventType as any)(...args));\n\t}\n\n}\n","import { Inject, Injector, ModuleWithProviders, NgModule, OnDestroy, Optional, Provider, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Command\n */\nimport { AggregateRoot } from '../domain/command/aggregate/aggregate-root';\nimport { Command } from '../domain/command/command';\nimport { CommandBus } from '../domain/command/command.bus';\nimport { CommandDispatcher } from '../domain/command/command.dispatcher';\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { CommandStream } from '../domain/command/command.stream';\nimport { FILTERED_COMMAND_STREAM } from '../domain/command/filtered-command-stream';\nimport { AggregateStoreRegister } from '../domain/command/store/aggregate-store.register';\nimport { DomainEvent } from '../domain/event/domain-event';\nimport { DomainEventBus } from '../domain/event/domain-event.bus';\nimport { DomainEventPublisher } from '../domain/event/domain-event.publisher';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { DomainEventStore } from '../domain/event/domain-event.store';\nimport { DomainEventStream } from '../domain/event/domain-event.stream';\n/**\n * APP\n */\nimport { HermesModuleConfig } from './hermes-module-config';\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED } from '../domain/hermes-tokens';\nimport { HermesApi } from './/hermes-api';\n/**\n * Infrastructure\n */\nimport { ConsoleCommandLogger } from '../infrastructure/logger/command/console.command.logger';\nimport { NoopCommandLogger } from '../infrastructure/logger/command/noop.command.logger';\nimport { ConsoleEventLogger } from '../infrastructure/logger/event/console.event.logger';\nimport { NoopEventLogger } from '../infrastructure/logger/event/noop.event.logger';\nimport { RandomStringGenerator } from '../common/random-string.generator';\nimport { HermesLoggersInitializer } from './hermes.loggers.initializer';\nimport {\n\tcreateAggregateCommandHandlerFactory,\n\tCreateAggregateCommandHandlerImpl\n} from '../domain/command/aggregate/create/create-aggregate.command-handler-impl';\nimport { CREATE_AGGREGATE_COMMAND_HANDLERS } from '../domain/command/aggregate/create/create-aggregate.command-handlers-token';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../domain/command/config/define';\nimport { AggregateFactory } from '../domain/command/aggregate/aggregate-factory';\nimport { aggregateDefinitionToken } from '../domain/command/config/aggregate-definition.token';\nimport { AggregateDefinition } from '../domain/command/config/aggregate-definition';\nimport { AggregateRepository } from '../domain/command/aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../domain/command/aggregate/create/create-aggregate.command-handler';\nimport { HermesDomainModule } from './hermes.domain.module';\nimport { COMMAND_HANDLERS } from '../domain/command/handler/command-handlers';\nimport { commandHandlerFactory, CommandHandlerImpl } from '../domain/command/handler/command-handler-impl';\nimport { CommandHandler } from '../domain/command/handler/command.handler';\nimport { AggregateId } from '../domain/aggregate-id';\nimport { Reactive } from '../common/reactive';\nimport {\n\tdomainEventHandlerFactory,\n\tDomainEventHandlerImpl,\n\tmultiDomainEventHandlerFactory\n} from '../domain/event/handler/domain-event-handler-impl';\nimport { DOMAIN_EVENT_HANDLERS } from '../domain/event/handler/domain-event-handlers';\nimport { DomainEventHandler } from '../domain/event/handler/domain-event.handler';\nimport { MultiDomainEventHandler } from '../domain/event/handler/multi-domain-event.handler';\n\n\nconst hermesProviders = [\n\tRandomStringGenerator,\n\t{ provide: FILTERED_COMMAND_STREAM, useExisting: CommandStream },\n\tCommandBus,\n\tCommandStream,\n\tCommandDispatcher,\n\tAggregateStoreRegister,\n\n\tDomainEventBus,\n\tDomainEventStream,\n\tDomainEventPublisher,\n\tDomainEventStore,\n\n\tHermesApi\n];\n\nconst providers = [\n\t{ provide: EVENT_LOGGER_ENABLED, useValue: true },\n\t{ provide: COMMAND_LOGGER_ENABLED, useValue: true },\n\t{ provide: CommandLogger, useFactory: commandLoggerFactory, deps: [COMMAND_LOGGER_ENABLED, ConsoleCommandLogger, NoopCommandLogger] },\n\t{ provide: DomainEventLogger, useFactory: eventLoggerFactory, deps: [EVENT_LOGGER_ENABLED, ConsoleEventLogger, NoopEventLogger] },\n\tConsoleCommandLogger,\n\tNoopCommandLogger,\n\tNoopEventLogger,\n\tConsoleEventLogger,\n\tHermesLoggersInitializer,\n\tAggregateFactoryArchive,\n\tAggregateRepositoryArchive,\n\t...hermesProviders\n];\n\nexport function commandLoggerFactory(enabled: boolean, consoleCommandLogger: ConsoleCommandLogger, noopCommandLogger: NoopCommandLogger) {\n\n\tif (enabled) {\n\t\treturn consoleCommandLogger;\n\t} else {\n\t\treturn noopCommandLogger;\n\t}\n}\n\nexport function eventLoggerFactory(enabled: boolean, consoleEventLogger: ConsoleEventLogger, noopEventLogger: NoopEventLogger) {\n\n\tif (enabled) {\n\t\treturn consoleEventLogger;\n\t} else {\n\t\treturn noopEventLogger;\n\t}\n}\n\nexport class HermesBaseModule<I extends AggregateId, A extends AggregateRoot<I>, C extends Command, E extends DomainEvent<I>> extends Reactive implements OnDestroy {\n\n\tconstructor(@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandlerImpl<I, E>>,\n\t\t\t\t@Optional() @Inject(CREATE_AGGREGATE_COMMAND_HANDLERS) aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(aggregateDefinitionToken) definedAggregate: Array<AggregateDefinition<I, A>>,\n\t\t\t\tinjector: Injector,\n\t\t\t\taggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tprivate hermesLoggersInitializer: HermesLoggersInitializer,\n\t\t\t\tprivate hermesApi: HermesApi) { // HermesApi initialization\n\t\tsuper();\n\n\t\tthis.hermesLoggersInitializer.start();\n\n\t\tthis.checkNullCommand(commandBus, commandHandlers, aggregateCommandHandlers);\n\t\tthis.checkCommandHandlerIsCollection(commandHandlers);\n\t\tthis.checkDomainEventHandlerIsCollection(eventHandlers);\n\n\t\tif (definedAggregate) {\n\t\t\tdefinedAggregate.forEach((def: AggregateDefinition<I, A>) => {\n\n\t\t\t\tconst factory = injector.get(def.factory),\n\t\t\t\t\trepository = injector.get(def.repository);\n\n\t\t\t\taggregateFactoryArchive.add(def.key, factory);\n\t\t\t\taggregateRepositoryArchive.add(def.key, repository);\n\t\t\t});\n\t\t}\n\n\t\tif (aggregateCommandHandlers) {\n\n\t\t\taggregateCommandHandlers.forEach((handler: CreateAggregateCommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCreateAggregateHandler(handler)\n\t\t\t\t\t.pipe(this.takeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (commandHandlers) {\n\t\t\tcommandHandlers.forEach((handler: CommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCommandHandler(handler)\n\t\t\t\t\t.pipe(this.takeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (eventHandlers) {\n\n\t\t\teventHandlers.forEach((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\tdomainEventBus\n\t\t\t\t\t.ofEventHandler(handler)\n\t\t\t\t\t.pipe(this.takeUntil())\n\t\t\t\t\t.subscribe((event: E) => {\n\t\t\t\t\t\thandler.handleEvent(event);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tdomainEventBus\n\t\t\t\t.pipe(this.takeUntil())\n\t\t\t\t.subscribe((event: E) => {\n\n\t\t\t\t\teventHandlers.forEach((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\t\t\thandler.handleEvent(event);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.hermesLoggersInitializer.stop();\n\t}\n\n\tprivate checkNullCommand(commandBus: CommandBus, commandHandlers: Array<CommandHandlerImpl<I, A, C>>, aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>): void {\n\t\tcommandBus\n\t\t\t.ofNullHandler(commandHandlers, aggregateCommandHandlers)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((command: C) => {\n\t\t\t\tconsole.error(`Command ${command.toString()} was not intercepted by any CommandHandler.`);\n\t\t\t});\n\t}\n\n\tprivate checkCommandHandlerIsCollection(commandHandlers: Array<CommandHandlerImpl<I, A, C>>): void {\n\t\tif (commandHandlers && !Array.isArray(commandHandlers)) {\n\t\t\tconsole.warn(`You might provided commandHandler without specifying \"multi: true\".`);\n\t\t}\n\t}\n\n\tprivate checkDomainEventHandlerIsCollection(eventHandlers: Array<DomainEventHandlerImpl<I, E>>): void {\n\t\tif (eventHandlers && !Array.isArray(eventHandlers)) {\n\t\t\tconsole.warn(`You might provided eventHandler without specifying \"multi: true\".`);\n\t\t}\n\t}\n\n}\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: providers\n})\nexport class HermesModule extends HermesBaseModule<any, any, any, any> {\n\n\tstatic defineAggregate<I extends AggregateId, A extends AggregateRoot<I>, C extends Command>(aggregateKey: string,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t factory: Type<AggregateFactory<I, A>>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t repository: Type<AggregateRepository<I, A>>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t createHandler: Type<CreateAggregateCommandHandler<A, C>>,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t commandHandlers: Array<Provider> = [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t domainEventHandlers: Array<Provider> = []): ModuleWithProviders<any> {\n\t\treturn {\n\t\t\tngModule: HermesDomainModule,\n\t\t\tproviders: [{\n\t\t\t\tprovide: aggregateDefinitionToken,\n\t\t\t\tmulti: true,\n\t\t\t\tuseValue: {\n\t\t\t\t\tkey: aggregateKey,\n\t\t\t\t\tfactory: factory,\n\t\t\t\t\trepository: repository\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tprovide: aggregateKey,\n\t\t\t\tuseValue: aggregateKey\n\t\t\t},\n\t\t\t\tfactory,\n\t\t\t\trepository,\n\t\t\t\t...HermesModule.registerCreateCommandHandler(createHandler, aggregateKey),\n\t\t\t\t...commandHandlers,\n\t\t\t\t...domainEventHandlers\n\t\t\t]\n\t\t};\n\t}\n\n\tstatic withConfig(config: HermesModuleConfig = { loggers: false }): ModuleWithProviders<HermesModule> {\n\t\treturn {\n\t\t\tngModule: HermesModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic registerCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command>(\n\t\tcommandHandlerType: Type<CommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: commandHandlerType,\n\t\t\t\tuseClass: commandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: COMMAND_HANDLERS,\n\t\t\t\tuseFactory: commandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcommandHandlerType,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<DomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: domainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerMultiDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<MultiDomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: multiDomainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tprivate static registerCreateCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command>(\n\t\tcreateCommandHandlerType: Type<CreateAggregateCommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: createCommandHandlerType,\n\t\t\t\tuseClass: createCommandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: CREATE_AGGREGATE_COMMAND_HANDLERS,\n\t\t\t\tuseFactory: createAggregateCommandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcreateCommandHandlerType,\n\t\t\t\t\tAggregateFactoryArchive,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName,\n\t\t\t\t\tDomainEventPublisher\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\n}\n","import { AggregateId } from '../domain/aggregate-id';\n\nimport { AggregateEvent } from '../domain/command/aggregate/aggregate-event';\nimport { DomainEvent } from '../domain/event/domain-event';\n\ndeclare var expect: any;\n\nexport function assertDomainEvents<I extends AggregateId>(actualEvents: ReadonlyArray<DomainEvent<I>>, expectedEvents: Array<DomainEvent<I>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length);\n\n\tfor (let actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: DomainEvent<I>) => {\n\t\t\treturn event.equalsByType(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t\texpect(actualEvent.equalsByType(expectedEvent)).toBeTruthy('Event type should be equal');\n\t\t// expect(actualEvent.aggregateId).toEqual(expectedEvent.aggregateId, 'Events aggregateId should be the same');\n\t\texpect(actualEvent.getPayload()).toEqual(expectedEvent.getPayload(), 'Events payload should be the same');\n\t}\n\n}\n\nexport function assertAggregateEvents<T extends AggregateId>(actualEvents: ReadonlyArray<AggregateEvent<T>>, expectedEvents: Array<AggregateEvent<T>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length, 'Aggregate events');\n\n\tfor (let actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: AggregateEvent<T>) => {\n\t\t\treturn event.equals(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t}\n}\n","import { AggregateId } from '../../../aggregate-id';\nimport { Command } from '../../command';\n\nexport abstract class CreateAggregateCommand extends Command {\n\n\tprotected constructor(aggregateId: AggregateId,\n\t\t\t\t\t\t  type: string) {\n\t\tsuper(aggregateId, type);\n\t}\n\n}\n"],"names":["tslib_1.__extends","isPlatformBrowser","Injectable","Inject","PLATFORM_ID","Subject","InjectionToken","filter","Observable","first","map","takeUntil","tslib_1.__values","of","throwError","take","distinctUntilChanged","BehaviorSubject","ReplaySubject","NgModule","Optional","Injector","CommonModule"],"mappings":"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"}