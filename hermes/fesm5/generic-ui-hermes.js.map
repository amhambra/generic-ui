{"version":3,"file":"generic-ui-hermes.js","sources":["ng://@generic-ui/hermes/common/logger.ts","ng://@generic-ui/hermes/domain/command/command.logger.ts","ng://@generic-ui/hermes/domain/event/domain-event.logger.ts","ng://@generic-ui/hermes/ui-api/hermes-api.ts","ng://@generic-ui/hermes/ui-api/hermes-api.helpers.ts","ng://@generic-ui/hermes/domain/command/command-handlers.ts","ng://@generic-ui/hermes/domain/event/domain-event-handlers.ts","ng://@generic-ui/hermes/domain/provider.helpers.ts","ng://@generic-ui/hermes/domain/command/command.stream.ts","ng://@generic-ui/hermes/domain/command/command.dispatcher.ts","ng://@generic-ui/hermes/common/random-string.generator.ts","ng://@generic-ui/hermes/domain/message.ts","ng://@generic-ui/hermes/domain/command/command.ts","ng://@generic-ui/hermes/domain/command/command.handler.ts","ng://@generic-ui/hermes/domain/command/filtered-command-stream.ts","ng://@generic-ui/hermes/domain/command/command.bus.ts","ng://@generic-ui/hermes/domain/command/replay-command.dispatcher.ts","ng://@generic-ui/hermes/domain/command/aggregate-event.ts","ng://@generic-ui/hermes/domain/command/store/aggregate.store.ts","ng://@generic-ui/hermes/domain/command/store/aggregate-store.register.ts","ng://@generic-ui/hermes/domain/command/aggregate.ts","ng://@generic-ui/hermes/domain/aggregate-id.ts","ng://@generic-ui/hermes/domain/event/status/domain-event-status.ts","ng://@generic-ui/hermes/domain/event/status/status.response.ts","ng://@generic-ui/hermes/domain/event/domain-event.ts","ng://@generic-ui/hermes/domain/event/domain-event.store.ts","ng://@generic-ui/hermes/domain/event/domain-event.stream.ts","ng://@generic-ui/hermes/domain/event/domain-event.publisher.ts","ng://@generic-ui/hermes/domain/event/domain-event.bus.ts","ng://@generic-ui/hermes/domain/event/domain-event.handler.ts","ng://@generic-ui/hermes/domain/event/domain-event.payload.ts","ng://@generic-ui/hermes/domain/read/read-model.ts","ng://@generic-ui/hermes/domain/read/store/read-model.store.ts","ng://@generic-ui/hermes/domain/decorators.ts","ng://@generic-ui/hermes/common/reactive.ts","ng://@generic-ui/hermes/common/reactive.service.ts","ng://@generic-ui/hermes/common/aggregate.archive.ts","ng://@generic-ui/hermes/infrastructure/persist/persist-anemia.ts","ng://@generic-ui/hermes/infrastructure/persist/persist-state.store.ts","ng://@generic-ui/hermes/infrastructure/persist/query/persist.read-model.store.ts","ng://@generic-ui/hermes/infrastructure/persist/command/persist-aggregate.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/command/in-memory.aggregate.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/query/in-memory.read-model.store.ts","ng://@generic-ui/hermes/infrastructure/in-memory/in-memory.store.ts","ng://@generic-ui/hermes/domain/hermes-tokens.ts","ng://@generic-ui/hermes/infrastructure/logger/command/console.command.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/command/noop.command.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/event/console.event.logger.ts","ng://@generic-ui/hermes/infrastructure/logger/event/noop.event.logger.ts","ng://@generic-ui/hermes/ui-api/hermes.module.ts","ng://@generic-ui/hermes/testing/helpers.ts"],"sourcesContent":["import { Message } from '../domain/message';\n\nexport abstract class Logger<M extends Message> {\n\n\tprivate domainName: string;\n\n\tabstract start(): void;\n\n\tabstract stop(): void;\n\n\tprotected abstract print(message: M): void;\n\n\tsetDomain(domainName: string): void {\n\t\tthis.domainName = domainName;\n\t}\n\n\tlog(message: M): void {\n\t\tif (this.shouldPrint(message)) {\n\t\t\tthis.print(message);\n\t\t}\n\t}\n\n\tprotected shouldPrint(message: M): boolean {\n\n\t\tif (!this.domainName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst log: string = message.toString();\n\n\t\treturn log.includes(this.domainName);\n\t}\n}\n","import { Command } from './command';\nimport { Logger } from '../../common/logger';\n\nexport abstract class CommandLogger extends Logger<Command> {\n}\n","import { DomainEvent } from './domain-event';\nimport { Logger } from '../../common/logger';\n\nexport abstract class DomainEventLogger extends Logger<DomainEvent> {\n}\n","import { Injectable, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\n\ndeclare var window: any;\n\nexport const hermesApi = 'hermesApi';\n\n@Injectable()\nexport class HermesApi {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: Object,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\tconst api = (api: HermesApi) => {\n\t\t\t\treturn {\n\t\t\t\t\tset loggers(enabled: boolean) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tapi.commandLogger.start();\n\t\t\t\t\t\t\tapi.eventLogger.start();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapi.commandLogger.stop();\n\t\t\t\t\t\t\tapi.eventLogger.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset domain(domainName: string) {\n\t\t\t\t\t\tif (domainName) {\n\t\t\t\t\t\t\tapi.commandLogger.setDomain(domainName);\n\t\t\t\t\t\t\tapi.eventLogger.setDomain(domainName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\twindow[hermesApi] = api(this);\n\n\t\t\twindow[hermesApi].loggers = false;\n\t\t}\n\t}\n}\n","import { hermesApi } from './hermes-api';\n\ndeclare var window: any;\n\nexport function enableHermesLoggers(domainName?: string): void {\n\n\tif (domainName) {\n\t\twindow[hermesApi].domain = domainName;\n\t}\n\n\twindow[hermesApi].loggers = true;\n}\n\nexport function disableHermesLoggers(): void {\n\n\tdelete window[hermesApi].domain;\n\n\twindow[hermesApi].loggers = false;\n}\n","/**\n * ngc for grid package for some reasons doesn't allow to use injection token\n */\nexport const COMMAND_HANDLERS = 'HERMES - COMMAND_HANDLERS';\n// export const COMMAND_HANDLERS = new InjectionToken<Array<CommandHandler>>('COMMAND_HANDLERS');\n","\nexport const DOMAIN_EVENT_HANDLERS = 'DOMAIN_EVENT_HANDLERS';\n// export const DOMAIN_EVENT_HANDLERS = new InjectionToken<Array<DomainEventHandler>>('DOMAIN_EVENT_HANDLERS');\n","import { StaticProvider, Type } from '@angular/core';\n\nimport { CommandHandler } from './command/command.handler';\nimport { COMMAND_HANDLERS } from './command/command-handlers';\nimport { DOMAIN_EVENT_HANDLERS } from './event/domain-event-handlers';\nimport { DomainEventHandler } from './event/domain-event.handler';\n\nexport function provideCommandHandlers(handlers: Array<Type<CommandHandler>>): Array<StaticProvider> {\n\treturn handlers.map((handler: Type<CommandHandler>) => {\n\t\treturn {\n\t\t\tprovide: COMMAND_HANDLERS,\n\t\t\tuseClass: handler,\n\t\t\tmulti: true\n\t\t};\n\t}) as any;\n}\n\nexport function provideEventHandlers(handlers: Array<Type<DomainEventHandler>>): Array<StaticProvider> {\n\treturn handlers.map((handler: Type<DomainEventHandler>) => {\n\t\treturn {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: handler,\n\t\t\tmulti: true\n\t\t};\n\t}) as any;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Command } from './command';\n\n\n@Injectable()\nexport class CommandStream extends Subject<Command> {\n\n\tnext(value: Command): void {\n\t\tsuper.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandStream } from './command.stream';\nimport { Command } from './command';\n\n\n@Injectable()\nexport class CommandDispatcher {\n\n\tconstructor(private commandStream: CommandStream) {\n\t}\n\n\tdispatch(command: Command): void {\n\t\tthis.commandStream.next(command);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RandomStringGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): string {\n\t\treturn Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + `${RandomStringGenerator.index++}`;\n\t}\n\n}\n","import { AggregateId } from './aggregate-id';\n\nimport { RandomStringGenerator } from '../common/random-string.generator';\n\nexport abstract class Message {\n\n\tprotected constructor(public aggregateId: AggregateId,\n\t\t\t\t\t\t  protected readonly messageType: string,\n\t\t\t\t\t\t  private readonly messageId: string = RandomStringGenerator.generate()) {\n\t}\n\n\tgetMessageType(): string {\n\t\treturn this.messageType;\n\t}\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetMessageId(): string {\n\t\treturn this.messageId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.messageType;\n\t}\n\n\tequalsByType(message: Message): boolean {\n\t\treturn this.getMessageType() === message.getMessageType();\n\t}\n\n\tequals(message: Message): boolean {\n\t\treturn (this.getMessageType() === message.getMessageType()) && (this.messageId === message.messageId);\n\t}\n\n\tofMessageType(messageType: string): boolean;\n\tofMessageType(messageTypes: Array<string>): boolean;\n\tofMessageType(arg: string | Array<string>): boolean {\n\n\t\tif (Array.isArray(arg)) {\n\n\t\t\tlet found = arg.find((messageType: string) => this.isMessageType(messageType));\n\n\t\t\treturn !!found;\n\n\t\t} else {\n\t\t\treturn this.isMessageType(arg);\n\t\t}\n\t}\n\n\tprivate isMessageType(messageType: string): boolean {\n\t\treturn this.getMessageType() === messageType;\n\t}\n}\n","import { Message } from '../message';\n\nexport class Command extends Message {\n}\n","import { Observable, isObservable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Command } from './command';\nimport { ExecuteResponse } from './execute-response';\nimport { AggregateId } from '../aggregate-id';\n\nimport { DomainEvent } from '../event/domain-event';\nimport { DomainEventPublisher } from '../event/domain-event.publisher';\nimport { DomainEventPayload } from '../event/domain-event.payload';\n\nexport abstract class CommandHandler {\n\n\tprivate readonly commandType: string;\n\n\tprotected constructor(private readonly command: typeof Command | any, // any is required when inherited Command has more arguments than Command\n\t\t\t\t\t\t  private readonly domainEvent?: typeof DomainEvent,\n\t\t\t\t\t\t  protected readonly eventPublisher?: DomainEventPublisher) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\tabstract handle(command: Command): ExecuteResponse | Observable<ExecuteResponse>;\n\n\tforCommand(command: Command): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\thandleCommand(command: Command): void {\n\t\tconst result = this.handle(command);\n\n\t\tif (isObservable(result)) {\n\t\t\t(result as Observable<ExecuteResponse>)\n\t\t\t\t.pipe(\n\t\t\t\t\ttake(1)\n\t\t\t\t)\n\t\t\t\t.subscribe((res: void | DomainEventPayload) => {\n\n\t\t\t\t\t// trigger event\n\t\t\t\t\tthis.dispatchEvent(command, res);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.dispatchEvent(command, result as ExecuteResponse);\n\t\t}\n\t}\n\n\tprivate dispatchEvent(command: Command, result?: ExecuteResponse): void {\n\n\t\tif (this.domainEvent && this.eventPublisher) {\n\n\t\t\tlet aggregateId: AggregateId = command.aggregateId;\n\n\t\t\tconst event = new (this.domainEvent as any)(aggregateId);\n\n\t\t\tevent.setRequestCommand(command);\n\n\t\t\tif (result) {\n\t\t\t\tevent.setPayload(result);\n\t\t\t}\n\n\t\t\tthis.eventPublisher.publish(event);\n\t\t}\n\t}\n\n\tprivate createCommandInstance(): Command {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.command.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (this.command as any)(...args));\n\t}\n}\n","import { InjectionToken } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Command } from './command';\n\n\nexport const FILTERED_COMMAND_STREAM = new InjectionToken<Subject<Command>>('FILTERED_COMMAND_STREAM');\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, Operator } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Command } from './command';\nimport { FILTERED_COMMAND_STREAM } from './filtered-command-stream';\nimport { CommandHandler } from './command.handler';\n\n@Injectable()\nexport class CommandBus<C = Command> extends Observable<C> {\n\n\tconstructor(@Inject(FILTERED_COMMAND_STREAM) commandsStream?: Subject<Command>) {\n\t\tsuper();\n\n\t\tif (commandsStream) {\n\t\t\tthis.source = commandsStream;\n\t\t}\n\t}\n\n\tlift<R>(operator: Operator<C, R>): Observable<R> {\n\t\tconst observable = new CommandBus<R>();\n\t\tobservable.source = this;\n\t\tobservable.operator = operator;\n\t\treturn observable;\n\t}\n\n\tofCommand<C2 extends C>(...commandTypes: Array<string>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\t\t\t\t\treturn commandTypes.some((commandType: string) => command.ofMessageType(commandType));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofHandler<C2 extends C>(...handlers: Array<CommandHandler>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\t\t\t\t\treturn handlers.some((handler: CommandHandler) => handler.forCommand(command));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofNullHandler<C2 extends C>(handlers: Array<CommandHandler>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((command: Command) => {\n\n\t\t\t\t\tif (!handlers) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !handlers.some((handler: CommandHandler) => handler.forCommand(command));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, first, map, takeUntil } from 'rxjs/operators';\n\nimport { Command } from './command';\nimport { CommandDispatcher } from './command.dispatcher';\n\nimport { DomainEvent } from '../event/domain-event';\nimport { DomainEventBus } from '../event/domain-event.bus';\nimport { StatusResponse } from '../event/status/status.response';\n\n\nexport abstract class ReplayCommandDispatcher implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject();\n\n\tprivate subscriptions: Array<number> = [];\n\n\tprotected constructor(private readonly dispatcher: CommandDispatcher,\n\t\t\t\t\t\t  private readonly bus: DomainEventBus) {\n\t}\n\n\tprotected abstract mapEventToResponse(event: DomainEvent): StatusResponse;\n\n\tdispatch(command: Command): string {\n\n\t\tthis.dispatcher.dispatch(command);\n\n\t\treturn command.getMessageId();\n\t}\n\n\tdispatchAndWait(command: Command): Observable<StatusResponse> {\n\n\t\tconst response$ =\n\t\t\tthis.bus\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter((event: DomainEvent) => event.fromCommand(command)),\n\t\t\t\t\tfirst(),\n\t\t\t\t\tmap((event: DomainEvent) => {\n\t\t\t\t\t\treturn this.mapEventToResponse(event);\n\t\t\t\t\t}),\n\t\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t\t);\n\n\t\tconst subscription = setTimeout(() => {\n\t\t\tthis.dispatcher.dispatch(command);\n\t\t});\n\n\t\tthis.subscriptions.push(subscription);\n\n\t\treturn response$;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\n\t\tthis.subscriptions.forEach((handle: number) => {\n\t\t\tclearTimeout(handle);\n\t\t});\n\t}\n\n}\n","import { AggregateId } from '../aggregate-id';\n\nexport abstract class AggregateEvent {\n\n\tprotected constructor(\n\t\tprivate readonly aggregateId: AggregateId,\n\t\tprivate readonly type: string) {\n\t}\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tequals(event: AggregateEvent): boolean {\n\t\treturn this.equalsByType(event) &&\n\t\t\tthis.getAggregateId().equals(event.getAggregateId());\n\t}\n\n\tequalsByType(event: AggregateEvent): boolean {\n\t\treturn this.getType() === event.getType();\n\t}\n\n}\n","import { Aggregate } from '../aggregate';\nimport { AggregateId } from '../../aggregate-id';\n\nexport abstract class AggregateStore<S extends Aggregate> {\n\n\tabstract save(aggregate: S): void ;\n\n\tabstract getById(aggregateId: AggregateId): S;\n\n}\n","import { Aggregate } from '../aggregate';\nimport { AggregateStore } from './aggregate.store';\nimport { AggregateId } from '../../aggregate-id';\n\nexport class AggregateStoreRegister {\n\n\tprivate readonly stores: Array<any> = [];\n\n\tregister(store: AggregateStore<Aggregate>): void {\n\t\tthis.stores.push(store);\n\t}\n\n\tcaptureAggregatesSnapshot(aggregateId: AggregateId): { [key: string]: Aggregate } {\n\n\t\tif (!aggregateId) {\n\t\t\treturn {};\n\t\t}\n\n\t\tlet aggregates = {};\n\n\t\tthis.stores.forEach((store: AggregateStore<Aggregate>) => {\n\n\t\t\tconst aggregate = store.getById(aggregateId);\n\n\t\t\tif (aggregate) {\n\n\t\t\t\tlet aggregateName = aggregate.constructor.name;\n\n\t\t\t\taggregates[aggregateName] = aggregate;\n\t\t\t}\n\n\t\t});\n\n\t\treturn this.cloneAggregates(aggregates);\n\t}\n\n\tprivate cloneAggregates(aggregates: { [key: string]: Aggregate }): { [key: string]: Aggregate } {\n\t\treturn JSON.parse(JSON.stringify(aggregates));\n\t}\n}\n","import { AggregateEvent } from './aggregate-event';\nimport { AggregateId } from '../aggregate-id';\n\nexport abstract class Aggregate {\n\n\tprivate readonly aggregateId: AggregateId;\n\n\tprivate readonly events: Array<AggregateEvent>;\n\n\tprotected constructor(aggregateId: AggregateId) {\n\t\tthis.aggregateId = aggregateId;\n\t\tthis.events = []\n\t}\n\n\tgetId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetEvents(): ReadonlyArray<AggregateEvent> {\n\t\treturn this.events as ReadonlyArray<AggregateEvent>;\n\t}\n\n\taddEvent(event: AggregateEvent): void;\n\taddEvent(events: Array<AggregateEvent>): void;\n\taddEvent(args: AggregateEvent | Array<AggregateEvent>): void {\n\n\t\tif (Array.isArray(args)) {\n\t\t\tfor (let event of args) {\n\t\t\t\tthis.events.push(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events.push(args as AggregateEvent);\n\t\t}\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n}\n","export class AggregateId {\n\n\tprivate readonly uid: string;\n\n\tconstructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(aggregateId: AggregateId): boolean {\n\t\treturn this.uid === aggregateId.getId();\n\t}\n}\n","export enum DomainEventStatus {\n\tSUCCESS,\n\tFAILURE\n}\n","import { DomainEventStatus } from './domain-event-status';\nimport { DomainEventPayload } from '../domain-event.payload';\n\nexport abstract class StatusResponse {\n\n\tprotected constructor(private readonly status: DomainEventStatus,\n\t\t\t\t\t\t  private readonly payload?: DomainEventPayload) {\n\t}\n\n\tgetStatus(): DomainEventStatus {\n\t\treturn this.status;\n\t}\n\n\tgetPayload(): DomainEventPayload {\n\t\treturn this.payload;\n\t}\n}\n","import { AggregateId } from '../aggregate-id';\nimport { Command } from '../command/command';\nimport { DomainEventPayload } from './domain-event.payload';\nimport { Message } from '../message';\n\n\nexport abstract class DomainEvent extends Message {\n\n\tprivate requestCommandId: string;\n\n\tprivate payload: DomainEventPayload;\n\n\tprotected constructor(aggregateId: AggregateId,\n\t\t\t\t\t\t  messageType: string,\n\t\t\t\t\t\t  payload?: any) {\n\t\tsuper(aggregateId, messageType);\n\t\tthis.payload = payload;\n\t}\n\n\tisSameType(event: DomainEvent): boolean {\n\t\treturn this.constructor.name === event.constructor.name;\n\t}\n\n\tsetRequestCommand(command: Command): void {\n\t\tthis.requestCommandId = command.getMessageId();\n\t}\n\n\tfromCommand(command: Command): boolean {\n\t\treturn command.getMessageId() === this.requestCommandId;\n\t}\n\n\tsetPayload(payload: DomainEventPayload): void {\n\t\tthis.payload = payload;\n\t}\n\n\tgetPayload(): DomainEventPayload {\n\t\treturn this.payload;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError, Subject, of } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { DomainEvent } from './domain-event';\n\n\n@Injectable()\nexport class DomainEventStore {\n\n\tprivate domainEvents: Array<DomainEvent> = [];\n\n\tprivate domainEvents$: Subject<DomainEvent> = new Subject<DomainEvent>();\n\n\tnext(event: DomainEvent): void {\n\t\tthis.domainEvents.push(event);\n\t\tthis.domainEvents$.next(event);\n\t}\n\n\tfindEventByType(eventType: string): DomainEvent {\n\n\t\tconst events: Array<DomainEvent> = this.getEvents();\n\n\t\treturn events.reverse()\n\t\t\t\t\t .find((event: DomainEvent) => {\n\t\t\t\t\t\t return event.constructor.name === eventType;\n\t\t\t\t\t });\n\t}\n\n\t/**\n\t * First tries to event event in the history,\n\t * than method waits for future occurrences of the event.\n\t */\n\twaitForEvent(eventType: string): Observable<DomainEvent> {\n\n\t\t// find in a history\n\t\tconst event = this.findEventByType(eventType);\n\n\t\tif (event) {\n\t\t\treturn of(event);\n\t\t}\n\n\t\t// wait for future occurrence\n\t\treturn this.waitForNextEventOccurrence(eventType);\n\t}\n\n\twaitForNextEventOccurrence(eventType: string): Observable<DomainEvent>;\n\twaitForNextEventOccurrence(event: DomainEvent): Observable<DomainEvent>;\n\twaitForNextEventOccurrence(arg: string | DomainEvent): Observable<DomainEvent> {\n\n\t\tlet eventType: string;\n\n\t\tif (arg instanceof DomainEvent) {\n\t\t\teventType = arg.constructor.name;\n\t\t} else if (typeof arg === 'string') {\n\t\t\teventType = arg;\n\t\t} else {\n\t\t\treturn throwError(new Error('Unsupported argument type.'));\n\t\t}\n\n\t\treturn this.domainEvents$\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event) => event.constructor.name === eventType),\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tprivate getEvents(): Array<DomainEvent> {\n\t\treturn this.domainEvents;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStore } from './domain-event.store';\n\n\n@Injectable()\nexport class DomainEventStream extends Subject<DomainEvent> {\n\n\tconstructor(private eventStore: DomainEventStore) {\n\t\tsuper();\n\t}\n\n\tnext(event: DomainEvent): void {\n\t\tsuper.next(event);\n\t\tthis.eventStore.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command } from '../command/command';\nimport { AggregateEvent } from '../command/aggregate-event';\n\nimport { DomainEventStream } from './domain-event.stream';\nimport { DomainEvent } from './domain-event';\n\n\n@Injectable()\nexport class DomainEventPublisher {\n\n\tconstructor(private eventStream: DomainEventStream) {\n\t}\n\n\tpublish(event: DomainEvent): void;\n\tpublish(events: ReadonlyArray<DomainEvent>): void;\n\tpublish(args: DomainEvent | ReadonlyArray<DomainEvent>): void {\n\n\t\tif (Array.isArray(args)) {\n\n\t\t\tfor (let arg of args) {\n\t\t\t\tthis.publishEvent(arg);\n\t\t\t}\n\t\t} else if (args instanceof DomainEvent) {\n\t\t\tthis.publishEvent(args);\n\t\t}\n\t}\n\n\tdispatchAggregateEvent(aggregateEvent: AggregateEvent, command: Command): void {\n\n\t\t// TODO\n\t\t// const domainEventName = aggregateEvent.getDomainEventName() as typeof DomainEvent;\n\t\t//\n\t\t// const domainEvent: DomainEvent = new (domainEventName)(command.getAggregateId());\n\n\t\t// this.eventStream.next();\n\t}\n\n\tprivate publishEvent(event: DomainEvent): void {\n\n\t\tif (!event) {\n\t\t\tconsole.error(`${event} is not defined`);\n\t\t}\n\n\t\tif (!(event instanceof DomainEvent)) {\n\t\t\t// throw new Error(`${event} is not a DomainEvent`);\n\n\t\t\tconsole.error(`${event} is not a DomainEvent`);\n\t\t}\n\n\t\tthis.eventStream.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Operator } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStream } from './domain-event.stream';\n\n\n@Injectable()\nexport class DomainEventBus<E = DomainEvent> extends Observable<E> {\n\n\tconstructor(eventStream?: DomainEventStream) {\n\t\tsuper();\n\n\t\tif (eventStream) {\n\t\t\tthis.source = eventStream;\n\t\t}\n\t}\n\n\tlift<R>(operator: Operator<E, R>): Observable<R> {\n\t\tconst observable = new DomainEventBus<R>();\n\t\tobservable.source = this;\n\t\tobservable.operator = operator;\n\t\treturn observable;\n\t}\n\n\tofEvent<E2 extends E>(...events: Array<typeof DomainEvent>): any {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.pipe(\n\t\t\t\tfilter((domainEvent: DomainEvent) => {\n\t\t\t\t\treturn events.some((event: typeof DomainEvent) => {\n\t\t\t\t\t\tconst eventInstance = this.createEventInstance(event);\n\t\t\t\t\t\treturn eventInstance.equalsByType(domainEvent);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tprivate createEventInstance(event: typeof DomainEvent): DomainEvent {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = event.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\treturn (new (event as any)(...args));\n\t}\n\n}\n","import { DomainEvent } from './domain-event';\n\nexport abstract class DomainEventHandler {\n\n\tabstract handle(event: DomainEvent): void;\n}\n","export class DomainEventPayload {\n\n\tconstructor(private readonly value: any) {\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n}\n","import { AggregateId } from '../aggregate-id';\n\nexport abstract class ReadModel {\n\n\tprivate readonly aggregateId: AggregateId;\n\n\tprotected constructor(gui: AggregateId) {\n\t\tthis.aggregateId = gui;\n\t}\n\n\tgetId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n}\n","import { ReadModel } from '../read-model';\nimport { AggregateId } from '../../aggregate-id';\n\nexport abstract class ReadModelStore<Q extends ReadModel> {\n\n\tabstract getById(aggregateId: AggregateId): Q;\n\n}\n","export function RootAggregate(target: Function) {}\n\nexport function Entity(target: Function) {}\n\nexport function ValueObject(target: Function) {}\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class ReactiveService extends Reactive implements OnDestroy {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '../domain/aggregate-id';\nimport { ReactiveService } from './reactive.service';\n\nexport interface DefaultAggregateValues<T> {\n\taggregateId: AggregateId;\n\tvalue: T;\n}\n\nexport abstract class AggregateArchive<T> extends ReactiveService {\n\n\tprivate archive = new Map<string, T>();\n\n\tprivate archive$: Subject<Map<string, T>>;\n\n\tprotected constructor(defaultValue?: DefaultAggregateValues<T>) {\n\t\tsuper();\n\t\tthis.initArchive(defaultValue);\n\t}\n\n\twhen(aggregateId: AggregateId): Observable<T> {\n\t\treturn this.archive$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, T>) => {\n\t\t\t\t\t\t   return map.get(aggregateId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tnext(aggregateId: AggregateId, value: T): void {\n\t\tthis.archive.set(aggregateId.toString(), value);\n\t\tthis.archive$.next(this.archive);\n\t}\n\n\tprivate initArchive(defaultValue?: DefaultAggregateValues<T>): void {\n\t\tif (defaultValue) {\n\t\t\tthis.archive.set(defaultValue.aggregateId.toString(), defaultValue.value);\n\t\t\tthis.archive$ = new BehaviorSubject<Map<string, T>>(this.archive);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject<Map<string, T>>(1);\n\t\t}\n\t}\n\n}\n","import { AggregateId } from '../../domain/aggregate-id';\n\nexport abstract class PersistAnemia {\n\n\tprivate readonly aggregateId: AggregateId;\n\n\tprotected constructor(uid: AggregateId) {\n\t\tthis.aggregateId = uid;\n\t}\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.aggregateId.toString();\n\t}\n\n}\n","import { AggregateId } from '../../domain/aggregate-id';\n\nimport { PersistAnemia } from './persist-anemia';\n\n\n/**\n * Rename\n */\nexport abstract class PersistStateStore<A extends PersistAnemia> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(anemia: A): void {\n\t\tthis.state.set(anemia.getId(), anemia);\n\t}\n\n\tsetMany(anemias: Array<A>): void {\n\t\tanemias.forEach((anemia: A) => {\n\t\t\tthis.set(anemia);\n\t\t});\n\t}\n\n\tget(aggregateId: AggregateId): A {\n\t\treturn this.state.get(aggregateId.toString());\n\t}\n\n\tgetAll(): Array<A> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n}\n","import {\n\tAggregateId\n} from '../../../domain/aggregate-id';\nimport {\n\tReadModel\n} from '../../../domain/read/read-model';\nimport {\n\tReadModelStore\n} from '../../../domain/read/store/read-model.store';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\n\nexport abstract class PersistReadModelStore<T extends ReadModel, S extends PersistAnemia> extends ReadModelStore<T> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<S>) {\n\t\tsuper();\n\t}\n\n\tabstract fromAnemia(anemia: S): T;\n\n\tgetById(aggregateId: AggregateId): T {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): Array<T> {\n\t\treturn this.getAllValues();\n\t}\n\n\tprivate getAllValues(): Array<T> {\n\t\tconst anemias = this.stateStore.getAll();\n\n\t\treturn anemias.map((anemia) => this.fromAnemia(anemia));\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): T {\n\t\tconst anemia = this.stateStore.get(aggregateId);\n\n\t\tif (anemia) {\n\t\t\treturn this.fromAnemia(anemia);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n","import {\n\tAggregateId\n} from '../../../domain/aggregate-id';\n\nimport {\n\tAggregate,\n} from '../../../domain/command/aggregate';\nimport {\n\tAggregateStore,\n} from '../../../domain/command/store/aggregate.store';\nimport {\n\tAggregateStoreRegister\n} from '../../../domain/command/store/aggregate-store.register';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\n\n\nexport abstract class PersistAggregateStore<T extends Aggregate, S extends PersistAnemia> extends AggregateStore<T> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<S>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tabstract toAnemia(aggregate: T): S;\n\n\tabstract fromAnemia(anemia: S): T;\n\n\tsave(aggregate: T): void {\n\t\tthis.saveValue(aggregate);\n\t}\n\n\tgetById(aggregateId: AggregateId): T {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate saveValue(aggregate: T): void {\n\n\t\tconst anemia = this.toAnemia(aggregate);\n\n\t\tthis.stateStore.set(anemia);\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): T {\n\t\tconst anemia = this.stateStore.get(aggregateId);\n\n\t\tif (anemia) {\n\t\t\treturn this.fromAnemia(anemia);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n","import {\n\tAggregateId\n} from '../../../domain/aggregate-id';\n\nimport {\n\tAggregate\n} from '../../../domain/command/aggregate';\nimport {\n\tAggregateStore\n} from '../../../domain/command/store/aggregate.store';\nimport {\n\tAggregateStoreRegister\n} from '../../../domain/command/store/aggregate-store.register';\n\nimport { InMemoryStore } from '../in-memory.store';\n\nexport abstract class InMemoryAggregateStore<T extends Aggregate> extends AggregateStore<T> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<T>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tsave(aggregate: T): void;\n\tsave(aggregates: Array<T>): void;\n\tsave(arg: T | Array<T>): void {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\targ.forEach((aggregate: T) => {\n\t\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t\t});\n\t\t} else {\n\t\t\tconst aggregate = arg;\n\n\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t}\n\t}\n\n\tgetById(aggregateId: AggregateId): T {\n\t\treturn this.inMemoryStore.get(aggregateId);\n\t}\n\n\tgetAll(): Array<T> {\n\t\treturn this.inMemoryStore.getAll();\n\t}\n\n\tremove(aggregateId: AggregateId): void {\n\t\tthis.inMemoryStore.delete(aggregateId);\n\t}\n\n}\n","import {\n\tAggregateId\n} from '../../../domain/aggregate-id';\nimport {\n\tAggregate\n} from '../../../domain/command/aggregate';\n\nimport {\n\tReadModel\n} from '../../../domain/read/read-model';\n\nimport {\n\tReadModelStore\n} from '../../../domain/read/store/read-model.store';\n\nimport { InMemoryStore } from '../in-memory.store';\n\nexport abstract class InMemoryReadModelStore<T extends ReadModel, S extends Aggregate> extends ReadModelStore<T> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<S>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(aggregate: S): T;\n\n\tgetById(aggregateId: AggregateId): T {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): Array<T> {\n\t\treturn this.inMemoryStore.getAll()\n\t\t\t\t   .map((aggregate: S) => this.toReadModel(aggregate));\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): T {\n\t\tconst aggregate = this.inMemoryStore.get(aggregateId);\n\n\t\tif (aggregate) {\n\t\t\treturn this.toReadModel(aggregate);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n","import { AggregateId } from '../../domain/aggregate-id';\nimport { Aggregate } from '../../domain/command/aggregate';\n\nexport abstract class InMemoryStore<S extends Aggregate> {\n\n\tprivate readonly state: Map<string, S> = new Map();\n\n\tset(aggregate: S): void {\n\t\tthis.state.set(aggregate.getId().toString(), aggregate);\n\t}\n\n\tsetMany(aggregates: Array<S>): void {\n\t\taggregates.forEach((aggregate: S) => {\n\t\t\tthis.set(aggregate);\n\t\t});\n\t}\n\n\tget(aggregateId: AggregateId): S {\n\t\treturn this.state.get(aggregateId.toString());\n\t}\n\n\tgetAll(): Array<S> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\thas(aggregateId: AggregateId): boolean {\n\t\treturn this.state.has(aggregateId.toString());\n\t}\n\n\tdelete(aggregateId: AggregateId): void {\n\t\tthis.state.delete(aggregateId.toString());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n\n}\n","export const COMMAND_LOGGER_ENABLED = 'GUI - COMMAND_LOGGER_ENABLED';\nexport const EVENT_LOGGER_ENABLED = 'GUI - EVENT_LOGGER_ENABLED';\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { CommandBus } from '../../../domain/command/command.bus';\nimport { Command } from '../../../domain/command/command';\nimport { CommandLogger } from '../../../domain/command/command.logger';\n\n\n@Injectable()\nexport class ConsoleCommandLogger extends CommandLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(commandBus: CommandBus) {\n\t\tsuper();\n\n\t\tcommandBus\n\t\t\t.pipe(\n\t\t\t\tfilter(() => this.enabled),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((command: Command) => {\n\t\t\t\tthis.log(command);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(command: Command): void {\n\t\tconsole.log(command.toString(), command);\n\t}\n\n}\n","import { CommandLogger } from '../../../domain/command/command.logger';\nimport { Command } from '../../../domain/command/command';\n\n\nexport class NoopCommandLogger extends CommandLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprotected print(command: Command): void {\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEventBus } from '../../../domain/event/domain-event.bus';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\n\n@Injectable()\nexport class ConsoleEventLogger extends DomainEventLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(eventBus: DomainEventBus,\n\t\t\t\tprivate readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\n\t\teventBus\n\t\t\t.pipe(\n\t\t\t\tfilter(() => this.enabled),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((domainEvent: DomainEvent) => {\n\t\t\t\tthis.log(domainEvent);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(domainEvent: DomainEvent): void {\n\t\tconst aggregateId = domainEvent.aggregateId,\n\t\t\taggregates = this.aggregateStoreRegister.captureAggregatesSnapshot(aggregateId);\n\n\t\tconsole.log(domainEvent.toString(), domainEvent, aggregates);\n\t}\n\n}\n","import { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEvent } from '../../../domain/event/domain-event';\n\nexport class NoopEventLogger extends DomainEventLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprint(event: DomainEvent): void {\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, OnDestroy, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Command\n */\nimport { Command } from '../domain/command/command';\nimport { COMMAND_HANDLERS } from '../domain/command/command-handlers';\nimport { CommandBus } from '../domain/command/command.bus';\nimport { CommandDispatcher } from '../domain/command/command.dispatcher';\nimport { CommandHandler } from '../domain/command/command.handler';\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { CommandStream } from '../domain/command/command.stream';\nimport { FILTERED_COMMAND_STREAM } from '../domain/command/filtered-command-stream';\nimport { AggregateStoreRegister } from '../domain/command/store/aggregate-store.register';\nimport { DomainEvent } from '../domain/event/domain-event';\nimport { DOMAIN_EVENT_HANDLERS } from '../domain/event/domain-event-handlers';\nimport { DomainEventBus } from '../domain/event/domain-event.bus';\nimport { DomainEventPublisher } from '../domain/event/domain-event.publisher';\nimport { DomainEventHandler } from '../domain/event/domain-event.handler';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { DomainEventStore } from '../domain/event/domain-event.store';\nimport { DomainEventStream } from '../domain/event/domain-event.stream';\n\n/**\n * APP\n */\nimport { HermesModuleConfig } from './hermes-module-config';\nimport { EVENT_LOGGER_ENABLED } from '../domain/hermes-tokens';\nimport { COMMAND_LOGGER_ENABLED } from '../domain/hermes-tokens';\nimport { HermesApi } from '../ui-api/hermes-api';\n\n/**\n * Infrastructure\n */\nimport { ConsoleCommandLogger } from '../infrastructure/logger/command/console.command.logger';\nimport { NoopCommandLogger } from '../infrastructure/logger/command/noop.command.logger';\nimport { ConsoleEventLogger } from '../infrastructure/logger/event/console.event.logger';\nimport { NoopEventLogger } from '../infrastructure/logger/event/noop.event.logger';\nimport { RandomStringGenerator } from '../common/random-string.generator';\n\n\nconst hermesProviders = [\n\tRandomStringGenerator,\n\t{ provide: FILTERED_COMMAND_STREAM, useExisting: CommandStream },\n\tCommandBus,\n\tCommandStream,\n\tCommandDispatcher,\n\tAggregateStoreRegister,\n\n\tDomainEventBus,\n\tDomainEventStream,\n\tDomainEventPublisher,\n\tDomainEventStore,\n\n\tHermesApi\n];\n\nconst providers = [\n\t{ provide: EVENT_LOGGER_ENABLED, useValue: true },\n\t{ provide: COMMAND_LOGGER_ENABLED, useValue: true },\n\t{ provide: CommandLogger, useFactory: commandLoggerFactory, deps: [COMMAND_LOGGER_ENABLED, ConsoleCommandLogger, NoopCommandLogger] },\n\t{ provide: DomainEventLogger, useFactory: eventLoggerFactory, deps: [EVENT_LOGGER_ENABLED, ConsoleEventLogger, NoopEventLogger] },\n\tConsoleCommandLogger,\n\tNoopCommandLogger,\n\tNoopEventLogger,\n\tConsoleEventLogger,\n\t...hermesProviders\n];\n\nexport function commandLoggerFactory(enabled: boolean, consoleCommandLogger: ConsoleCommandLogger, noopCommandLogger: NoopCommandLogger) {\n\n\tif (enabled) {\n\t\treturn consoleCommandLogger;\n\t} else {\n\t\treturn noopCommandLogger;\n\t}\n}\n\nexport function eventLoggerFactory(enabled: boolean, consoleEventLogger: ConsoleEventLogger, noopEventLogger: NoopEventLogger) {\n\n\tif (enabled) {\n\t\treturn consoleEventLogger;\n\t} else {\n\t\treturn noopEventLogger;\n\t}\n}\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: providers\n})\nexport class HermesModule implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject();\n\n\tstatic withConfig(config: HermesModuleConfig = { loggers: false }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: HermesModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tconstructor(@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandler>,\n\t\t\t\t@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandler>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger,\n\t\t\t\tprivate hermesApi: HermesApi) { // HermesApi initialization\n\n\t\tthis.loggersStart();\n\n\t\tthis.checkNullCommand(commandBus, commandHandlers);\n\t\tthis.checkCommandHandlerIsCollection(commandHandlers);\n\n\t\tif (commandHandlers) {\n\n\t\t\tcommandHandlers.forEach((handler: CommandHandler) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofHandler(handler)\n\t\t\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t\t\t.subscribe((command: Command) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (eventHandlers) {\n\t\t\tdomainEventBus\n\t\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\t\teventHandlers.forEach((handler: DomainEventHandler) => {\n\t\t\t\t\t\thandler.handle(event);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\n\t\tthis.loggersStop();\n\t}\n\n\tprivate loggersStart(): void {\n\t\tthis.commandLogger.start();\n\t\tthis.eventLogger.start();\n\t}\n\n\tprivate loggersStop(): void {\n\t\tthis.commandLogger.stop();\n\t\tthis.eventLogger.stop();\n\t}\n\n\tprivate checkNullCommand(commandBus: CommandBus, commandHandlers: Array<CommandHandler>): void {\n\t\tcommandBus\n\t\t\t.ofNullHandler(commandHandlers)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((command: Command) => {\n\t\t\t\tconsole.log(`Command ${command.toString()} was not intercepted by any CommandHandler.`);\n\t\t\t});\n\t}\n\n\tprivate checkCommandHandlerIsCollection(commandHandlers: Array<CommandHandler>): void {\n\t\tif (commandHandlers && !Array.isArray(commandHandlers)) {\n\t\t\tconsole.log(`You might provided commandHandler without specifying \"multi: true\".`);\n\t\t}\n\t}\n\n}\n","import { AggregateEvent } from '../domain/command/aggregate-event';\nimport { DomainEvent } from '../domain/event/domain-event';\n\ndeclare var expect: any;\n\nexport function assertDomainEvents(actualEvents: ReadonlyArray<DomainEvent>, expectedEvents: Array<DomainEvent>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length);\n\n\tfor (let actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: DomainEvent) => {\n\t\t\treturn event.equalsByType(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t\texpect(actualEvent.equalsByType(expectedEvent)).toBeTruthy('Event type should be equal');\n\t\t// expect(actualEvent.aggregateId).toEqual(expectedEvent.aggregateId, 'Events aggregateId should be the same');\n\t\texpect(actualEvent.getPayload()).toEqual(expectedEvent.getPayload(), 'Events payload should be the same');\n\t}\n\n}\n\nexport function assertAggregateEvents(actualEvents: ReadonlyArray<AggregateEvent>, expectedEvents: Array<AggregateEvent>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length, 'Aggregate events');\n\n\tfor (let actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: AggregateEvent) => {\n\t\t\treturn event.equals(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t}\n}\n"],"names":["tslib_1.__extends","tslib_1.__values"],"mappings":"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"}