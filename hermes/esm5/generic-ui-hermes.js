/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { HermesApi, enableHermesLoggers, disableHermesLoggers, provideEventHandlers, CommandDispatcher, Command, AggregateFactory, CommandBus, CommandLogger, CommandStream, ReplayCommandDispatcher, AggregateEvent, AggregateRepository, AggregateStore, AggregateStoreRegister, AggregateRoot, AggregateId, DomainEventStatus, StatusResponse, DomainEvent, DomainEventPublisher, DomainEventBus, DomainEventLogger, DomainEventPayload, DomainEventStream, ReadModelEntity, ReadModelEntityId, ReadModelRoot, ReadModelRootId, ReadModelRootRepository, ReadModelStore, EventRepository, Entity, EntityId, ValueObject, DomainObject, ReadModelObject, DomainModule, ApiModule, FeatureModule, AggregateArchive, Archive, RandomStringGenerator, Optional, Reactive, PersistAnemia, PersistStateStore, PersistReadModelStore, PersistAggregateStore, InMemoryAggregateStore, InMemoryReadModelStore, InMemoryStore, HermesModule, COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, assertDomainEvents, assertAggregateEvents, CreateAggregateCommand } from './public-api';
export { Logger as ɵd } from './common/logger';
export { ReactiveService as ɵh } from './common/reactive.service';
export { HermesDomainModule as ɵu } from './domain-api/hermes.domain.module';
export { HermesLoggersInitializer as ɵp } from './domain-api/hermes.loggers.initializer';
export { HermesBaseModule as ɵc, commandLoggerFactory as ɵa, eventLoggerFactory as ɵb } from './domain-api/hermes.module';
export { CreateAggregateCommandHandlerImpl as ɵbb, createAggregateCommandHandlerFactory as ɵba } from './domain/command/aggregate/create/create-aggregate.command-handler-impl';
export { CREATE_AGGREGATE_COMMAND_HANDLERS as ɵj } from './domain/command/aggregate/create/create-aggregate.command-handlers-token';
export { aggregateDefinitionToken as ɵl } from './domain/command/config/aggregate-definition.token';
export { AggregateFactoryArchive as ɵn, AggregateRepositoryArchive as ɵo } from './domain/command/config/define';
export { FILTERED_COMMAND_STREAM as ɵf } from './domain/command/filtered-command-stream';
export { CommandHandlerImpl as ɵw, commandHandlerFactory as ɵv } from './domain/command/handler/command-handler-impl';
export { COMMAND_HANDLERS as ɵk } from './domain/command/handler/command-handlers';
export { DomainEventStore as ɵg } from './domain/event/domain-event.store';
export { DomainEventHandlerImpl as ɵz, domainEventHandlerFactory as ɵx, multiDomainEventHandlerFactory as ɵy } from './domain/event/handler/domain-event-handler-impl';
export { DOMAIN_EVENT_HANDLERS as ɵi } from './domain/event/handler/domain-event-handlers';
export { Message as ɵe } from './domain/message';
export { ConsoleCommandLogger as ɵq } from './infrastructure/logger/command/console.command.logger';
export { NoopCommandLogger as ɵr } from './infrastructure/logger/command/noop.command.logger';
export { ConsoleEventLogger as ɵs } from './infrastructure/logger/event/console.event.logger';
export { NoopEventLogger as ɵt } from './infrastructure/logger/event/noop.event.logger';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy11aS1oZXJtZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VuZXJpYy11aS9oZXJtZXMvIiwic291cmNlcyI6WyJnZW5lcmljLXVpLWhlcm1lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsNi9CQUFjLGNBQWMsQ0FBQztBQUU3QixPQUFPLEVBQUMsTUFBTSxJQUFJLEVBQUUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzNFLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUN2RixPQUFPLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUN0SCxPQUFPLEVBQUMsaUNBQWlDLElBQUksR0FBRyxFQUFDLG9DQUFvQyxJQUFJLEdBQUcsRUFBQyxNQUFNLHlFQUF5RSxDQUFDO0FBQzdLLE9BQU8sRUFBQyxpQ0FBaUMsSUFBSSxFQUFFLEVBQUMsTUFBTSwyRUFBMkUsQ0FBQztBQUVsSSxPQUFPLEVBQUMsd0JBQXdCLElBQUksRUFBRSxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDbEcsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM5RyxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDdkYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUNuSCxPQUFPLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDakYsT0FBTyxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ3pFLE9BQU8sRUFBQyxzQkFBc0IsSUFBSSxFQUFFLEVBQUMseUJBQXlCLElBQUksRUFBRSxFQUFDLDhCQUE4QixJQUFJLEVBQUUsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQ25LLE9BQU8sRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUN6RixPQUFPLEVBQUMsT0FBTyxJQUFJLEVBQUUsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx3REFBd0QsQ0FBQztBQUNsRyxPQUFPLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0scURBQXFELENBQUM7QUFDNUYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLG9EQUFvRCxDQUFDO0FBQzVGLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0saURBQWlELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7TG9nZ2VyIGFzIMm1ZH0gZnJvbSAnLi9jb21tb24vbG9nZ2VyJztcbmV4cG9ydCB7UmVhY3RpdmVTZXJ2aWNlIGFzIMm1aH0gZnJvbSAnLi9jb21tb24vcmVhY3RpdmUuc2VydmljZSc7XG5leHBvcnQge0hlcm1lc0RvbWFpbk1vZHVsZSBhcyDJtXV9IGZyb20gJy4vZG9tYWluLWFwaS9oZXJtZXMuZG9tYWluLm1vZHVsZSc7XG5leHBvcnQge0hlcm1lc0xvZ2dlcnNJbml0aWFsaXplciBhcyDJtXB9IGZyb20gJy4vZG9tYWluLWFwaS9oZXJtZXMubG9nZ2Vycy5pbml0aWFsaXplcic7XG5leHBvcnQge0hlcm1lc0Jhc2VNb2R1bGUgYXMgybVjLGNvbW1hbmRMb2dnZXJGYWN0b3J5IGFzIMm1YSxldmVudExvZ2dlckZhY3RvcnkgYXMgybVifSBmcm9tICcuL2RvbWFpbi1hcGkvaGVybWVzLm1vZHVsZSc7XG5leHBvcnQge0NyZWF0ZUFnZ3JlZ2F0ZUNvbW1hbmRIYW5kbGVySW1wbCBhcyDJtWJiLGNyZWF0ZUFnZ3JlZ2F0ZUNvbW1hbmRIYW5kbGVyRmFjdG9yeSBhcyDJtWJhfSBmcm9tICcuL2RvbWFpbi9jb21tYW5kL2FnZ3JlZ2F0ZS9jcmVhdGUvY3JlYXRlLWFnZ3JlZ2F0ZS5jb21tYW5kLWhhbmRsZXItaW1wbCc7XG5leHBvcnQge0NSRUFURV9BR0dSRUdBVEVfQ09NTUFORF9IQU5ETEVSUyBhcyDJtWp9IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvYWdncmVnYXRlL2NyZWF0ZS9jcmVhdGUtYWdncmVnYXRlLmNvbW1hbmQtaGFuZGxlcnMtdG9rZW4nO1xuZXhwb3J0IHtBZ2dyZWdhdGVEZWZpbml0aW9uIGFzIMm1bX0gZnJvbSAnLi9kb21haW4vY29tbWFuZC9jb25maWcvYWdncmVnYXRlLWRlZmluaXRpb24nO1xuZXhwb3J0IHthZ2dyZWdhdGVEZWZpbml0aW9uVG9rZW4gYXMgybVsfSBmcm9tICcuL2RvbWFpbi9jb21tYW5kL2NvbmZpZy9hZ2dyZWdhdGUtZGVmaW5pdGlvbi50b2tlbic7XG5leHBvcnQge0FnZ3JlZ2F0ZUZhY3RvcnlBcmNoaXZlIGFzIMm1bixBZ2dyZWdhdGVSZXBvc2l0b3J5QXJjaGl2ZSBhcyDJtW99IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvY29uZmlnL2RlZmluZSc7XG5leHBvcnQge0ZJTFRFUkVEX0NPTU1BTkRfU1RSRUFNIGFzIMm1Zn0gZnJvbSAnLi9kb21haW4vY29tbWFuZC9maWx0ZXJlZC1jb21tYW5kLXN0cmVhbSc7XG5leHBvcnQge0NvbW1hbmRIYW5kbGVySW1wbCBhcyDJtXcsY29tbWFuZEhhbmRsZXJGYWN0b3J5IGFzIMm1dn0gZnJvbSAnLi9kb21haW4vY29tbWFuZC9oYW5kbGVyL2NvbW1hbmQtaGFuZGxlci1pbXBsJztcbmV4cG9ydCB7Q09NTUFORF9IQU5ETEVSUyBhcyDJtWt9IGZyb20gJy4vZG9tYWluL2NvbW1hbmQvaGFuZGxlci9jb21tYW5kLWhhbmRsZXJzJztcbmV4cG9ydCB7RG9tYWluRXZlbnRTdG9yZSBhcyDJtWd9IGZyb20gJy4vZG9tYWluL2V2ZW50L2RvbWFpbi1ldmVudC5zdG9yZSc7XG5leHBvcnQge0RvbWFpbkV2ZW50SGFuZGxlckltcGwgYXMgybV6LGRvbWFpbkV2ZW50SGFuZGxlckZhY3RvcnkgYXMgybV4LG11bHRpRG9tYWluRXZlbnRIYW5kbGVyRmFjdG9yeSBhcyDJtXl9IGZyb20gJy4vZG9tYWluL2V2ZW50L2hhbmRsZXIvZG9tYWluLWV2ZW50LWhhbmRsZXItaW1wbCc7XG5leHBvcnQge0RPTUFJTl9FVkVOVF9IQU5ETEVSUyBhcyDJtWl9IGZyb20gJy4vZG9tYWluL2V2ZW50L2hhbmRsZXIvZG9tYWluLWV2ZW50LWhhbmRsZXJzJztcbmV4cG9ydCB7TWVzc2FnZSBhcyDJtWV9IGZyb20gJy4vZG9tYWluL21lc3NhZ2UnO1xuZXhwb3J0IHtDb25zb2xlQ29tbWFuZExvZ2dlciBhcyDJtXF9IGZyb20gJy4vaW5mcmFzdHJ1Y3R1cmUvbG9nZ2VyL2NvbW1hbmQvY29uc29sZS5jb21tYW5kLmxvZ2dlcic7XG5leHBvcnQge05vb3BDb21tYW5kTG9nZ2VyIGFzIMm1cn0gZnJvbSAnLi9pbmZyYXN0cnVjdHVyZS9sb2dnZXIvY29tbWFuZC9ub29wLmNvbW1hbmQubG9nZ2VyJztcbmV4cG9ydCB7Q29uc29sZUV2ZW50TG9nZ2VyIGFzIMm1c30gZnJvbSAnLi9pbmZyYXN0cnVjdHVyZS9sb2dnZXIvZXZlbnQvY29uc29sZS5ldmVudC5sb2dnZXInO1xuZXhwb3J0IHtOb29wRXZlbnRMb2dnZXIgYXMgybV0fSBmcm9tICcuL2luZnJhc3RydWN0dXJlL2xvZ2dlci9ldmVudC9ub29wLmV2ZW50LmxvZ2dlcic7Il19