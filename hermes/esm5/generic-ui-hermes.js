/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { HermesApi, enableHermesLoggers, disableHermesLoggers, provideEventHandlers, CommandDispatcher, Command, CommandType, AggregateFactory, CommandBus, CommandLogger, CommandStream, ReplayCommandDispatcher, AggregateEvent, AggregateEventType, AggregateRepository, AggregateStore, AggregateStoreRegister, AggregateRoot, AggregateId, DomainEventStatus, StatusResponse, DomainEvent, DomainEventPublisher, DomainEventBus, DomainEventType, DomainEventLogger, DomainEventPayload, DomainEventStream, ReadModelEntity, ReadModelEntityId, ReadModelRoot, ReadModelRootId, ReadModelRootRepository, ReadModelStore, EventRepository, Entity, EntityId, HermesId, ValueObject, DomainObject, ReadModelObject, DomainModule, ApiModule, FeatureModule, AggregateArchive, Archive, RandomStringGenerator, Optional, Reactive, KeyMap, PersistAnemia, PersistStateStore, PersistReadModelStore, PersistAggregateStore, InMemoryAggregateStore, InMemoryReadModelStore, InMemoryStore, HermesModule, COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, assertDomainEvents, assertAggregateEvents, CreateAggregateCommand } from './public-api';
export { Logger as ɵd } from './common/logger';
export { ReactiveService as ɵh } from './common/reactive.service';
export { HermesDomainModule as ɵu } from './core/api/hermes.domain.module';
export { HermesLoggersInitializer as ɵp } from './core/api/hermes.loggers.initializer';
export { HermesBaseModule as ɵc, commandLoggerFactory as ɵa, eventLoggerFactory as ɵb } from './core/api/hermes.module';
export { aggregateDefinitionToken as ɵl } from './core/domain/command/config/aggregate-definition.token';
export { AggregateFactoryArchive as ɵn, AggregateRepositoryArchive as ɵo } from './core/domain/command/config/define';
export { CreateAggregateCommandHandlerImpl as ɵbb, createAggregateCommandHandlerFactory as ɵba } from './core/domain/command/create-aggregate/create-aggregate.command-handler-impl';
export { CREATE_AGGREGATE_COMMAND_HANDLERS as ɵj } from './core/domain/command/create-aggregate/create-aggregate.command-handlers-token';
export { FILTERED_COMMAND_STREAM as ɵf } from './core/domain/command/filtered-command-stream';
export { CommandHandlerImpl as ɵw, commandHandlerFactory as ɵv } from './core/domain/command/handler/command-handler-impl';
export { COMMAND_HANDLERS as ɵk } from './core/domain/command/handler/command-handlers';
export { DomainEventStore as ɵg } from './core/domain/event/domain-event.store';
export { DomainEventHandlerImpl as ɵz, domainEventHandlerFactory as ɵx, multiDomainEventHandlerFactory as ɵy } from './core/domain/event/handler/domain-event-handler-impl';
export { DOMAIN_EVENT_HANDLERS as ɵi } from './core/domain/event/handler/domain-event-handlers';
export { Message as ɵe } from './core/domain/message/message';
export { ConsoleCommandLogger as ɵq } from './core/infrastructure/logger/command/console.command.logger';
export { NoopCommandLogger as ɵr } from './core/infrastructure/logger/command/noop.command.logger';
export { ConsoleEventLogger as ɵs } from './core/infrastructure/logger/event/console.event.logger';
export { NoopEventLogger as ɵt } from './core/infrastructure/logger/event/noop.event.logger';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy11aS1oZXJtZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VuZXJpYy11aS9oZXJtZXMvIiwic291cmNlcyI6WyJnZW5lcmljLXVpLWhlcm1lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsaWtDQUFjLGNBQWMsQ0FBQztBQUU3QixPQUFPLEVBQUMsTUFBTSxJQUFJLEVBQUUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDaEUsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQ3pFLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQztBQUNyRixPQUFPLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUVwSCxPQUFPLEVBQUMsd0JBQXdCLElBQUksRUFBRSxFQUFDLE1BQU0seURBQXlELENBQUM7QUFDdkcsT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQywwQkFBMEIsSUFBSSxFQUFFLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUNuSCxPQUFPLEVBQUMsaUNBQWlDLElBQUksR0FBRyxFQUFDLG9DQUFvQyxJQUFJLEdBQUcsRUFBQyxNQUFNLDhFQUE4RSxDQUFDO0FBQ2xMLE9BQU8sRUFBQyxpQ0FBaUMsSUFBSSxFQUFFLEVBQUMsTUFBTSxnRkFBZ0YsQ0FBQztBQUN2SSxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLE1BQU0sK0NBQStDLENBQUM7QUFDNUYsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxvREFBb0QsQ0FBQztBQUN4SCxPQUFPLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLE1BQU0sZ0RBQWdELENBQUM7QUFDdEYsT0FBTyxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQzlFLE9BQU8sRUFBQyxzQkFBc0IsSUFBSSxFQUFFLEVBQUMseUJBQXlCLElBQUksRUFBRSxFQUFDLDhCQUE4QixJQUFJLEVBQUUsRUFBQyxNQUFNLHVEQUF1RCxDQUFDO0FBQ3hLLE9BQU8sRUFBQyxxQkFBcUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxtREFBbUQsQ0FBQztBQUM5RixPQUFPLEVBQUMsT0FBTyxJQUFJLEVBQUUsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBQzVELE9BQU8sRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSw2REFBNkQsQ0FBQztBQUN2RyxPQUFPLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sMERBQTBELENBQUM7QUFDakcsT0FBTyxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLHlEQUF5RCxDQUFDO0FBQ2pHLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sc0RBQXNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG5cbmV4cG9ydCB7TG9nZ2VyIGFzIMm1ZH0gZnJvbSAnLi9jb21tb24vbG9nZ2VyJztcbmV4cG9ydCB7UmVhY3RpdmVTZXJ2aWNlIGFzIMm1aH0gZnJvbSAnLi9jb21tb24vcmVhY3RpdmUuc2VydmljZSc7XG5leHBvcnQge0hlcm1lc0RvbWFpbk1vZHVsZSBhcyDJtXV9IGZyb20gJy4vY29yZS9hcGkvaGVybWVzLmRvbWFpbi5tb2R1bGUnO1xuZXhwb3J0IHtIZXJtZXNMb2dnZXJzSW5pdGlhbGl6ZXIgYXMgybVwfSBmcm9tICcuL2NvcmUvYXBpL2hlcm1lcy5sb2dnZXJzLmluaXRpYWxpemVyJztcbmV4cG9ydCB7SGVybWVzQmFzZU1vZHVsZSBhcyDJtWMsY29tbWFuZExvZ2dlckZhY3RvcnkgYXMgybVhLGV2ZW50TG9nZ2VyRmFjdG9yeSBhcyDJtWJ9IGZyb20gJy4vY29yZS9hcGkvaGVybWVzLm1vZHVsZSc7XG5leHBvcnQge0FnZ3JlZ2F0ZURlZmluaXRpb24gYXMgybVtfSBmcm9tICcuL2NvcmUvZG9tYWluL2NvbW1hbmQvY29uZmlnL2FnZ3JlZ2F0ZS1kZWZpbml0aW9uJztcbmV4cG9ydCB7YWdncmVnYXRlRGVmaW5pdGlvblRva2VuIGFzIMm1bH0gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2NvbmZpZy9hZ2dyZWdhdGUtZGVmaW5pdGlvbi50b2tlbic7XG5leHBvcnQge0FnZ3JlZ2F0ZUZhY3RvcnlBcmNoaXZlIGFzIMm1bixBZ2dyZWdhdGVSZXBvc2l0b3J5QXJjaGl2ZSBhcyDJtW99IGZyb20gJy4vY29yZS9kb21haW4vY29tbWFuZC9jb25maWcvZGVmaW5lJztcbmV4cG9ydCB7Q3JlYXRlQWdncmVnYXRlQ29tbWFuZEhhbmRsZXJJbXBsIGFzIMm1YmIsY3JlYXRlQWdncmVnYXRlQ29tbWFuZEhhbmRsZXJGYWN0b3J5IGFzIMm1YmF9IGZyb20gJy4vY29yZS9kb21haW4vY29tbWFuZC9jcmVhdGUtYWdncmVnYXRlL2NyZWF0ZS1hZ2dyZWdhdGUuY29tbWFuZC1oYW5kbGVyLWltcGwnO1xuZXhwb3J0IHtDUkVBVEVfQUdHUkVHQVRFX0NPTU1BTkRfSEFORExFUlMgYXMgybVqfSBmcm9tICcuL2NvcmUvZG9tYWluL2NvbW1hbmQvY3JlYXRlLWFnZ3JlZ2F0ZS9jcmVhdGUtYWdncmVnYXRlLmNvbW1hbmQtaGFuZGxlcnMtdG9rZW4nO1xuZXhwb3J0IHtGSUxURVJFRF9DT01NQU5EX1NUUkVBTSBhcyDJtWZ9IGZyb20gJy4vY29yZS9kb21haW4vY29tbWFuZC9maWx0ZXJlZC1jb21tYW5kLXN0cmVhbSc7XG5leHBvcnQge0NvbW1hbmRIYW5kbGVySW1wbCBhcyDJtXcsY29tbWFuZEhhbmRsZXJGYWN0b3J5IGFzIMm1dn0gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2hhbmRsZXIvY29tbWFuZC1oYW5kbGVyLWltcGwnO1xuZXhwb3J0IHtDT01NQU5EX0hBTkRMRVJTIGFzIMm1a30gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2hhbmRsZXIvY29tbWFuZC1oYW5kbGVycyc7XG5leHBvcnQge0RvbWFpbkV2ZW50U3RvcmUgYXMgybVnfSBmcm9tICcuL2NvcmUvZG9tYWluL2V2ZW50L2RvbWFpbi1ldmVudC5zdG9yZSc7XG5leHBvcnQge0RvbWFpbkV2ZW50SGFuZGxlckltcGwgYXMgybV6LGRvbWFpbkV2ZW50SGFuZGxlckZhY3RvcnkgYXMgybV4LG11bHRpRG9tYWluRXZlbnRIYW5kbGVyRmFjdG9yeSBhcyDJtXl9IGZyb20gJy4vY29yZS9kb21haW4vZXZlbnQvaGFuZGxlci9kb21haW4tZXZlbnQtaGFuZGxlci1pbXBsJztcbmV4cG9ydCB7RE9NQUlOX0VWRU5UX0hBTkRMRVJTIGFzIMm1aX0gZnJvbSAnLi9jb3JlL2RvbWFpbi9ldmVudC9oYW5kbGVyL2RvbWFpbi1ldmVudC1oYW5kbGVycyc7XG5leHBvcnQge01lc3NhZ2UgYXMgybVlfSBmcm9tICcuL2NvcmUvZG9tYWluL21lc3NhZ2UvbWVzc2FnZSc7XG5leHBvcnQge0NvbnNvbGVDb21tYW5kTG9nZ2VyIGFzIMm1cX0gZnJvbSAnLi9jb3JlL2luZnJhc3RydWN0dXJlL2xvZ2dlci9jb21tYW5kL2NvbnNvbGUuY29tbWFuZC5sb2dnZXInO1xuZXhwb3J0IHtOb29wQ29tbWFuZExvZ2dlciBhcyDJtXJ9IGZyb20gJy4vY29yZS9pbmZyYXN0cnVjdHVyZS9sb2dnZXIvY29tbWFuZC9ub29wLmNvbW1hbmQubG9nZ2VyJztcbmV4cG9ydCB7Q29uc29sZUV2ZW50TG9nZ2VyIGFzIMm1c30gZnJvbSAnLi9jb3JlL2luZnJhc3RydWN0dXJlL2xvZ2dlci9ldmVudC9jb25zb2xlLmV2ZW50LmxvZ2dlcic7XG5leHBvcnQge05vb3BFdmVudExvZ2dlciBhcyDJtXR9IGZyb20gJy4vY29yZS9pbmZyYXN0cnVjdHVyZS9sb2dnZXIvZXZlbnQvbm9vcC5ldmVudC5sb2dnZXInOyJdfQ==