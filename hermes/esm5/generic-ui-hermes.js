/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { HermesApi, enableHermesLoggers, disableHermesLoggers, provideEventHandlers, CommandDispatcher, Command, CommandType, AggregateFactory, CommandBus, CommandLogger, CommandStream, AggregateEvent, AggregateEventType, AggregateRepository, AggregateStore, AggregateStoreRegister, AggregateRoot, AggregateId, DomainEvent, DomainEventPublisher, DomainEventBus, DomainEventType, EventDrivenRepository, DomainEventLogger, DomainEventPayload, DomainEventStream, ReadModelEntity, ReadModelEntityId, ReadModelRoot, ReadModelRootId, ReadModelRootRepository, ReadModelStore, EventRepository, Entity, EntityId, HermesId, ValueObject, DomainObject, ReadModelObject, DomainModule, ApiModule, FeatureModule, AggregateArchive, Archive, RandomStringGenerator, Optional, ReactiveService, Reactive, KeyMap, PersistAnemia, PersistStateStore, PersistReadModelStore, PersistAggregateStore, InMemoryAggregateStore, InMemoryReadModelStore, InMemoryStore, HermesModule, COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, assertDomainEvents, assertAggregateEvents, CreateAggregateCommand } from './public-api';
export { HermesDomainModule as ɵt } from './core/api/hermes.domain.module';
export { HermesLoggersInitializer as ɵo } from './core/api/hermes.loggers.initializer';
export { HermesBaseModule as ɵc, commandLoggerFactory as ɵa, eventLoggerFactory as ɵb } from './core/api/hermes.module';
export { Logger as ɵd } from './core/api/logger/logger';
export { aggregateDefinitionToken as ɵk } from './core/domain/command/config/aggregate-definition.token';
export { AggregateFactoryArchive as ɵm, AggregateRepositoryArchive as ɵn } from './core/domain/command/config/define';
export { CreateAggregateCommandHandlerImpl as ɵba, createAggregateCommandHandlerFactory as ɵz } from './core/domain/command/create-aggregate/create-aggregate.command-handler-impl';
export { CREATE_AGGREGATE_COMMAND_HANDLERS as ɵi } from './core/domain/command/create-aggregate/create-aggregate.command-handlers-token';
export { FILTERED_COMMAND_STREAM as ɵf } from './core/domain/command/filtered-command-stream';
export { CommandHandlerImpl as ɵv, commandHandlerFactory as ɵu } from './core/domain/command/handler/command-handler-impl';
export { COMMAND_HANDLERS as ɵj } from './core/domain/command/handler/command-handlers';
export { DomainEventStore as ɵg } from './core/domain/event/domain-event.store';
export { DomainEventHandlerImpl as ɵy, domainEventHandlerFactory as ɵw, multiDomainEventHandlerFactory as ɵx } from './core/domain/event/handler/domain-event-handler-impl';
export { DOMAIN_EVENT_HANDLERS as ɵh } from './core/domain/event/handler/domain-event-handlers';
export { Message as ɵe } from './core/domain/message/message';
export { ConsoleCommandLogger as ɵp } from './core/infrastructure/logger/command/console.command.logger';
export { NoopCommandLogger as ɵq } from './core/infrastructure/logger/command/noop.command.logger';
export { ConsoleEventLogger as ɵr } from './core/infrastructure/logger/event/console.event.logger';
export { NoopEventLogger as ɵs } from './core/infrastructure/logger/event/noop.event.logger';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy11aS1oZXJtZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VuZXJpYy11aS9oZXJtZXMvIiwic291cmNlcyI6WyJnZW5lcmljLXVpLWhlcm1lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsNmlDQUFjLGNBQWMsQ0FBQztBQUU3QixPQUFPLEVBQUMsa0JBQWtCLElBQUksRUFBRSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDekUsT0FBTyxFQUFDLHdCQUF3QixJQUFJLEVBQUUsRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQ3JGLE9BQU8sRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3BILE9BQU8sRUFBQyxNQUFNLElBQUksRUFBRSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFFdEQsT0FBTyxFQUFDLHdCQUF3QixJQUFJLEVBQUUsRUFBQyxNQUFNLHlEQUF5RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBQyx1QkFBdUIsSUFBSSxFQUFFLEVBQUMsMEJBQTBCLElBQUksRUFBRSxFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDbkgsT0FBTyxFQUFDLGlDQUFpQyxJQUFJLEdBQUcsRUFBQyxvQ0FBb0MsSUFBSSxFQUFFLEVBQUMsTUFBTSw4RUFBOEUsQ0FBQztBQUNqTCxPQUFPLEVBQUMsaUNBQWlDLElBQUksRUFBRSxFQUFDLE1BQU0sZ0ZBQWdGLENBQUM7QUFDdkksT0FBTyxFQUFDLHVCQUF1QixJQUFJLEVBQUUsRUFBQyxNQUFNLCtDQUErQyxDQUFDO0FBQzVGLE9BQU8sRUFBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUMscUJBQXFCLElBQUksRUFBRSxFQUFDLE1BQU0sb0RBQW9ELENBQUM7QUFDeEgsT0FBTyxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxNQUFNLGdEQUFnRCxDQUFDO0FBQ3RGLE9BQU8sRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx3Q0FBd0MsQ0FBQztBQUM5RSxPQUFPLEVBQUMsc0JBQXNCLElBQUksRUFBRSxFQUFDLHlCQUF5QixJQUFJLEVBQUUsRUFBQyw4QkFBOEIsSUFBSSxFQUFFLEVBQUMsTUFBTSx1REFBdUQsQ0FBQztBQUN4SyxPQUFPLEVBQUMscUJBQXFCLElBQUksRUFBRSxFQUFDLE1BQU0sbURBQW1ELENBQUM7QUFDOUYsT0FBTyxFQUFDLE9BQU8sSUFBSSxFQUFFLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RCxPQUFPLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLE1BQU0sNkRBQTZELENBQUM7QUFDdkcsT0FBTyxFQUFDLGlCQUFpQixJQUFJLEVBQUUsRUFBQyxNQUFNLDBEQUEwRCxDQUFDO0FBQ2pHLE9BQU8sRUFBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUMsTUFBTSx5REFBeUQsQ0FBQztBQUNqRyxPQUFPLEVBQUMsZUFBZSxJQUFJLEVBQUUsRUFBQyxNQUFNLHNEQUFzRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpYy1hcGknO1xuXG5leHBvcnQge0hlcm1lc0RvbWFpbk1vZHVsZSBhcyDJtXR9IGZyb20gJy4vY29yZS9hcGkvaGVybWVzLmRvbWFpbi5tb2R1bGUnO1xuZXhwb3J0IHtIZXJtZXNMb2dnZXJzSW5pdGlhbGl6ZXIgYXMgybVvfSBmcm9tICcuL2NvcmUvYXBpL2hlcm1lcy5sb2dnZXJzLmluaXRpYWxpemVyJztcbmV4cG9ydCB7SGVybWVzQmFzZU1vZHVsZSBhcyDJtWMsY29tbWFuZExvZ2dlckZhY3RvcnkgYXMgybVhLGV2ZW50TG9nZ2VyRmFjdG9yeSBhcyDJtWJ9IGZyb20gJy4vY29yZS9hcGkvaGVybWVzLm1vZHVsZSc7XG5leHBvcnQge0xvZ2dlciBhcyDJtWR9IGZyb20gJy4vY29yZS9hcGkvbG9nZ2VyL2xvZ2dlcic7XG5leHBvcnQge0FnZ3JlZ2F0ZURlZmluaXRpb24gYXMgybVsfSBmcm9tICcuL2NvcmUvZG9tYWluL2NvbW1hbmQvY29uZmlnL2FnZ3JlZ2F0ZS1kZWZpbml0aW9uJztcbmV4cG9ydCB7YWdncmVnYXRlRGVmaW5pdGlvblRva2VuIGFzIMm1a30gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2NvbmZpZy9hZ2dyZWdhdGUtZGVmaW5pdGlvbi50b2tlbic7XG5leHBvcnQge0FnZ3JlZ2F0ZUZhY3RvcnlBcmNoaXZlIGFzIMm1bSxBZ2dyZWdhdGVSZXBvc2l0b3J5QXJjaGl2ZSBhcyDJtW59IGZyb20gJy4vY29yZS9kb21haW4vY29tbWFuZC9jb25maWcvZGVmaW5lJztcbmV4cG9ydCB7Q3JlYXRlQWdncmVnYXRlQ29tbWFuZEhhbmRsZXJJbXBsIGFzIMm1YmEsY3JlYXRlQWdncmVnYXRlQ29tbWFuZEhhbmRsZXJGYWN0b3J5IGFzIMm1en0gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2NyZWF0ZS1hZ2dyZWdhdGUvY3JlYXRlLWFnZ3JlZ2F0ZS5jb21tYW5kLWhhbmRsZXItaW1wbCc7XG5leHBvcnQge0NSRUFURV9BR0dSRUdBVEVfQ09NTUFORF9IQU5ETEVSUyBhcyDJtWl9IGZyb20gJy4vY29yZS9kb21haW4vY29tbWFuZC9jcmVhdGUtYWdncmVnYXRlL2NyZWF0ZS1hZ2dyZWdhdGUuY29tbWFuZC1oYW5kbGVycy10b2tlbic7XG5leHBvcnQge0ZJTFRFUkVEX0NPTU1BTkRfU1RSRUFNIGFzIMm1Zn0gZnJvbSAnLi9jb3JlL2RvbWFpbi9jb21tYW5kL2ZpbHRlcmVkLWNvbW1hbmQtc3RyZWFtJztcbmV4cG9ydCB7Q29tbWFuZEhhbmRsZXJJbXBsIGFzIMm1dixjb21tYW5kSGFuZGxlckZhY3RvcnkgYXMgybV1fSBmcm9tICcuL2NvcmUvZG9tYWluL2NvbW1hbmQvaGFuZGxlci9jb21tYW5kLWhhbmRsZXItaW1wbCc7XG5leHBvcnQge0NPTU1BTkRfSEFORExFUlMgYXMgybVqfSBmcm9tICcuL2NvcmUvZG9tYWluL2NvbW1hbmQvaGFuZGxlci9jb21tYW5kLWhhbmRsZXJzJztcbmV4cG9ydCB7RG9tYWluRXZlbnRTdG9yZSBhcyDJtWd9IGZyb20gJy4vY29yZS9kb21haW4vZXZlbnQvZG9tYWluLWV2ZW50LnN0b3JlJztcbmV4cG9ydCB7RG9tYWluRXZlbnRIYW5kbGVySW1wbCBhcyDJtXksZG9tYWluRXZlbnRIYW5kbGVyRmFjdG9yeSBhcyDJtXcsbXVsdGlEb21haW5FdmVudEhhbmRsZXJGYWN0b3J5IGFzIMm1eH0gZnJvbSAnLi9jb3JlL2RvbWFpbi9ldmVudC9oYW5kbGVyL2RvbWFpbi1ldmVudC1oYW5kbGVyLWltcGwnO1xuZXhwb3J0IHtET01BSU5fRVZFTlRfSEFORExFUlMgYXMgybVofSBmcm9tICcuL2NvcmUvZG9tYWluL2V2ZW50L2hhbmRsZXIvZG9tYWluLWV2ZW50LWhhbmRsZXJzJztcbmV4cG9ydCB7TWVzc2FnZSBhcyDJtWV9IGZyb20gJy4vY29yZS9kb21haW4vbWVzc2FnZS9tZXNzYWdlJztcbmV4cG9ydCB7Q29uc29sZUNvbW1hbmRMb2dnZXIgYXMgybVwfSBmcm9tICcuL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvbG9nZ2VyL2NvbW1hbmQvY29uc29sZS5jb21tYW5kLmxvZ2dlcic7XG5leHBvcnQge05vb3BDb21tYW5kTG9nZ2VyIGFzIMm1cX0gZnJvbSAnLi9jb3JlL2luZnJhc3RydWN0dXJlL2xvZ2dlci9jb21tYW5kL25vb3AuY29tbWFuZC5sb2dnZXInO1xuZXhwb3J0IHtDb25zb2xlRXZlbnRMb2dnZXIgYXMgybVyfSBmcm9tICcuL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvbG9nZ2VyL2V2ZW50L2NvbnNvbGUuZXZlbnQubG9nZ2VyJztcbmV4cG9ydCB7Tm9vcEV2ZW50TG9nZ2VyIGFzIMm1c30gZnJvbSAnLi9jb3JlL2luZnJhc3RydWN0dXJlL2xvZ2dlci9ldmVudC9ub29wLmV2ZW50LmxvZ2dlcic7Il19