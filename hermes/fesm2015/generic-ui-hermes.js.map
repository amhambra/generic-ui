{"version":3,"file":"generic-ui-hermes.js","sources":["../../build-cli/projects/gui-hermes/src/core/api/logger/logger.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.logger.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.logger.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes-api.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes-api.helpers.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-handlers.ts","../../build-cli/projects/gui-hermes/src/core/domain/provider.helpers.ts","../../build-cli/projects/gui-hermes/src/common/stream/subscription/hermes.subscription.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/subscriber/hermes.subscriber.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.observable.ts","../../build-cli/projects/gui-hermes/src/common/stream/subscription/hermes-empty.subscription.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.subject.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.stream.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.dispatcher.ts","../../build-cli/projects/gui-hermes/src/common/random-string.generator.ts","../../build-cli/projects/gui-hermes/src/core/domain/message/message.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.ts","../../build-cli/projects/gui-hermes/src/core/domain/message/message-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-factory.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/filtered-command-stream.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/operator-utils.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.filter.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/command.bus.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-event.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-event-type.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-repository.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/store/aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/store/aggregate-store.register.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-root.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/hermes.id.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/aggregate/aggregate-id.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.of.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.empty.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.take.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.stream.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.publisher.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/domain-event.bus.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-type.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.take-until.ts","../../build-cli/projects/gui-hermes/src/infrastructure/rxjs/to-rxjs-observable.ts","../../build-cli/projects/gui-hermes/src/common/reactive.ts","../../build-cli/projects/gui-hermes/src/common/reactive.service.ts","../../build-cli/projects/gui-hermes/src/common/optional.ts","../../build-cli/projects/gui-hermes/src/common/collections/key-map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.distinct-until-changed.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.behavior-subject.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.replay-subject.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/hermes.archive-subject.ts","../../build-cli/projects/gui-hermes/src/common/key.archive.ts","../../build-cli/projects/gui-hermes/src/common/aggregate.archive.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/event-driven.repository.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-entity.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-entity-id.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root-id.ts","../../build-cli/projects/gui-hermes/src/core/api/read/read-model-root.repository.ts","../../build-cli/projects/gui-hermes/src/core/api/read/store/read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/api/event/event.repository.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/entity.ts","../../build-cli/projects/gui-hermes/src/core/domain/tactical/entity.id.ts","../../build-cli/projects/gui-hermes/src/core/domain/decorators.ts","../../build-cli/projects/gui-hermes/src/core/domain/domain-module.ts","../../build-cli/projects/gui-hermes/src/core/api/api-module.ts","../../build-cli/projects/gui-hermes/src/feature/feature-module.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.never.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.interval.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.timer.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.from-event.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/subscriber/hermes.single-subscriber.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/single/hermes.single.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/single/hermes.single-from-observable.ts","../../build-cli/projects/gui-hermes/src/common/stream/observable/creator/hermes.throw-error.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.skip.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.switch-map.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.tap.ts","../../build-cli/projects/gui-hermes/src/common/stream/operator/hermes.to-array.ts","../../build-cli/projects/gui-hermes/src/infrastructure/rxjs/from-rxjs-observable.ts","../../build-cli/projects/gui-hermes/src/common/archive.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/persist-anemia.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/persist-state.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/read/persist.read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/persist/command/persist-aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/command/in-memory.aggregate.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/read/in-memory.read-model.store.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/in-memory/in-memory.store.ts","../../build-cli/projects/gui-hermes/src/core/domain/hermes-tokens.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/command/console.command.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/command/noop.command.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/event/console.event.logger.ts","../../build-cli/projects/gui-hermes/src/core/infrastructure/logger/event/noop.event.logger.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.loggers.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command-handlers-token.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/define.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/aggregate-definition.token.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.domain.module.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-handlers.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/handler/command-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/handler/domain-event-handler-impl.ts","../../build-cli/projects/gui-hermes/src/core/domain/event/init/domain-event-handler.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/init/command-handler.initializer.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/config/aggregate-definition.initializer.ts","../../build-cli/projects/gui-hermes/src/core/api/hermes.module.ts","../../build-cli/projects/gui-hermes/src/testing/helpers.ts","../../build-cli/projects/gui-hermes/src/core/domain/command/create-aggregate/create-aggregate.command.ts","../../build-cli/projects/gui-hermes/src/generic-ui-hermes.ts"],"sourcesContent":["import { Message } from '../../domain/message/message';\n\nexport abstract class Logger<M extends Message<any>> {\n\n\tprivate domainName: string;\n\n\tabstract start(): void;\n\n\tabstract stop(): void;\n\n\tprotected abstract print(message: M): void;\n\n\tsetDomain(domainName: string): void {\n\t\tthis.domainName = domainName;\n\t}\n\n\tlog(message: M): void {\n\t\tif (this.shouldPrint(message)) {\n\t\t\tthis.print(message);\n\t\t}\n\t}\n\n\tprotected shouldPrint(message: M): boolean {\n\n\t\tif (!this.domainName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst log: string = message.toString();\n\n\t\treturn log.includes(this.domainName);\n\t}\n}\n","import { Command } from './command';\nimport { Logger } from '../../api/logger/logger';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class CommandLogger extends Logger<Command<AggregateId>> {\n}\n","import { DomainEvent } from './domain-event';\nimport { Logger } from '../../api/logger/logger';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class DomainEventLogger extends Logger<DomainEvent<AggregateId>> {\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\n\ndeclare const window: any;\n\nexport const hermesApi = 'hermesApi';\n\n@Injectable()\nexport class HermesApi {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: Object,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\tconst api = (api: HermesApi) => {\n\t\t\t\treturn {\n\t\t\t\t\tset loggers(enabled: boolean) {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tapi.commandLogger.start();\n\t\t\t\t\t\t\tapi.eventLogger.start();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tapi.commandLogger.stop();\n\t\t\t\t\t\t\tapi.eventLogger.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset domain(domainName: string) {\n\t\t\t\t\t\tif (domainName) {\n\t\t\t\t\t\t\tapi.commandLogger.setDomain(domainName);\n\t\t\t\t\t\t\tapi.eventLogger.setDomain(domainName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t\twindow[hermesApi] = api(this);\n\n\t\t\twindow[hermesApi].loggers = false;\n\t\t}\n\t}\n}\n","import { hermesApi } from './hermes-api';\n\ndeclare const window: Window;\n\nexport function enableHermesLoggers(domainName?: string, windowObject?: Window): void {\n\n\tconst winRef = windowObject ? windowObject : window;\n\n\tif (domainName) {\n\t\twinRef[hermesApi].domain = domainName;\n\t}\n\n\twinRef[hermesApi].loggers = true;\n}\n\nexport function disableHermesLoggers(windowObject?: Window): void {\n\n\tconst winRef = windowObject ? windowObject : window;\n\n\tdelete winRef[hermesApi].domain;\n\n\twinRef[hermesApi].loggers = false;\n}\n","export const DOMAIN_EVENT_HANDLERS = 'HERMES - DOMAIN_EVENT_HANDLERS_TOKEN';\n","import { StaticProvider, Type } from '@angular/core';\n\nimport { DomainEvent } from './event/domain-event';\n\nimport { AggregateId } from './tactical/aggregate/aggregate-id';\nimport { DomainEventHandler } from './event/handler/domain-event.handler';\nimport { DOMAIN_EVENT_HANDLERS } from './event/handler/domain-event-handlers';\n\nexport function provideEventHandlers<I extends AggregateId, E extends DomainEvent<I>>(handlers: Array<Type<DomainEventHandler<I, E>>>): Array<StaticProvider> {\n\treturn handlers.map((handler: Type<DomainEventHandler<I, E>>) => {\n\t\treturn {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: handler,\n\t\t\tmulti: true\n\t\t};\n\t}) as any;\n}\n","export class HermesSubscription {\n\n\tprivate closed: boolean = false;\n\n\tprivate readonly finalize: () => void = () => {\n\t};\n\n\tconstructor(finalize?: () => void, isClosed?: boolean) {\n\n\t\tif (finalize !== undefined && finalize !== null &&\n\t\t\ttypeof finalize === 'function') {\n\t\t\tthis.finalize = finalize;\n\t\t}\n\n\t\tif (isClosed !== undefined && isClosed !== null) {\n\t\t\tthis.closed = isClosed;\n\t\t}\n\t}\n\n\tunsubscribe(): void {\n\n\t\tif (this.closed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closed = true;\n\t\tthis.finalize();\n\t}\n\n\tgetFinalize(): () => void {\n\t\treturn this.finalize;\n\t}\n}\n","import { HermesObserver } from '../hermes.observer';\n\nexport class HermesSubscriber<T> {\n\n\tprivate observer: Partial<HermesObserver<T>>;\n\n\tprivate finalize: () => void = () => {\n\t};\n\n\tprivate completed: boolean = false;\n\n\tprivate closed: boolean = false;\n\n\tconstructor(config: Partial<HermesObserver<T>>) {\n\t\tthis.observer = config;\n\t}\n\n\tnext(value: T): void {\n\n\t\tif (this.isCompleted()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.observer && this.observer.next) {\n\t\t\tthis.observer.next(value);\n\t\t}\n\t}\n\n\terror(error: any): void {\n\n\t\tif (this.completed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.observer && this.observer.error) {\n\t\t\tthis.observer.error(error);\n\t\t}\n\t\tthis.unsubscribe();\n\t}\n\n\tcomplete(): void {\n\n\t\tif (this.completed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.completed = true;\n\t\tif (this.observer && this.observer.complete) {\n\t\t\tthis.observer.complete();\n\t\t}\n\n\t\tthis.unsubscribe();\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.closed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.closed = true;\n\t\tthis.completed = true;\n\n\t\tthis.finalize();\n\t}\n\n\tsetFinalize(finalize: () => void): void {\n\t\tif (finalize && typeof finalize === 'function') {\n\t\t\tthis.finalize = finalize;\n\t\t} else {\n\n\t\t}\n\t}\n\n\tprotected isCompleted(): boolean {\n\t\treturn this.completed;\n\t}\n\n\tprotected isClosed(): boolean {\n\t\treturn this.closed;\n\t}\n\n\tprotected getObserver(): Partial<HermesObserver<T>> {\n\t\treturn this.observer;\n\t}\n\n}\n","import { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\nimport { HermesObserver } from './hermes.observer';\n\n\nexport interface HermesOperatorFunction<T, R> {\n\t(source: HermesObservable<T>): HermesObservable<R>\n}\n\nexport class HermesObservable<T> {\n\n\tprivate source: HermesObservable<T>;\n\n\t// private operator: HermesObservable<T>;\n\n\tprotected readonly generatorFn: any;\n\n\tprivate generatorFinalize: () => void;\n\n\tconstructor(generator?: (observer?: HermesObserver<T>) => void) {\n\t\tthis.generatorFn = generator;\n\t}\n\n\tpipe<T, R>(...operations: Array<HermesOperatorFunction<any, any>>): HermesObservable<any> {\n\t\tthis.source = this;\n\n\t\tfor (const operation of operations) {\n\t\t\tthis.source = this.innerPipe(operation, this.source);\n\t\t}\n\t\treturn this.source;\n\t}\n\n\tprivate innerPipe<T, R>(operation: HermesOperatorFunction<T, R>, stream$: HermesObservable<T>): HermesObservable<R> {\n\t\treturn ((input: any) => {\n\t\t\treturn operation(input);\n\t\t})(stream$);\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\tobserver: Partial<HermesObserver<T>>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else if (arg !== null && this.isObserver(arg)) {\n\n\t\t\tconst { next, error, complete } = arg;\n\n\t\t\tsubscriber = this.createSubscriber(next, error, complete);\n\t\t} else {\n\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tif (this.generatorFn) {\n\t\t\tthis.generatorFinalize = this.generatorFn(subscriber);\n\t\t\tsubscriber.setFinalize(this.generatorFinalize);\n\t\t}\n\n\t\treturn this.getSubscription();\n\t}\n\n\tprotected createSubscriber(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscriber<T> {\n\t\treturn new HermesSubscriber({\n\t\t\tnext,\n\t\t\terror,\n\t\t\tcomplete\n\t\t});\n\t}\n\n\tprotected getSubscription(): HermesSubscription {\n\t\treturn new HermesSubscription(this.generatorFinalize);\n\t}\n\n\tprivate isObserver(observer: any): boolean {\n\t\treturn typeof observer === 'object';\n\t}\n\n}\n","import { HermesSubscription } from './hermes.subscription';\n\nexport function hermesEmptySubscription(): HermesSubscription {\n\treturn new HermesSubscription(() => {\n\t}, true);\n}\n","import { HermesObservable } from './hermes.observable';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\nimport { hermesEmptySubscription } from '../subscription/hermes-empty.subscription';\n\nexport class HermesSubject<T> extends HermesObservable<T> {\n\n\t/**\n\t * After error\n\t */\n\tprivate thrownError: Error | string = null;\n\n\t/**\n\t * After complete\n\t */\n\tprivate isCompleted: boolean = false;\n\n\t/**\n\t * After unsubscribe\n\t */\n\tprivate isClosed: boolean = false;\n\n\tprivate readonly subscribers: Array<HermesSubscriber<T>> = [];\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tnext(value: T): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted || this.thrownError !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.next(value);\n\t\t}\n\t}\n\n\terror(error: any): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.thrownError = error;\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.error(error);\n\t\t}\n\t\tthis.subscribers.length = 0;\n\t}\n\n\tcomplete(): void {\n\n\t\tthis.verifyNotClosed();\n\n\t\tif (this.isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isCompleted = true;\n\n\t\tfor (const subs of this.subscribers) {\n\t\t\tsubs.complete();\n\t\t}\n\t\tthis.subscribers.length = 0;\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tthis.verifyNotClosed();\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else {\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tif (this.thrownError !== null) {\n\t\t\tsubscriber.error(this.thrownError);\n\t\t\treturn hermesEmptySubscription();\n\t\t} else if (this.isCompleted) {\n\t\t\tsubscriber.complete();\n\t\t\treturn hermesEmptySubscription();\n\t\t} else {\n\t\t\tthis.subscribers.push(subscriber);\n\t\t\treturn this.getSubscription();\n\t\t}\n\t}\n\n\tunsubscribe(): void {\n\t\tthis.isCompleted = true;\n\t\tthis.isClosed = true;\n\t\tthis.subscribers.length = 0;\n\t}\n\n\ttoObservable(): HermesObservable<T> {\n\t\treturn new HermesObservable((observer) => {\n\t\t\tconst subscription = this.subscribe(\n\t\t\t\t(v) => observer.next(v),\n\t\t\t\t(error) => observer.error(error),\n\t\t\t\t() => observer.complete()\n\t\t\t);\n\n\t\t\treturn () => subscription.unsubscribe();\n\t\t});\n\t}\n\n\tprivate verifyNotClosed(): void {\n\t\tif (this.isClosed) {\n\t\t\tthrow new Error('Observable already closed');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class CommandStream extends HermesSubject<Command<AggregateId>> {\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandStream } from './command.stream';\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\n\n@Injectable()\nexport class CommandDispatcher {\n\n\tconstructor(private readonly commandStream: CommandStream) {\n\t}\n\n\tdispatch(command: Command<AggregateId>): void {\n\t\tthis.commandStream.next(command);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RandomStringGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): string {\n\t\treturn Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + `${RandomStringGenerator.index++}`;\n\t}\n\n}\n","import { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nimport { RandomStringGenerator } from '../../../common/random-string.generator';\n\nexport abstract class Message<I extends AggregateId> {\n\n\tprotected constructor(private readonly aggregateId: I,\n\t\t\t\t\t\t  protected readonly messageType: string,\n\t\t\t\t\t\t  private readonly messageId: string = RandomStringGenerator.generate()) {\n\t}\n\n\tgetMessageType(): string {\n\t\treturn this.messageType;\n\t}\n\n\tgetAggregateId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetMessageId(): string {\n\t\treturn this.messageId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.messageType;\n\t}\n\n\tequalsByType(message: Message<I>): boolean {\n\t\treturn this.getMessageType() === message.getMessageType();\n\t}\n\n\tequals(message: Message<I>): boolean {\n\t\treturn (this.getMessageType() === message.getMessageType()) && (this.messageId === message.messageId);\n\t}\n\n\tofMessageType(messageType: string): boolean;\n\tofMessageType(messageTypes: Array<string>): boolean;\n\tofMessageType(arg: string | Array<string>): boolean {\n\n\t\tif (Array.isArray(arg)) {\n\n\t\t\tconst found = arg.find((messageType: string) => this.isMessageType(messageType));\n\n\t\t\treturn !!found;\n\n\t\t} else {\n\t\t\treturn this.isMessageType(arg);\n\t\t}\n\t}\n\n\tprivate isMessageType(messageType: string): boolean {\n\t\treturn this.getMessageType() === messageType;\n\t}\n}\n","import { Message } from '../message/message';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\n\nexport abstract class Command<I extends AggregateId> extends Message<I> {\n}\n","export const MessageType = Function;\n\n// eslint-disable-next-line no-redeclare\nexport interface MessageType<T> extends Function {\n\tnew(...args: any[]): T;\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const CommandType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface CommandType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from './aggregate-id';\n\nexport abstract class AggregateFactory<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract create(aggregateId: I): A;\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Command } from './command';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\nexport const FILTERED_COMMAND_STREAM = new InjectionToken<HermesSubject<Command<AggregateId>>>('FILTERED_COMMAND_STREAM');\n","import { HermesObserver } from '../observable/hermes.observer';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\n\nexport function subscriberForOperator<T>(\n\tobserver: HermesObserver<T>,\n\tnext?: (value: T) => void,\n\tcomplete?: () => void): HermesSubscriber<T> {\n\n\tconst nextFn = next ? next : (v: T) => {\n\t\t\tobserver.next(v);\n\t\t},\n\t\tcompleteFn = complete ? complete : () => {\n\t\t\tobserver.complete();\n\t\t};\n\n\treturn new HermesSubscriber({\n\t\tnext: nextFn,\n\t\terror: (e: any) => observer.error(e),\n\t\tcomplete: completeFn\n\t});\n}\n\nexport function subscriberFromObserver<T>(observer: HermesObserver<T>): HermesSubscriber<T> {\n\treturn new HermesSubscriber({\n\t\tnext: (v: T) => observer.next(v),\n\t\terror: (e: any) => observer.error(e),\n\t\tcomplete: () => observer.complete()\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\nexport function hermesFilter<T>(operation: (value: any) => boolean): HermesOperatorFunction<T, T> {\n\treturn (source) => {\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\tif (operation(value)) {\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize()\n\t\t});\n\t};\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { Command } from './command';\nimport { FILTERED_COMMAND_STREAM } from './filtered-command-stream';\nimport { AggregateRoot } from '../tactical/aggregate/aggregate-root';\nimport { CreateAggregateCommandHandlerImpl } from './create-aggregate/create-aggregate.command-handler-impl';\nimport { CommandHandlerImpl } from './handler/command-handler-impl';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { CreateAggregateCommand } from './create-aggregate/create-aggregate.command';\nimport { CommandStream } from './command.stream';\nimport { HermesSubscription } from '../../../common/stream/subscription/hermes.subscription';\nimport { HermesSubscriber } from '../../../common/stream/observable/subscriber/hermes.subscriber';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\n\n@Injectable()\nexport class CommandBus<C = Command<AggregateId>> extends HermesObservable<C> {\n\n\tconstructor(@Inject(FILTERED_COMMAND_STREAM) private readonly commandsStream: CommandStream) {\n\t\tsuper();\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: C) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<C>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\treturn this.commandsStream.toObservable().subscribe(arguments[0], arguments[1], arguments[2]);\n\t}\n\n\tofCommand<C2 extends C>(...commandTypes: Array<string>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\t\t\t\t\treturn commandTypes.some((commandType: string) => command.ofMessageType(commandType));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCommandHandler<C2 extends C>(...handlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>>): any {\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\t\t\t\t\treturn handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>) => {\n\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofCreateAggregateHandler<C2 extends C>(\n\t\t...handlers: Array<CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, CreateAggregateCommand>>\n\t): any {\n\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: CreateAggregateCommand) => {\n\t\t\t\t\treturn handlers.some((handler: CreateAggregateCommandHandlerImpl<any, AggregateRoot<AggregateId>, CreateAggregateCommand>) => {\n\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofNullHandler<C2 extends C>(\n\t\thandlers: Array<CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>>,\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, CreateAggregateCommand>>\n\t): any {\n\n\t\treturn (this as CommandBus<any>)\n\t\t\t.commandsStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((command: Command<AggregateId>) => {\n\n\t\t\t\t\tif (!handlers && !aggregateCommandHandlers) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet foundHandlerForCommand = true;\n\n\t\t\t\t\tif (handlers) {\n\t\t\t\t\t\tfoundHandlerForCommand =\n\t\t\t\t\t\t\t!handlers.some((handler: CommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, Command<AggregateId>>) => {\n\t\t\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aggregateCommandHandlers) {\n\t\t\t\t\t\tfoundHandlerForCommand = foundHandlerForCommand &&\n\t\t\t\t\t\t\t!aggregateCommandHandlers.some((handler: CreateAggregateCommandHandlerImpl<AggregateId, AggregateRoot<AggregateId>, any>) => {\n\t\t\t\t\t\t\t\treturn handler.forCommand(command);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn foundHandlerForCommand;\n\n\t\t\t\t})\n\t\t\t);\n\t}\n\n}\n","import { AggregateId } from './aggregate-id';\nimport { DomainEvent } from '../../event/domain-event';\n\nexport abstract class AggregateEvent<T extends AggregateId> {\n\n\tprotected constructor(\n\t\tprivate readonly aggregateId: T,\n\t\tprivate readonly type: string) {\n\t}\n\n\tabstract toDomainEvent(): DomainEvent<T>;\n\n\tgetAggregateId(): AggregateId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tequals(event: AggregateEvent<T>): boolean {\n\t\treturn this.equalsByType(event) &&\n\t\t\tthis.getAggregateId().equals(event.getAggregateId());\n\t}\n\n\tequalsByType(event: AggregateEvent<T>): boolean {\n\t\treturn this.getType() === event.getType();\n\t}\n\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const AggregateEventType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface AggregateEventType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { AggregateRoot } from './aggregate-root';\nimport { AggregateId } from './aggregate-id';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class AggregateRepository<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tabstract findById(aggregateId: I): Optional<A>;\n\n\tabstract save(aggregate: A): void;\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class AggregateStore<I extends AggregateId, S extends AggregateRoot<I>> {\n\n\tabstract save(aggregate: S): void ;\n\n\tabstract findById(aggregateId: I): Optional<S>;\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { AggregateStore } from './aggregate.store';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\nexport class AggregateStoreRegister {\n\n\tprivate readonly stores: Array<AggregateStore<AggregateId, AggregateRoot<AggregateId>>> = [];\n\n\tregister(store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>): void {\n\t\tthis.stores.push(store);\n\t}\n\n\tcaptureAggregatesSnapshot(aggregateId: AggregateId): { [key: string]: AggregateRoot<AggregateId> } {\n\n\t\tif (!aggregateId) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst aggregates = {};\n\n\t\tthis.stores.forEach((store: AggregateStore<AggregateId, AggregateRoot<AggregateId>>) => {\n\n\t\t\tconst aggregate = store.findById(aggregateId);\n\n\t\t\tif (aggregate) {\n\n\t\t\t\tconst aggregateName = aggregate.constructor.name;\n\n\t\t\t\taggregates[aggregateName] = aggregate;\n\t\t\t}\n\n\t\t});\n\n\t\treturn this.cloneAggregates(aggregates);\n\t}\n\n\tprivate cloneAggregates(aggregates: { [key: string]: AggregateRoot<AggregateId> }): { [key: string]: AggregateRoot<AggregateId> } {\n\t\t// return JSON.parse(JSON.stringify(aggregates));\n\t\treturn aggregates;\n\t}\n}\n","import { AggregateEvent } from './aggregate-event';\nimport { AggregateId } from './aggregate-id';\nimport { AggregateEventType } from './aggregate-event-type';\n\n\nexport abstract class AggregateRoot<I extends AggregateId> {\n\n\tprivate readonly aggregateId: I;\n\n\tprivate readonly events: Array<AggregateEvent<I>>;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  private readonly type: string) {\n\t\tthis.aggregateId = aggregateId;\n\t\tthis.events = [];\n\t}\n\n\tabstract createEvent(): AggregateEventType<AggregateEvent<I>>;\n\n\tgetId(): I {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tgetEvents(): ReadonlyArray<AggregateEvent<I>> {\n\t\treturn this.events as ReadonlyArray<AggregateEvent<I>>;\n\t}\n\n\taddEvent(event: AggregateEvent<I>): void;\n\taddEvent(events: Array<AggregateEvent<I>>): void;\n\taddEvent(args: AggregateEvent<I> | Array<AggregateEvent<I>>): void {\n\n\t\tif (Array.isArray(args)) {\n\t\t\tfor (const event of args) {\n\t\t\t\tthis.events.push(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.events.push(args as AggregateEvent<I>);\n\t\t}\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tequals(aggregate: AggregateRoot<I>): boolean {\n\t\treturn aggregate.getId().toString() === this.getId().toString();\n\t}\n}\n","export abstract class HermesId<T> {\n\n\tprivate readonly uid: T;\n\n\tprotected constructor(uid: T) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toString(): string;\n\n\tgetId(): T {\n\t\treturn this.uid;\n\t}\n\n\tequals(hermesId: HermesId<T>): boolean {\n\t\treturn this.uid === hermesId.getId();\n\t}\n}\n","import { ReadModelRootId } from '../../../api/read/read-model-root-id';\nimport { HermesId } from '../hermes.id';\n\nexport abstract class AggregateId extends HermesId<string> {\n\n\tprotected constructor(uid: string) {\n\t\tsuper(uid);\n\t}\n\n\tabstract toReadModelRootId(): ReadModelRootId;\n\n\ttoString(): string {\n\t\treturn super.getId();\n\t}\n\n}\n","import { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { Message } from '../message/message';\n\n\nexport abstract class DomainEvent<I extends AggregateId = AggregateId> extends Message<I> {\n\n\tprivate readonly payload: any;\n\n\tprotected constructor(aggregateId: I,\n\t\t\t\t\t\t  payload: any,\n\t\t\t\t\t\t  messageType: string) {\n\t\tsuper(aggregateId, messageType);\n\t\tthis.payload = payload;\n\t}\n\n\tisSameType(event: DomainEvent<I>): boolean {\n\t\treturn this.constructor.name === event.constructor.name;\n\t}\n\n\tgetPayload(): any {\n\t\treturn this.payload;\n\t}\n}\n","import { HermesObservable } from '../hermes.observable';\n\nexport function hermesOf<T>(...args: Array<T>): HermesObservable<T> {\n\n\treturn new HermesObservable<T>(observer => {\n\n\t\targs.forEach(value => {\n\t\t\tobserver.next(value);\n\t\t});\n\n\t\tobserver.complete();\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesEmpty<T>(): HermesObservable<T> {\n\treturn new HermesObservable<T>((observer: HermesObserver<T>) => {\n\t\tobserver.complete();\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { hermesEmpty } from '../observable/creator/hermes.empty';\n\n\nexport function hermesTake<T>(valuesNumber: number): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\n\t\tif (valuesNumber === 0) {\n\t\t\treturn hermesEmpty();\n\t\t}\n\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = new HermesSubscriber({\n\t\t\t\tnext: (v: T) => {\n\t\t\t\t},\n\t\t\t\terror: (e: any) => observer.error(e),\n\t\t\t\tcomplete: () => observer.complete()\n\t\t\t});\n\n\t\t\t(subscriber as any).observer.next = function(v: any) {\n\t\t\t\tif (index < valuesNumber) {\n\t\t\t\t\tobserver.next(v);\n\t\t\t\t\tindex++;\n\n\t\t\t\t\tif (index === valuesNumber) {\n\t\t\t\t\t\tsubscriber.complete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst subscription = source.subscribe(\n\t\t\t\tsubscriber\n\t\t\t);\n\n\t\t\treturn subscription.getFinalize();\n\t\t});\n\t};\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\nimport { hermesOf } from '../../../common/stream/observable/creator/hermes.of';\nimport { hermesTake } from '../../../common/stream/operator/hermes.take';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\n\n\n@Injectable()\nexport class DomainEventStore {\n\n\tprivate readonly domainEvents: Array<DomainEvent<AggregateId>> = [];\n\n\tprivate readonly domainEvents$: HermesSubject<DomainEvent<AggregateId>> = new HermesSubject<DomainEvent<AggregateId>>();\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tthis.domainEvents.push(event);\n\t\tthis.domainEvents$.next(event);\n\t}\n\n\tfindEventByType(eventType: string): DomainEvent<AggregateId> {\n\n\t\tconst events: Array<DomainEvent<AggregateId>> = this.getEvents();\n\n\t\treturn events.reverse()\n\t\t\t\t\t .find((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\t\t return event.constructor.name === eventType;\n\t\t\t\t\t });\n\t}\n\n\t/**\n\t * First tries to event event in the history,\n\t * than method waits for future occurrences of the event.\n\t */\n\twaitForEvent(eventType: string): HermesObservable<DomainEvent<AggregateId>> {\n\n\t\t// find in a history\n\t\tconst event = this.findEventByType(eventType);\n\n\t\tif (event) {\n\t\t\treturn hermesOf(event);\n\t\t}\n\n\t\t// wait for future occurrence\n\t\treturn this.waitForNextEventOccurrence(eventType);\n\t}\n\n\twaitForNextEventOccurrence(eventType: string): HermesObservable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(event: DomainEvent<AggregateId>): HermesObservable<DomainEvent<AggregateId>>;\n\twaitForNextEventOccurrence(arg: string | DomainEvent<AggregateId>): HermesObservable<DomainEvent<AggregateId>> {\n\n\t\tlet eventType: string;\n\n\t\tif (arg instanceof DomainEvent) {\n\t\t\teventType = arg.constructor.name;\n\t\t} else if (typeof arg === 'string') {\n\t\t\teventType = arg;\n\t\t} else {\n\t\t\treturn new HermesObservable((observer) => {\n\t\t\t\tobserver.error(new Error('Unsupported argument type.'));\n\t\t\t});\n\t\t\t// return throwError(new Error('Unsupported argument type.'));\n\t\t}\n\n\t\treturn this.domainEvents$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event) => event.constructor.name === eventType),\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tprivate getEvents(): Array<DomainEvent<AggregateId>> {\n\t\treturn this.domainEvents;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStore } from './domain-event.store';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { HermesSubject } from '../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class DomainEventStream extends HermesSubject<DomainEvent<AggregateId>> {\n\n\tconstructor(private readonly eventStore: DomainEventStore) {\n\t\tsuper();\n\t}\n\n\tnext(event: DomainEvent<AggregateId>): void {\n\t\tsuper.next(event);\n\t\tthis.eventStore.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateEvent } from '../tactical/aggregate/aggregate-event';\n\nimport { DomainEventStream } from './domain-event.stream';\nimport { DomainEvent } from './domain-event';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../tactical/aggregate/aggregate-root';\n\n\n@Injectable()\nexport class DomainEventPublisher {\n\n\tconstructor(private readonly eventStream: DomainEventStream) {\n\t}\n\n\tpublish(event: DomainEvent<AggregateId>): void;\n\tpublish(events: ReadonlyArray<DomainEvent<AggregateId>>): void;\n\tpublish(args: DomainEvent<AggregateId> | ReadonlyArray<DomainEvent<AggregateId>>): void {\n\n\t\tif (Array.isArray(args)) {\n\n\t\t\tfor (const arg of args) {\n\t\t\t\tthis.publishEvent(arg);\n\t\t\t}\n\t\t} else if (args instanceof DomainEvent) {\n\t\t\tthis.publishEvent(args);\n\t\t}\n\t}\n\n\tpublishFromAggregate(aggregate: AggregateRoot<AggregateId>): void {\n\n\t\taggregate.getEvents()\n\t\t\t\t .forEach((aggregateEvent: AggregateEvent<AggregateId>) => {\n\t\t\t\t\t this.publish(\n\t\t\t\t\t\t aggregateEvent.toDomainEvent()\n\t\t\t\t\t );\n\t\t\t\t });\n\t}\n\n\tprivate publishEvent(event: DomainEvent<AggregateId>): void {\n\n\t\tif (!event) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`${event} is not defined`);\n\t\t}\n\n\t\tif (!(event instanceof DomainEvent)) {\n\t\t\t// throw new Error(`${event} is not a DomainEvent`);\n\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`${event} is not a DomainEvent`);\n\t\t}\n\n\t\tthis.eventStream.next(event);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent } from './domain-event';\nimport { DomainEventStream } from './domain-event.stream';\nimport { AggregateId } from '../tactical/aggregate/aggregate-id';\nimport { DomainEventHandlerImpl } from './handler/domain-event-handler-impl';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesSubscription } from '../../../common/stream/subscription/hermes.subscription';\nimport { HermesSubscriber } from '../../../common/stream/observable/subscriber/hermes.subscriber';\n\n@Injectable()\nexport class DomainEventBus<E = DomainEvent<AggregateId>> extends HermesObservable<E> {\n\n\tconstructor(private readonly eventStream: DomainEventStream) {\n\t\tsuper();\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: E) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<E>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\treturn this.eventStream.toObservable().subscribe(arguments[0], arguments[1], arguments[2]);\n\t}\n\n\tofEvents<E2 extends E>(events: Array<typeof DomainEvent>): HermesObservable<any> {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.eventStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn events.some((event: typeof DomainEvent) => {\n\t\t\t\t\t\tconst eventInstance = this.createEventInstance(event);\n\t\t\t\t\t\treturn eventInstance.equalsByType(domainEvent);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tofEventHandlers<E2 extends E>(handlers: Array<DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>>): any {\n\t\treturn (this as DomainEventBus<any>)\n\t\t\t.eventStream\n\t\t\t.toObservable()\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<AggregateId>) => {\n\t\t\t\t\treturn handlers.some((handler: DomainEventHandlerImpl<AggregateId, DomainEvent<AggregateId>>) => handler.forEvents([event]));\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tprivate createEventInstance(event: typeof DomainEvent): DomainEvent<AggregateId> {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = event.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (event as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (event as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (event as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (event as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('DomainEventBus constructor out of arguments');\n\t\t}\n\t}\n\n}\n","import { MessageType } from '../../message/message-type';\n\nexport const DomainEventType = MessageType;\n\n// eslint-disable-next-line no-redeclare\nexport interface DomainEventType<T> extends MessageType<T> {\n\tnew(...args: any[]): T;\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { subscriberFromObserver } from './operator-utils';\n\n\nexport function hermesTakeUntil<T>(notifier: HermesObservable<any>): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\t\treturn new HermesObservable<T>(observer => {\n\n\t\t\tconst subscriber = subscriberFromObserver(observer);\n\n\t\t\tconst notifierSubscriber = new HermesSubscriber({\n\t\t\t\tnext: () => subscriber.complete()\n\t\t\t});\n\n\t\t\tnotifier.subscribe(notifierSubscriber);\n\n\t\t\tconst subscription = source.subscribe(subscriber);\n\n\t\t\treturn subscription.getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable } from '../../common/stream/observable/hermes.observable';\nimport { Observable } from 'rxjs';\n\nexport function toRxJsObservable<T>(source$: HermesObservable<T>): Observable<T> {\n\treturn new Observable((observer) => {\n\t\tconst subscription = source$.subscribe(\n\t\t\t(value: T) => observer.next(value),\n\t\t\t(error: any) => observer.error(error),\n\t\t\t() => observer.complete()\n\t\t);\n\t\treturn () => subscription.unsubscribe();\n\t});\n}\n","import { MonoTypeOperatorFunction } from 'rxjs';\nimport { HermesSubject } from './stream/observable/hermes.subject';\nimport { hermesTakeUntil } from './stream/operator/hermes.take-until';\nimport { toRxJsObservable } from '../infrastructure/rxjs/to-rxjs-observable';\nimport { takeUntil } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class Reactive {\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected takeUntil<T>(): MonoTypeOperatorFunction<T> {\n\t\treturn takeUntil(\n\t\t\ttoRxJsObservable(this.hermesUnsubscribe$)\n\t\t);\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected isNotStopped(): boolean {\n\t\treturn !(this.hermesUnsubscribe$ as any).isCompleted;\n\t}\n\n}\n","import { OnDestroy, Injectable } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\n@Injectable()\nexport abstract class ReactiveService extends Reactive implements OnDestroy {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n}\n","export class Optional<T> {\n\n\tstatic empty(): Optional<any> {\n\t\treturn new Optional<any>(null);\n\t}\n\n\tstatic of<U>(value: U): Optional<U> {\n\t\treturn new Optional<U>(value);\n\t}\n\n\tprivate static isValueEmpty(value: any): boolean {\n\t\treturn typeof value === 'undefined' || value === null;\n\t}\n\n\tprivate readonly value: T;\n\n\tprivate constructor(value: T) {\n\n\t\tif (Optional.isValueEmpty(value)) {\n\t\t\tthis.value = null;\n\t\t} else {\n\t\t\tthis.value = value;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn Optional.isValueEmpty(this.value);\n\t}\n\n\tisPresent(): boolean {\n\t\treturn !this.isEmpty();\n\t}\n\n\tfilter(filterer: (value: T) => boolean): Optional<T> {\n\t\tif (this.isPresent() && filterer(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\tforEach(callback: (value: T) => any): void {\n\t\tif (this.isPresent()) {\n\t\t\tcallback(this.value);\n\t\t}\n\t}\n\n\tmap<U>(mapper: (value: T) => U): Optional<U> {\n\t\tif (this.isPresent()) {\n\t\t\treturn new Optional<U>(mapper(this.value));\n\t\t}\n\t\treturn Optional.empty();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetValueOrNullOrThrowError(): T {\n\t\treturn this.value;\n\t}\n\n\tgetOrThrow(): T {\n\t\tif (this.isEmpty()) {\n\t\t\tthrow new Error('Called getOrThrow on an empty Optional');\n\t\t}\n\t\treturn this.value;\n\t}\n\n\tgetOrElse<U extends T>(other: () => U): T {\n\t\tif (this.isPresent()) {\n\t\t\treturn this.value;\n\t\t}\n\t\treturn other();\n\t}\n\n\tifPresent(method: (value: T) => void): void {\n\t\tif (this.isPresent()) {\n\t\t\tmethod(this.value);\n\t\t}\n\t}\n\n\tifEmpty(method: () => void): void {\n\t\tif (this.isEmpty()) {\n\t\t\tmethod();\n\t\t}\n\t}\n\n\torElse<U extends T>(other: () => Optional<U>): Optional<T> {\n\t\tif (this.isPresent()) {\n\t\t\treturn this;\n\t\t}\n\t\treturn other();\n\t}\n\n}\n","import { Key } from './key';\nimport { Optional } from '../optional';\n\nexport class KeyMap<K extends Key, T> {\n\n\tprivate readonly keys = new Map<string, K>();\n\n\tprivate readonly values = new WeakMap<K, T>();\n\n\tget(key: K): Optional<T> {\n\n\t\tconst internalKey = this.getInternalKey(key);\n\n\t\tif (internalKey !== undefined) {\n\t\t\treturn Optional.of(this.values.get(internalKey));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n\n\thas(key: K): boolean {\n\n\t\tconst internalKey = this.getInternalKey(key);\n\n\t\treturn this.values.has(internalKey);\n\t}\n\n\tset(key: K, value: T): void {\n\t\tthis.keys.set(key.toString(), key);\n\t\tthis.values.set(key, value);\n\t}\n\n\tsize(): number {\n\t\treturn this.keys.size;\n\t}\n\n\tremove(key: K): void {\n\t\tif (this.hasInternalKey(key)) {\n\t\t\tthis.keys.delete(key.toString());\n\t\t\tthis.values.delete(key);\n\t\t}\n\t}\n\n\tremoveAll(): void {\n\t\tthis.keys.forEach((value) => {\n\t\t\tthis.values.delete(value);\n\t\t});\n\t\tthis.keys.clear();\n\t}\n\n\tprivate getInternalKey(key: K): K {\n\t\treturn this.keys.get(key.toString());\n\t}\n\n\tprivate hasInternalKey(key: K): boolean {\n\t\treturn this.keys.has(key.toString());\n\t}\n\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\nimport { HermesObserver } from '../observable/hermes.observer';\n\n\nexport function hermesMap<T, R>(convert: (value: T, index: number) => R): HermesOperatorFunction<T, R> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<R>((observer: HermesObserver<any>) => {\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value: T) => {\n\t\t\t\tobserver.next(convert(value, index++));\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesObserver } from '../observable/hermes.observer';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesDistinctUntilChanged<T>(compareFn?: (one: T, two: T) => boolean): HermesOperatorFunction<T, T> {\n\n\tconst compare = compareFn ? compareFn : defaultCompareFn;\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<T>((observer: HermesObserver<any>) => {\n\n\t\t\tlet previousValue: T = null;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value: T) => {\n\n\t\t\t\tif (previousValue === null || !compare(previousValue, value)) {\n\t\t\t\t\tpreviousValue = value\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n\nfunction defaultCompareFn<T>(a: T, b: T): boolean {\n\treturn a === b;\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\n\nexport class HermesBehaviorSubject<T> extends HermesSubject<T> {\n\n\tprivate lastValue: T;\n\n\tconstructor(defaultValue: T) {\n\t\tsuper();\n\t\tthis.lastValue = defaultValue;\n\t}\n\n\tnext(value: T) {\n\t\tthis.lastValue = value;\n\t\tsuper.next(value);\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tconst subscription = super.subscribe(arguments[0], arguments[1], arguments[2]);\n\n\t\tsuper.next(this.lastValue);\n\n\t\treturn subscription;\n\t}\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesSubscription } from '../subscription/hermes.subscription';\nimport { HermesSubscriber } from './subscriber/hermes.subscriber';\n\nexport class HermesReplaySubject<T> extends HermesSubject<T> {\n\n\tprivate readonly values: Array<T> = [];\n\n\tconstructor(private readonly bufferSize: number = 1) {\n\t\tsuper();\n\t}\n\n\tnext(value: T) {\n\t\tthis.values.push(value);\n\t\tif (this.bufferSize < this.values.length) {\n\t\t\tthis.values.shift();\n\t\t}\n\t\tsuper.next(value);\n\t}\n\n\tsubscribe(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscription;\n\tsubscribe(\n\t\tsubscriber: HermesSubscriber<T>\n\t): HermesSubscription;\n\tsubscribe(\n\t\targ: any\n\t): HermesSubscription {\n\n\t\tlet subscriber: HermesSubscriber<T>;\n\n\t\tif (arg instanceof HermesSubscriber) {\n\t\t\tsubscriber = arg;\n\t\t} else {\n\t\t\tsubscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);\n\t\t}\n\n\t\tconst subscription = super.subscribe(subscriber);\n\n\t\tfor (const value of this.values) {\n\t\t\tsubscriber.next(value);\n\t\t}\n\n\t\treturn subscription;\n\t}\n\n}\n","import { HermesSubject } from './hermes.subject';\nimport { HermesBehaviorSubject } from './hermes.behavior-subject';\nimport { HermesReplaySubject } from './hermes.replay-subject';\n\nexport class HermesArchiveSubject<T> extends HermesSubject<T> {\n\n\tstatic of<T>(value?: T) {\n\t\tif (value !== undefined) {\n\t\t\treturn new HermesBehaviorSubject<T>(value);\n\t\t} else {\n\t\t\treturn new HermesReplaySubject<T>(1);\n\t\t}\n\t}\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n}\n","import { ReactiveService } from './reactive.service';\nimport { KeyMap } from './collections/key-map';\nimport { Optional } from './optional';\nimport { hermesFilter } from './stream/operator/hermes.filter';\nimport { hermesMap } from './stream/operator/hermes.map';\nimport { hermesDistinctUntilChanged } from './stream/operator/hermes.distinct-until-changed';\nimport { HermesArchiveSubject } from './stream/observable/hermes.archive-subject';\nimport { HermesObservable } from './stream/observable/hermes.observable';\nimport { hermesTake } from './stream/operator/hermes.take';\nimport { Key } from './collections/key';\n\n\nexport abstract class KeyArchive<K extends Key, T> extends ReactiveService {\n\n\tprivate readonly archive = new KeyMap<K, T>();\n\n\tprivate readonly archive$: HermesArchiveSubject<KeyMap<K, T>>;\n\n\tprivate defaultValue: Optional<T> = Optional.empty();\n\n\tprotected constructor(defaultValue?: T) {\n\t\tsuper();\n\n\t\tthis.archive$ = HermesArchiveSubject.of();\n\n\t\tif (defaultValue !== undefined && defaultValue !== null) {\n\t\t\tthis.defaultValue = Optional.of(defaultValue);\n\t\t}\n\t}\n\n\ton(key: K): HermesObservable<T> {\n\n\t\tthis.tryToInitDefault(key);\n\n\t\treturn this.archive$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter(() => this.isNotStopped()),\n\t\t\t\t\t   hermesMap((map: KeyMap<K, T>) => {\n\t\t\t\t\t\t   return map.get(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((value: Optional<T>) => value.isPresent()),\n\t\t\t\t\t   hermesMap((value: Optional<T>) => value.getValueOrNullOrThrowError()),\n\t\t\t\t\t   hermesDistinctUntilChanged(this.equals),\n\t\t\t\t\t   this.hermesTakeUntil()\n\t\t\t\t   );\n\t}\n\n\tonce(key: K): HermesObservable<T> {\n\n\t\treturn this.on(key)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tget(key: K): Optional<T> {\n\n\t\tthis.tryToInitDefault(key);\n\n\t\treturn this.archive.get(key);\n\t}\n\n\tnext(key: K, value: T): void {\n\t\tthis.archive.set(key, value);\n\t\tthis.archive$.next(this.archive);\n\t}\n\n\tprotected equals(a: T, b: T): boolean {\n\t\treturn a === b;\n\t}\n\n\tprotected createDefaultValue(defaultValue: T): T {\n\t\treturn defaultValue;\n\t}\n\n\tprivate tryToInitDefault(key: K): void {\n\t\tthis.defaultValue\n\t\t\t.ifPresent((value) => {\n\n\t\t\t\tif (!this.archive.has(key)) {\n\t\t\t\t\tthis.next(key, value);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '../core/domain/tactical/aggregate/aggregate-id';\nimport { KeyArchive } from './key.archive';\n\n\nexport abstract class AggregateArchive<T> extends KeyArchive<AggregateId, T> {\n\n\tprotected constructor(defaultValue?: T) {\n\t\tsuper(defaultValue);\n\t}\n\n}\n","import { DomainEventHandler } from './domain-event.handler';\nimport { DomainEventType } from './domain-event-type';\nimport { AggregateArchive } from '../../../../common/aggregate.archive';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\n\n\nexport abstract class EventDrivenRepository<I extends AggregateId, E extends DomainEvent<I>, V>\n\textends AggregateArchive<V> implements DomainEventHandler<I, E> {\n\n\tprotected constructor(defaultValues?: V) {\n\t\tsuper(defaultValues);\n\t}\n\n\tabstract forEvent(): DomainEventType<E>;\n\n\thandle(event: E): void {\n\t\tthis.next(event.getAggregateId(), event.getPayload());\n\t}\n}\n","import { ReadModelEntityId } from './read-model-entity-id';\n\nexport abstract class ReadModelEntity<T extends ReadModelEntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.entityId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.entityId;\n\t}\n}\n","export class ReadModelEntityId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelEntityId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n}\n","import { ReadModelRootId } from './read-model-root-id';\n\nexport abstract class ReadModelRoot<T extends ReadModelRootId> {\n\n\tprivate readonly rootId: T;\n\n\tprotected constructor(gui: T) {\n\t\tthis.rootId = gui;\n\t}\n\n\tgetId(): T {\n\t\treturn this.rootId;\n\t}\n\n}\n","import { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelRootId {\n\n\tprivate readonly uid: string;\n\n\tprotected constructor(uid: string) {\n\t\tthis.uid = uid;\n\t}\n\n\tabstract toAggregateId(): AggregateId;\n\n\ttoString(): string {\n\t\treturn this.uid;\n\t}\n\n\tgetId(): string {\n\t\treturn this.uid;\n\t}\n\n\tequals(entityId: ReadModelRootId): boolean {\n\t\treturn this.uid === entityId.getId();\n\t}\n\n}\n","import { DomainEvent } from '../../domain/event/domain-event';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\n\nimport { Reactive } from '../../../common/reactive';\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelRootRepository<I extends AggregateId> extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvents(\n\t\t\t\tthis.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<I>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subscribe(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subscribe(event: DomainEvent<I>): void;\n\n}\n","import { ReadModelRoot } from '../read-model-root';\n\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../read-model-root-id';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nexport abstract class ReadModelStore<I extends ReadModelRootId, R extends ReadModelRoot<I>> {\n\n\tabstract getById(readModelRootId: AggregateId): Optional<R>;\n\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../../domain/event/domain-event';\nimport { ReadModelRootId } from '../read/read-model-root-id';\nimport { DomainEventBus } from '../../domain/event/domain-event.bus';\nimport { ReactiveService } from '../../../common/reactive.service';\nimport { hermesFilter } from '../../../common/stream/operator/hermes.filter';\nimport { HermesObservable } from '../../../common/stream/observable/hermes.observable';\n\nexport abstract class EventRepository<R extends ReadModelRootId, I extends AggregateId> extends ReactiveService {\n\n\tprotected constructor(private readonly domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t}\n\n\tprotected onEvent(aggregateId: R, eventType: Type<DomainEvent<I>>): HermesObservable<DomainEvent<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvents([\n\t\t\t\t\t\t   eventType as any\n\t\t\t\t\t   ]\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<AggregateId>) => event.getAggregateId().toString() === aggregateId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { EntityId } from './entity.id';\n\nexport abstract class Entity<T extends EntityId> {\n\n\tprivate readonly entityId: T;\n\n\tprotected constructor(id: T) {\n\t\tthis.entityId = id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.entityId;\n\t}\n\n\tequals(entity: Entity<T>): boolean {\n\t\treturn this.entityId.equals(entity.getId());\n\t}\n\n}\n","import { HermesId } from './hermes.id';\n\nexport abstract class EntityId<T = string> extends HermesId<T> {\n\n}\n","export function ValueObject(target: Function) {\n}\n\nexport function DomainObject(target: Function) {\n}\n\nexport function ReadModelObject(target: Function) {\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class DomainModule {\n\n\tprotected constructor() {\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class ApiModule {\n\n\t// protected constructor() {\n\t// }\n\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule()\nexport abstract class FeatureModule {\n\n\t// protected constructor() {\n\t// }\n\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesNever<T>(): HermesObservable<T> {\n\treturn new HermesObservable<T>((observer: HermesObserver<T>) => {\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesInterval(interval: number): HermesObservable<number> {\n\n\tlet counter = 0;\n\n\treturn new HermesObservable<number>((observer: HermesObserver<number>) => {\n\n\t\tconst id = setInterval(() => {\n\t\t\tobserver.next(counter++);\n\t\t}, interval);\n\n\t\treturn () => {\n\t\t\tclearInterval(id);\n\t\t\tobserver.complete();\n\t\t}\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesObserver } from '../hermes.observer';\n\nexport function hermesTimer(time: number): HermesObservable<number> {\n\n\treturn new HermesObservable<number>((observer: HermesObserver<number>) => {\n\n\t\tconst id = setTimeout(() => {\n\t\t\tobserver.next(0);\n\t\t}, time);\n\n\t\treturn () => {\n\t\t\tclearTimeout(id);\n\t\t\tobserver.complete();\n\t\t}\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\n\ntype EventType = string;\n\nexport function hermesFromEvent(element: HTMLElement, type: EventType): HermesObservable<any> {\n\n\treturn new HermesObservable<any>((observer) => {\n\n\t\tconst listener = (event: Event) => {\n\t\t\tobserver.next(event);\n\t\t};\n\n\t\telement.addEventListener(type, listener);\n\n\t\treturn () => {\n\t\t\telement.removeEventListener(type, listener);\n\t\t};\n\t});\n}\n","import { HermesSubscriber } from './hermes.subscriber';\n\nexport class HermesSingleSubscriber<T> extends HermesSubscriber<T> {\n\n\tnext(value: T): void {\n\n\t\tif (this.isCompleted()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst observer = this.getObserver();\n\n\t\tif (observer && observer.next) {\n\t\t\tobserver.next(value);\n\t\t\tthis.complete();\n\t\t}\n\t}\n\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesSubscriber } from '../subscriber/hermes.subscriber';\nimport { HermesSingleSubscriber } from '../subscriber/hermes.single-subscriber';\n\n\nexport class HermesSingle<T> extends HermesObservable<T> {\n\n\tprotected createSubscriber(\n\t\tnext?: (value: T) => void,\n\t\terror?: (error: any) => void,\n\t\tcomplete?: () => void\n\t): HermesSubscriber<T> {\n\n\t\treturn new HermesSingleSubscriber({\n\t\t\tnext,\n\t\t\terror,\n\t\t\tcomplete\n\t\t});\n\t}\n}\n","import { HermesObservable } from '../hermes.observable';\nimport { HermesSubscriber } from '../subscriber/hermes.subscriber';\nimport { HermesSingle } from './hermes.single';\n\nexport function singleFromObservable<T>(source: HermesObservable<T>): HermesSingle<T> {\n\n\treturn new HermesSingle<T>((observer) => {\n\n\t\tconst subscriber = new HermesSubscriber({\n\t\t\tnext: (value: T) => observer.next(value),\n\t\t\terror: (error: any) => observer.error(error),\n\t\t\tcomplete: () => {\n\t\t\t}\n\t\t});\n\n\t\tconst subscription = source.subscribe(\n\t\t\tsubscriber\n\t\t);\n\n\t\treturn subscription.getFinalize();\n\t});\n}\n","import { HermesObservable } from '../hermes.observable';\n\nexport function hermesThrowError<T>(error: any): HermesObservable<T> {\n\n\treturn new HermesObservable<T>(observer => {\n\t\tobserver.error(error);\n\t});\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesSkip<T>(valuesNumber: number): HermesOperatorFunction<T, T> {\n\n\treturn (source) => {\n\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tlet index = 0;\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\tif (index >= valuesNumber) {\n\t\t\t\t\tobserver.next(value);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { HermesSubscriber } from '../observable/subscriber/hermes.subscriber';\nimport { subscriberForOperator } from './operator-utils';\nimport { HermesObserver } from '../observable/hermes.observer';\n\n\nexport function hermesSwitchMap<T, R>(operation: (value: T) => HermesObservable<R>): HermesOperatorFunction<T, R> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<R>((observer: HermesObserver<any>) => {\n\n\t\t\tlet isOuterCompleted = false;\n\t\t\tlet innerSubscriber: HermesSubscriber<T> | null = null;\n\n\t\t\tconst tryToComplete = function() {\n\t\t\t\tif (isOuterCompleted && !innerSubscriber) {\n\t\t\t\t\tobserver.complete();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst outerSubscriber = subscriberForOperator<T>(\n\t\t\t\tobserver,\n\t\t\t\t(v: T) => {\n\n\t\t\t\t\tif (innerSubscriber) {\n\t\t\t\t\t\tinnerSubscriber.unsubscribe();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst subscriber = new HermesSubscriber({\n\t\t\t\t\t\tnext: (v2: any) => observer.next(v2),\n\t\t\t\t\t\terror: (e: any) => observer.error(e),\n\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\tinnerSubscriber = null;\n\t\t\t\t\t\t\ttryToComplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tinnerSubscriber = subscriber;\n\n\t\t\t\t\tconst innerSubscription = operation(v).subscribe(\n\t\t\t\t\t\tsubscriber\n\t\t\t\t\t);\n\n\t\t\t\t\treturn innerSubscription.getFinalize();\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tisOuterCompleted = true;\n\t\t\t\t\ttryToComplete();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn source.subscribe(outerSubscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\nexport function hermesTap<T>(operation: (value: T) => void): HermesOperatorFunction<T, T> {\n\treturn (source) => {\n\t\treturn new HermesObservable(observer => {\n\n\t\t\tconst subscriber = subscriberForOperator(observer, (value) => {\n\t\t\t\toperation(value);\n\t\t\t\tobserver.next(value);\n\t\t\t});\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable, HermesOperatorFunction } from '../observable/hermes.observable';\nimport { subscriberForOperator } from './operator-utils';\n\n\nexport function hermesToArray<T>(): HermesOperatorFunction<T, Array<T>> {\n\n\treturn (source: HermesObservable<T>) => {\n\t\treturn new HermesObservable<Array<T>>((observer) => {\n\n\t\t\tconst values: Array<T> = [];\n\n\t\t\tconst subscriber =\n\t\t\t\tsubscriberForOperator<any>(\n\t\t\t\t\tobserver,\n\t\t\t\t\t(value: T) => {\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (values.length > 0) {\n\t\t\t\t\t\t\tobserver.next(values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\treturn source.subscribe(subscriber).getFinalize();\n\t\t});\n\t};\n}\n","import { HermesObservable } from '../../common/stream/observable/hermes.observable';\nimport { Observable } from 'rxjs';\n\nexport function fromRxJsObservable<T>(source$: Observable<T>): HermesObservable<T> {\n\treturn new HermesObservable((observer) => {\n\t\tconst subscription = source$.subscribe(\n\t\t\t(value: T) => observer.next(value),\n\t\t\t(error: any) => observer.error(error),\n\t\t\t() => observer.complete()\n\t\t);\n\t\treturn () => subscription.unsubscribe();\n\t});\n}\n","import { HermesArchiveSubject } from './stream/observable/hermes.archive-subject';\nimport { HermesObservable } from './stream/observable/hermes.observable';\nimport { hermesDistinctUntilChanged } from './stream/operator/hermes.distinct-until-changed';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: HermesArchiveSubject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tthis.archive$ = HermesArchiveSubject.of(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.archive$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesDistinctUntilChanged(this.compare)\n\t\t\t\t   );\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n\tcompare(one: T, two: T): boolean {\n\t\treturn one === two;\n\t}\n}\n","import { ReadModelRootId } from '../../api/read/read-model-root-id';\n\nexport abstract class PersistAnemia<I extends ReadModelRootId> {\n\n\tprivate readonly readModelRootId: I;\n\n\tprotected constructor(uid: I) {\n\t\tthis.readModelRootId = uid;\n\t}\n\n\tgetReadModelRootId(): I {\n\t\treturn this.readModelRootId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.getReadModelRootId().toString();\n\t}\n\n}\n","import { PersistAnemia } from './persist-anemia';\nimport { Optional } from '../../../common/optional';\nimport { ReadModelRootId } from '../../api/read/read-model-root-id';\nimport { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\n\n\nexport abstract class PersistStateStore<I extends ReadModelRootId, A extends PersistAnemia<I>> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(anemia: A): void {\n\t\tthis.state.set(anemia.getId(), anemia);\n\t}\n\n\tsetMany(anemias: Array<A>): void {\n\t\tanemias.forEach((anemia: A) => {\n\t\t\tthis.set(anemia);\n\t\t});\n\t}\n\n\tget(aggregateId: AggregateId): Optional<A> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<A> {\n\t\treturn Array.from(this.state.values());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n}\n","import { ReadModelRoot } from '../../../api/read/read-model-root';\nimport { ReadModelStore } from '../../../api/read/store/read-model.store';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\n\nexport abstract class PersistReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tA extends PersistAnemia<I>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<I, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(anemia: A): R;\n\n\tgetById(aggregateId: AggregateId): Optional<R> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tgetAll(): Array<R> {\n\t\treturn this.getAllValues();\n\t}\n\n\tprivate getAllValues(): Array<R> {\n\t\treturn this.stateStore\n\t\t\t\t   .getAll()\n\t\t\t\t   .map((anemia: A) => this.toReadModel(anemia));\n\t}\n\n\tprivate getValue(aggregateId: AggregateId): Optional<R> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.toReadModel);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { PersistAnemia } from '../persist-anemia';\nimport { PersistStateStore } from '../persist-state.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\n\n\nexport abstract class PersistAggregateStore<I extends AggregateId, D extends AggregateRoot<I>, A extends PersistAnemia<ReadModelRootId>>\n\textends AggregateStore<I, D> {\n\n\tprotected constructor(private readonly stateStore: PersistStateStore<any, A>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tabstract toAnemia(aggregate: D): A;\n\n\tabstract fromAnemia(anemia: A): D;\n\n\tsave(aggregate: D): void {\n\t\tthis.saveValue(aggregate);\n\t}\n\n\tfindById(aggregateId: I): Optional<D> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate saveValue(aggregate: D): void {\n\n\t\tconst anemia = this.toAnemia(aggregate);\n\n\t\tthis.stateStore.set(anemia);\n\t}\n\n\tprivate getValue(aggregateId: I): Optional<D> {\n\t\tconst optAnemia = this.stateStore.get(aggregateId);\n\n\t\treturn optAnemia.map(this.fromAnemia);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\nimport { AggregateStore } from '../../../domain/command/store/aggregate.store';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\n\nimport { InMemoryStore } from '../in-memory.store';\n\nimport { Optional } from '../../../../common/optional';\n\nexport abstract class InMemoryAggregateStore<I extends AggregateId, T extends AggregateRoot<I>> extends AggregateStore<I, T> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<I, T>,\n\t\t\t\t\t\t  private readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\t\tthis.aggregateStoreRegister.register(this);\n\t}\n\n\tsave(aggregate: T): void;\n\tsave(aggregates: Array<T>): void;\n\tsave(arg: T | Array<T>): void {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\targ.forEach((aggregate: T) => {\n\t\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t\t});\n\t\t} else {\n\t\t\tconst aggregate = arg;\n\n\t\t\tthis.inMemoryStore.set(aggregate);\n\t\t}\n\t}\n\n\tfindById(aggregateId: I): Optional<T> {\n\n\t\tconst optAggregate = this.inMemoryStore.get(aggregateId);\n\n\t\toptAggregate.ifPresent((a) => a.clearEvents());\n\n\t\treturn optAggregate;\n\t}\n\n\tremove(aggregateId: I): void {\n\t\tthis.inMemoryStore.delete(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../../domain/tactical/aggregate/aggregate-root';\n\nimport { ReadModelRoot } from '../../../api/read/read-model-root';\n\nimport { ReadModelStore } from '../../../api/read/store/read-model.store';\n\nimport { InMemoryStore } from '../in-memory.store';\nimport { Optional } from '../../../../common/optional';\nimport { ReadModelRootId } from '../../../api/read/read-model-root-id';\n\n\nexport abstract class InMemoryReadModelStore<I extends ReadModelRootId,\n\tR extends ReadModelRoot<I>,\n\tB extends AggregateId,\n\tA extends AggregateRoot<B>> extends ReadModelStore<I, R> {\n\n\tprotected constructor(private readonly inMemoryStore: InMemoryStore<B, A>) {\n\t\tsuper();\n\t}\n\n\tabstract toReadModel(aggregate: A): R;\n\n\tgetById(aggregateId: B): Optional<R> {\n\t\treturn this.getValue(aggregateId);\n\t}\n\n\tprivate getValue(aggregateId: B): Optional<R> {\n\n\t\tconst optAggregate: Optional<A> = this.inMemoryStore.get(aggregateId);\n\n\t\treturn optAggregate.map(this.toReadModel.bind(this));\n\t}\n\n}\n","import { AggregateId } from '../../domain/tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../domain/tactical/aggregate/aggregate-root';\nimport { Optional } from '../../../common/optional';\n\nexport abstract class InMemoryStore<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly state: Map<string, A> = new Map();\n\n\tset(aggregate: A): void {\n\t\tthis.state.set(aggregate.getId().toString(), aggregate);\n\t}\n\n\tsetMany(aggregates: Array<A>): void {\n\t\taggregates.forEach((aggregate: A) => {\n\t\t\tthis.set(aggregate);\n\t\t});\n\t}\n\n\tget(aggregateId: I): Optional<A> {\n\t\treturn Optional.of(this.state.get(aggregateId.toString()));\n\t}\n\n\tgetAll(): Array<Optional<A>> {\n\t\treturn Array.from(this.state.values()).map(v => Optional.of(v));\n\t}\n\n\thas(aggregateId: I): boolean {\n\t\treturn this.state.has(aggregateId.toString());\n\t}\n\n\tdelete(aggregateId: I): void {\n\t\tthis.state.delete(aggregateId.toString());\n\t}\n\n\tclear(): void {\n\t\tthis.state.clear();\n\t}\n\n}\n","export const COMMAND_LOGGER_ENABLED = 'GUI - COMMAND_LOGGER_ENABLED';\nexport const EVENT_LOGGER_ENABLED = 'GUI - EVENT_LOGGER_ENABLED';\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { CommandBus } from '../../../domain/command/command.bus';\nimport { Command } from '../../../domain/command/command';\nimport { CommandLogger } from '../../../domain/command/command.logger';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { hermesFilter } from '../../../../common/stream/operator/hermes.filter';\nimport { hermesTakeUntil } from '../../../../common/stream/operator/hermes.take-until';\nimport { HermesSubject } from '../../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class ConsoleCommandLogger extends CommandLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor(commandBus: CommandBus) {\n\t\tsuper();\n\n\t\tcommandBus\n\t\t\t.pipe(\n\t\t\t\thermesFilter(() => this.enabled),\n\t\t\t\thermesTakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((command: Command<AggregateId>) => {\n\t\t\t\tthis.log(command);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(command: Command<AggregateId>): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(command.toString(), command);\n\t}\n\n}\n","import { CommandLogger } from '../../../domain/command/command.logger';\nimport { Command } from '../../../domain/command/command';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\n\nexport class NoopCommandLogger extends CommandLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprotected print(command: Command<AggregateId>): void {\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEventBus } from '../../../domain/event/domain-event.bus';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateStoreRegister } from '../../../domain/command/store/aggregate-store.register';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\nimport { hermesFilter } from '../../../../common/stream/operator/hermes.filter';\nimport { hermesTakeUntil } from '../../../../common/stream/operator/hermes.take-until';\nimport { HermesSubject } from '../../../../common/stream/observable/hermes.subject';\n\n\n@Injectable()\nexport class ConsoleEventLogger extends DomainEventLogger implements OnDestroy {\n\n\tprivate enabled = false;\n\n\tprivate unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor(eventBus: DomainEventBus,\n\t\t\t\tprivate readonly aggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper();\n\n\t\teventBus\n\t\t\t.pipe(\n\t\t\t\thermesFilter(() => this.enabled),\n\t\t\t\thermesTakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((domainEvent: DomainEvent<AggregateId>) => {\n\t\t\t\tthis.log(domainEvent);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tstart(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tstop(): void {\n\t\tthis.enabled = false;\n\t}\n\n\tprotected print(domainEvent: DomainEvent<AggregateId>): void {\n\t\tconst aggregateId = domainEvent.getAggregateId(),\n\t\t\taggregates = this.aggregateStoreRegister.captureAggregatesSnapshot(aggregateId);\n\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(domainEvent.toString(), domainEvent, aggregates);\n\t}\n\n}\n","import { DomainEventLogger } from '../../../domain/event/domain-event.logger';\nimport { DomainEvent } from '../../../domain/event/domain-event';\nimport { AggregateId } from '../../../domain/tactical/aggregate/aggregate-id';\n\nexport class NoopEventLogger extends DomainEventLogger {\n\n\tstart(): void {\n\t}\n\n\tstop(): void {\n\t}\n\n\tprint(event: DomainEvent<AggregateId>): void {\n\t}\n\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { CommandLogger } from '../domain/command/command.logger';\n\n\n@Injectable()\nexport class HermesLoggersInitializer {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate commandLogger: CommandLogger,\n\t\t\t\tprivate eventLogger: DomainEventLogger) {\n\t}\n\n\tstart(): void {\n\t\tthis.loggersStart();\n\t}\n\n\tstop(): void {\n\t\tthis.loggersStop();\n\t}\n\n\tprivate loggersStart(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.start();\n\t\t\tthis.eventLogger.start();\n\t\t}\n\t}\n\n\tprivate loggersStop(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.commandLogger.stop();\n\t\t\tthis.eventLogger.stop();\n\t\t}\n\t}\n\n}\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { CreateAggregateCommandHandler } from './create-aggregate.command-handler';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../config/define';\nimport { AggregateFactory } from '../../tactical/aggregate/aggregate-factory';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { CreateAggregateCommand } from './create-aggregate.command';\nimport { DomainEventPublisher } from '../../event/domain-event.publisher';\n\n\nexport function createAggregateCommandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand>(\n\tcreateAggregateCommandHandler: CreateAggregateCommandHandler<A, C>,\n\tfactoryArchive: AggregateFactoryArchive<I, A>, aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\taggregateName: string, domainEventPublisher: DomainEventPublisher\n): CreateAggregateCommandHandlerImpl<I, A, C> {\n\n\treturn new CreateAggregateCommandHandlerImpl<I, A, C>(\n\t\tcreateAggregateCommandHandler,\n\t\tfactoryArchive,\n\t\taggregateRepositoryArchive,\n\t\taggregateName,\n\t\tdomainEventPublisher\n\t);\n}\n\nexport class CreateAggregateCommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends CreateAggregateCommand> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly createAggregateCommandHandler: CreateAggregateCommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\thandleCommand(command: C) {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optFactory = this.aggregateFactoryArchive.get(this.aggregateType);\n\n\t\toptFactory.ifPresent((factory: AggregateFactory<I, A>) => {\n\n\t\t\tconst aggregate = factory.create(aggregateId);\n\n\t\t\tconst type = aggregate.getType(),\n\t\t\t\tcreateCommandConstructor = aggregate.createEvent();\n\n\t\t\tconst createCommand = new createCommandConstructor(aggregateId, type);\n\n\t\t\taggregate.addEvent(createCommand);\n\n\t\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\t\trepo.save(aggregate);\n\n\t\t\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t\t\t});\n\t\t});\n\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.createAggregateCommandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (this.createAggregateCommandHandler.forCommand() as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('CreateAggregateCommandHandlerImpl constructor out of arguments');\n\t\t}\n\t}\n\n}\n","/**\n * ngc for grid package for some reasons doesn't allow to use injection token\n */\nexport const CREATE_AGGREGATE_COMMAND_HANDLERS = 'HERMES - CREATE_AGGREGATE_COMMAND_HANDLERS';\n","import { Provider } from '@angular/core';\n\nimport { AggregateFactory } from '../../tactical/aggregate/aggregate-factory';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Optional } from '../../../../common/optional';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../create-aggregate/create-aggregate.command-handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Command } from '../command';\n\n\nexport class AggregateFactoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateFactory<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, factory: AggregateFactory<I, A>): void {\n\n\t\tthis.map.set(key, factory);\n\t}\n\n\tget(key: string): Optional<AggregateFactory<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n\n\thas(key: string): boolean {\n\t\treturn this.map.has(key);\n\t}\n}\n\nexport class AggregateRepositoryArchive<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tprivate readonly map = new Map<string, AggregateRepository<I, A>>();\n\n\tconstructor() {\n\t}\n\n\tadd(key: string, repository: AggregateRepository<I, A>): void {\n\n\t\tthis.map.set(key, repository);\n\t}\n\n\tget(key: string): Optional<AggregateRepository<I, A>> {\n\t\treturn Optional.of(this.map.get(key));\n\t}\n\n\thas(key: string): boolean {\n\t\treturn this.map.has(key);\n\t}\n}\n\nexport interface AggregateConfig<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> {\n\n\trepository: AggregateRepository<I, A>;\n\n\tfactory: AggregateFactory<I, A>;\n\n\tkey: string;\n\n\tcreateHandler: CreateAggregateCommandHandler<A, C>;\n\n\tcommandHandlers: Array<Provider>\n\n}\n","export const aggregateDefinitionToken = 'Hermes - aggregateDefinitionToken';\n","import { NgModule, OnDestroy } from '@angular/core';\n\n@NgModule({})\nexport class HermesDomainModule implements OnDestroy {\n\n\tngOnDestroy() {\n\t}\n\n}\n","export const COMMAND_HANDLERS = 'HERMES - COMMAND_HANDLERS_TOKEN';\n","import { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Command } from '../command';\nimport { AggregateRepositoryArchive } from '../config/define';\nimport { AggregateRepository } from '../../tactical/aggregate/aggregate-repository';\nimport { CommandHandler } from './command.handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\n\n\nexport function commandHandlerFactory<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\tcommandHandler: CommandHandler<A, C>,\n\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\taggregateName: string\n): CommandHandlerImpl<I, A, C> {\n\treturn new CommandHandlerImpl<I, A, C>(commandHandler, aggregateRepositoryArchive, aggregateName);\n}\n\nexport class CommandHandlerImpl<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> {\n\n\tprivate readonly commandType: string;\n\n\tconstructor(private readonly commandHandler: CommandHandler<A, C>,\n\t\t\t\tprivate readonly aggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tprivate readonly aggregateType: string) {\n\t\tthis.commandType = this.createCommandInstance().getMessageType();\n\t}\n\n\tpublishDomainEvents(aggregate: A, command: C): void {\n\t\tthis.commandHandler.publish(aggregate, command);\n\t}\n\n\thandleCommand(command: C): void {\n\n\t\tconst aggregateId = command.getAggregateId() as I;\n\n\t\tconst optRepository = this.aggregateRepositoryArchive.get(this.aggregateType);\n\n\t\toptRepository.ifPresent((repo: AggregateRepository<I, A>) => {\n\n\t\t\tconst optAggregate = repo.findById(aggregateId);\n\n\t\t\toptAggregate.ifPresent((aggregate: A) => {\n\n\t\t\t\tthis.commandHandler.handle(aggregate, command);\n\n\t\t\t\tthis.publishDomainEvents(aggregate, command);\n\t\t\t});\n\t\t});\n\t}\n\n\tforCommand(command: C): boolean {\n\t\treturn this.commandType === command.getMessageType();\n\t}\n\n\tprivate createCommandInstance(): C {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = this.commandHandler.forCommand().constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (this.commandHandler.forCommand() as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('CommandHandlerImpl constructor out of arguments');\n\t\t}\n\t}\n\n}\n","import { DomainEventHandler } from './domain-event.handler';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\nimport { MultiDomainEventHandler } from './multi-domain-event.handler';\nimport { DomainEventType } from './domain-event-type';\n\n\nexport function domainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: DomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, [domainEventHandler.forEvent()]);\n}\n\n\nexport function multiDomainEventHandlerFactory<I extends AggregateId, E extends DomainEvent<I>>(\n\tdomainEventHandler: MultiDomainEventHandler<I, E>\n): DomainEventHandlerImpl<I, E> {\n\treturn new DomainEventHandlerImpl<I, E>(domainEventHandler, domainEventHandler.forEvents());\n}\n\n\nexport class DomainEventHandlerImpl<I extends AggregateId, E extends DomainEvent<I>> {\n\n\tprivate readonly eventTypes: Array<string>;\n\n\tconstructor(private readonly domainEventHandler: DomainEventHandler<I, E> | MultiDomainEventHandler<I, E>,\n\t\t\t\tprivate readonly events: Array<DomainEventType<E>>) {\n\t\tthis.eventTypes = this.createDomainEventTypes();\n\t}\n\n\thandleEvent(event: E): void {\n\t\tthis.domainEventHandler.handle(event);\n\t}\n\n\tforEvents(events: Array<E>): boolean {\n\t\treturn events.some((event: E) => {\n\t\t\treturn this.eventTypes.some((type: string) => {\n\t\t\t\treturn type === event.getMessageType();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate createDomainEventTypes(): Array<string> {\n\n\t\tconst types = [];\n\n\t\tfor (const event of this.events) {\n\t\t\tconst instance = this.createDomainEventInstance(event);\n\t\t\ttypes.push(instance.getMessageType());\n\t\t}\n\n\t\treturn types;\n\t}\n\n\tprivate createDomainEventInstance(eventType: DomainEventType<E>): E {\n\t\tconst args: Array<void> = [],\n\t\t\targumentLength = eventType.constructor.length;\n\n\t\targs.fill(undefined, 0, argumentLength);\n\n\t\tif (args.length === 0) {\n\t\t\treturn (new (eventType as any)());\n\t\t} else if (args.length === 1) {\n\t\t\treturn (new (eventType as any)(args[0]));\n\t\t} else if (args.length === 2) {\n\t\t\treturn (new (eventType as any)(args[0], args[1]));\n\t\t} else if (args.length === 3) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2]));\n\t\t} else if (args.length === 4) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2], args[3]));\n\t\t} else if (args.length === 5) {\n\t\t\treturn (new (eventType as any)(args[0], args[1], args[2], args[3], args[4]));\n\t\t} else {\n\t\t\tthrow new Error('DomainEventHandler constructor out of arguments');\n\t\t}\n\t}\n\n\n}\n","import { DomainEventHandlerImpl } from '../handler/domain-event-handler-impl';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { DomainEvent } from '../domain-event';\nimport { DomainEventBus } from '../domain-event.bus';\nimport { Reactive } from '../../../../common/reactive';\n\n\nexport class DomainEventHandlerInitializer<I extends AggregateId, E extends DomainEvent<I>> extends Reactive {\n\n\tinit(\n\t\teventHandlers: Array<DomainEventHandlerImpl<I, E>>,\n\t\tdomainEventBus: DomainEventBus\n\t): void {\n\n\t\tif (eventHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<DomainEventHandlerImpl<I, E>> = [];\n\n\t\t\teventHandlers.filter((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\tif (!set.has((handler as any).domainEventHandler)) {\n\t\t\t\t\tset.add((handler as any).domainEventHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: DomainEventHandlerImpl<I, E>) => {\n\t\t\t\tdomainEventBus\n\t\t\t\t\t.ofEventHandlers([handler])\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((event: E) => {\n\t\t\t\t\t\thandler.handleEvent(event);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered event handlers:', filteredHandlers.length)\n\t\t\t// console.log('Registered event handlers:', filteredHandlers)\n\t\t}\n\t}\n}\n","import { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Reactive } from '../../../../common/reactive';\nimport { CommandHandlerImpl } from '../handler/command-handler-impl';\nimport { CommandBus } from '../command.bus';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Command } from '../command';\nimport { CreateAggregateCommandHandlerImpl } from '../create-aggregate/create-aggregate.command-handler-impl';\n\n\nexport class CommandHandlerInitializer<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>> extends Reactive {\n\n\tregister(\n\t\tcommandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\tcommandBus: CommandBus\n\t): void {\n\n\t\tif (commandHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<CommandHandlerImpl<I, A, C>> = [];\n\n\t\t\tcommandHandlers.filter((handler: CommandHandlerImpl<I, A, C>) => {\n\t\t\t\tif (!set.has((handler as any).commandHandler)) {\n\t\t\t\t\tset.add((handler as any).commandHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: CommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCommandHandler(handler)\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered command handlers:' + filteredHandlers.length);\n\t\t\t// console.log('Registered command handlers:', filteredHandlers);\n\t\t}\n\n\t}\n\n\tregisterAggregateCommandHandlers(\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>,\n\t\tcommandBus: CommandBus\n\t) {\n\n\t\tif (aggregateCommandHandlers) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>> = [];\n\n\t\t\taggregateCommandHandlers.filter((handler: CreateAggregateCommandHandlerImpl<I, A, C>) => {\n\t\t\t\tif (!set.has((handler as any).createAggregateCommandHandler)) {\n\t\t\t\t\tset.add((handler as any).createAggregateCommandHandler);\n\t\t\t\t\tfilteredHandlers.push(handler);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredHandlers.forEach((handler: CreateAggregateCommandHandlerImpl<I, A, C>) => {\n\t\t\t\tcommandBus\n\t\t\t\t\t.ofCreateAggregateHandler(handler)\n\t\t\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t\t\t.subscribe((command: C) => {\n\t\t\t\t\t\thandler.handleCommand(command);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// console.log('Registered create command handlers:' + filteredHandlers.length);\n\t\t\t// console.log('Registered create command handlers:', filteredHandlers);\n\t\t}\n\t}\n\n}\n","import { AggregateDefinition } from './aggregate-definition';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from './define';\nimport { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { AggregateRoot } from '../../tactical/aggregate/aggregate-root';\nimport { Injector } from '@angular/core';\n\nexport class AggregateDefinitionInitializer<I extends AggregateId, A extends AggregateRoot<I>> {\n\n\tregister(\n\t\tdefinedAggregate: Array<AggregateDefinition<I, A>>,\n\t\tinjector: Injector,\n\t\taggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>\n\t): void {\n\n\t\tif (definedAggregate) {\n\n\t\t\tconst set = new Set();\n\t\t\tconst filteredDefinitions: Array<AggregateDefinition<I, A>> = [];\n\n\t\t\tdefinedAggregate.filter((def: AggregateDefinition<I, A>) => {\n\t\t\t\tif (!set.has(def.key)) {\n\t\t\t\t\tset.add(def.key);\n\t\t\t\t\tfilteredDefinitions.push(def);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfilteredDefinitions.forEach((def: AggregateDefinition<I, A>) => {\n\n\t\t\t\tconst factory = injector.get(def.factory),\n\t\t\t\t\trepository = injector.get(def.repository);\n\n\t\t\t\tif (!aggregateFactoryArchive.has(def.key)) {\n\t\t\t\t\taggregateFactoryArchive.add(def.key, factory);\n\t\t\t\t}\n\n\t\t\t\tif (!aggregateRepositoryArchive.has(def.key)) {\n\t\t\t\t\taggregateRepositoryArchive.add(def.key, repository);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// console.log('Registered aggregate definition:' + filteredDefinitions.length);\n\t\t\t// console.log('Registered aggregate definition:', filteredDefinitions);\n\t\t}\n\t}\n\n}\n","import { Inject, Injector, ModuleWithProviders, NgModule, OnDestroy, Optional, Provider, Type, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n/**\n * Command\n */\nimport { AggregateRoot } from '../domain/tactical/aggregate/aggregate-root';\nimport { Command } from '../domain/command/command';\nimport { CommandBus } from '../domain/command/command.bus';\nimport { CommandDispatcher } from '../domain/command/command.dispatcher';\nimport { CommandLogger } from '../domain/command/command.logger';\nimport { CommandStream } from '../domain/command/command.stream';\nimport { FILTERED_COMMAND_STREAM } from '../domain/command/filtered-command-stream';\nimport { AggregateStoreRegister } from '../domain/command/store/aggregate-store.register';\nimport { DomainEvent } from '../domain/event/domain-event';\nimport { DomainEventBus } from '../domain/event/domain-event.bus';\nimport { DomainEventPublisher } from '../domain/event/domain-event.publisher';\nimport { DomainEventLogger } from '../domain/event/domain-event.logger';\nimport { DomainEventStore } from '../domain/event/domain-event.store';\nimport { DomainEventStream } from '../domain/event/domain-event.stream';\n/**\n * APP\n */\nimport { HermesModuleConfig } from './hermes-module-config';\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED } from '../domain/hermes-tokens';\nimport { HermesApi } from './hermes-api';\n/**\n * Infrastructure\n */\nimport { ConsoleCommandLogger } from '../infrastructure/logger/command/console.command.logger';\nimport { NoopCommandLogger } from '../infrastructure/logger/command/noop.command.logger';\nimport { ConsoleEventLogger } from '../infrastructure/logger/event/console.event.logger';\nimport { NoopEventLogger } from '../infrastructure/logger/event/noop.event.logger';\nimport { RandomStringGenerator } from '../../common/random-string.generator';\nimport { HermesLoggersInitializer } from './hermes.loggers.initializer';\nimport {\n\tcreateAggregateCommandHandlerFactory,\n\tCreateAggregateCommandHandlerImpl\n} from '../domain/command/create-aggregate/create-aggregate.command-handler-impl';\nimport { CREATE_AGGREGATE_COMMAND_HANDLERS } from '../domain/command/create-aggregate/create-aggregate.command-handlers-token';\nimport { AggregateFactoryArchive, AggregateRepositoryArchive } from '../domain/command/config/define';\nimport { AggregateFactory } from '../domain/tactical/aggregate/aggregate-factory';\nimport { aggregateDefinitionToken } from '../domain/command/config/aggregate-definition.token';\nimport { AggregateDefinition } from '../domain/command/config/aggregate-definition';\nimport { AggregateRepository } from '../domain/tactical/aggregate/aggregate-repository';\nimport { CreateAggregateCommandHandler } from '../domain/command/create-aggregate/create-aggregate.command-handler';\nimport { HermesDomainModule } from './hermes.domain.module';\nimport { COMMAND_HANDLERS } from '../domain/command/handler/command-handlers';\nimport { commandHandlerFactory, CommandHandlerImpl } from '../domain/command/handler/command-handler-impl';\nimport { CommandHandler } from '../domain/command/handler/command.handler';\nimport { AggregateId } from '../domain/tactical/aggregate/aggregate-id';\nimport { Reactive } from '../../common/reactive';\nimport { domainEventHandlerFactory, DomainEventHandlerImpl, multiDomainEventHandlerFactory } from '../domain/event/handler/domain-event-handler-impl';\nimport { DOMAIN_EVENT_HANDLERS } from '../domain/event/handler/domain-event-handlers';\nimport { DomainEventHandler } from '../domain/event/handler/domain-event.handler';\nimport { MultiDomainEventHandler } from '../domain/event/handler/multi-domain-event.handler';\nimport { DomainEventHandlerInitializer } from '../domain/event/init/domain-event-handler.initializer';\nimport { CommandHandlerInitializer } from '../domain/command/init/command-handler.initializer';\nimport { AggregateDefinitionInitializer } from '../domain/command/config/aggregate-definition.initializer';\n\n\nconst providers = [\n\t{ provide: EVENT_LOGGER_ENABLED, useValue: true },\n\t{ provide: COMMAND_LOGGER_ENABLED, useValue: true },\n\t{ provide: CommandLogger, useFactory: commandLoggerFactory, deps: [COMMAND_LOGGER_ENABLED, ConsoleCommandLogger, NoopCommandLogger] },\n\t{ provide: DomainEventLogger, useFactory: eventLoggerFactory, deps: [EVENT_LOGGER_ENABLED, ConsoleEventLogger, NoopEventLogger] },\n\tConsoleCommandLogger,\n\tNoopCommandLogger,\n\tNoopEventLogger,\n\tConsoleEventLogger,\n\tHermesLoggersInitializer,\n\tAggregateFactoryArchive,\n\tAggregateRepositoryArchive,\n\tRandomStringGenerator,\n\n\t{ provide: FILTERED_COMMAND_STREAM, useExisting: CommandStream },\n\tCommandBus,\n\tCommandStream,\n\tCommandDispatcher,\n\tAggregateStoreRegister,\n\n\tDomainEventBus,\n\tDomainEventStream,\n\tDomainEventPublisher,\n\tDomainEventStore,\n\n\tHermesApi\n];\n\nexport function commandLoggerFactory(enabled: boolean, consoleCommandLogger: ConsoleCommandLogger, noopCommandLogger: NoopCommandLogger) {\n\n\tif (enabled) {\n\t\treturn consoleCommandLogger;\n\t} else {\n\t\treturn noopCommandLogger;\n\t}\n}\n\nexport function eventLoggerFactory(enabled: boolean, consoleEventLogger: ConsoleEventLogger, noopEventLogger: NoopEventLogger) {\n\n\tif (enabled) {\n\t\treturn consoleEventLogger;\n\t} else {\n\t\treturn noopEventLogger;\n\t}\n}\n\n@Injectable()\nexport class HermesBaseModule<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>, E extends DomainEvent<I>>\n\textends Reactive implements OnDestroy {\n\n\tprivate readonly aggregateDefinitionInitializer = new AggregateDefinitionInitializer();\n\n\tprivate readonly commandHandlerInitializer = new CommandHandlerInitializer();\n\n\tprivate readonly domainEventHandlerInitializer = new DomainEventHandlerInitializer();\n\n\tconstructor(@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandlerImpl<I, E>>,\n\t\t\t\t@Optional() @Inject(CREATE_AGGREGATE_COMMAND_HANDLERS) aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\t\t\t@Optional() @Inject(aggregateDefinitionToken) definedAggregate: Array<AggregateDefinition<I, A>>,\n\t\t\t\tinjector: Injector,\n\t\t\t\taggregateFactoryArchive: AggregateFactoryArchive<I, A>,\n\t\t\t\taggregateRepositoryArchive: AggregateRepositoryArchive<I, A>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tprivate hermesLoggersInitializer: HermesLoggersInitializer,\n\t\t\t\tprivate hermesApi: HermesApi) { // HermesApi initialization\n\t\tsuper();\n\n\t\tthis.hermesLoggersInitializer.start();\n\n\t\tthis.checkNullCommand(commandBus, commandHandlers, aggregateCommandHandlers);\n\t\tthis.checkCommandHandlerIsCollection(commandHandlers);\n\t\tthis.checkDomainEventHandlerIsCollection(eventHandlers);\n\n\n\t\tthis.aggregateDefinitionInitializer.register(definedAggregate, injector, aggregateFactoryArchive, aggregateRepositoryArchive);\n\t\tthis.commandHandlerInitializer.register(commandHandlers, commandBus);\n\t\tthis.commandHandlerInitializer.registerAggregateCommandHandlers(aggregateCommandHandlers, commandBus);\n\t\tthis.domainEventHandlerInitializer.init(eventHandlers, domainEventBus);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.hermesLoggersInitializer.stop();\n\t\tthis.commandHandlerInitializer.ngOnDestroy();\n\t\tthis.domainEventHandlerInitializer.ngOnDestroy();\n\t}\n\n\tprivate checkNullCommand(\n\t\tcommandBus: CommandBus,\n\t\tcommandHandlers: Array<CommandHandlerImpl<I, A, C>>,\n\t\taggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<I, A, C>>\n\t): void {\n\n\t\tcommandBus\n\t\t\t.ofNullHandler(commandHandlers, aggregateCommandHandlers)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((command: C) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(`Command ${command.toString()} was not intercepted by any CommandHandler.`);\n\t\t\t});\n\t}\n\n\tprivate checkCommandHandlerIsCollection(commandHandlers: Array<CommandHandlerImpl<I, A, C>>): void {\n\t\tif (commandHandlers && !Array.isArray(commandHandlers)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('You might provided commandHandler without specifying \"multi: true\".');\n\t\t}\n\t}\n\n\tprivate checkDomainEventHandlerIsCollection(eventHandlers: Array<DomainEventHandlerImpl<I, E>>): void {\n\t\tif (eventHandlers && !Array.isArray(eventHandlers)) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.warn('You might provided eventHandler without specifying \"multi: true\".');\n\t\t}\n\t}\n\n}\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: providers\n})\nexport class HermesModule extends HermesBaseModule<any, any, any, any> {\n\n\tstatic defineAggregate<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\taggregateKey: string,\n\t\tfactory: Type<AggregateFactory<I, A>>,\n\t\trepository: Type<AggregateRepository<I, A>>,\n\t\tcreateCommandHandler: Type<CreateAggregateCommandHandler<A, C>>,\n\t\tcommandHandlers: Array<Provider> = [],\n\t\tdomainEventHandlers: Array<Provider> = []): ModuleWithProviders<HermesDomainModule> {\n\t\treturn {\n\t\t\tngModule: HermesDomainModule,\n\t\t\tproviders: [{\n\t\t\t\tprovide: aggregateDefinitionToken,\n\t\t\t\tmulti: true,\n\t\t\t\tuseValue: {\n\t\t\t\t\tkey: aggregateKey,\n\t\t\t\t\tfactory: factory,\n\t\t\t\t\trepository: repository\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tprovide: aggregateKey,\n\t\t\t\tuseValue: aggregateKey\n\t\t\t},\n\t\t\t\tfactory,\n\t\t\t\trepository,\n\t\t\t\tHermesModule.registerCreateCommandHandler(createCommandHandler, aggregateKey),\n\t\t\t\tcommandHandlers,\n\t\t\t\tdomainEventHandlers\n\t\t\t]\n\t\t};\n\t}\n\n\tstatic withConfig(config: HermesModuleConfig = { loggers: false }): ModuleWithProviders<HermesModule> {\n\t\treturn {\n\t\t\tngModule: HermesModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic registerCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\tcommandHandlerType: Type<CommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: commandHandlerType,\n\t\t\t\tuseClass: commandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: COMMAND_HANDLERS,\n\t\t\t\tuseFactory: commandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcommandHandlerType,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<DomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: domainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tstatic registerMultiDomainEventHandler<I extends AggregateId, E extends DomainEvent<I>>(\n\t\tdomainEventHandlerType: Type<MultiDomainEventHandler<I, E>>\n\t): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: domainEventHandlerType,\n\t\t\t\tuseClass: domainEventHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\t\tuseFactory: multiDomainEventHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tdomainEventHandlerType\n\t\t\t\t]\n\t\t\t}];\n\t}\n\n\tconstructor(@Optional() @Inject(DOMAIN_EVENT_HANDLERS) eventHandlers: Array<DomainEventHandlerImpl<any, any>>,\n\t\t\t\t@Optional() @Inject(CREATE_AGGREGATE_COMMAND_HANDLERS) aggregateCommandHandlers: Array<CreateAggregateCommandHandlerImpl<any, any, any>>,\n\t\t\t\t@Optional() @Inject(COMMAND_HANDLERS) commandHandlers: Array<CommandHandlerImpl<any, any, any>>,\n\t\t\t\t@Optional() @Inject(aggregateDefinitionToken) definedAggregate: Array<AggregateDefinition<any, any>>,\n\t\t\t\tinjector: Injector,\n\t\t\t\taggregateFactoryArchive: AggregateFactoryArchive<any, any>,\n\t\t\t\taggregateRepositoryArchive: AggregateRepositoryArchive<any, any>,\n\t\t\t\tcommandBus: CommandBus,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\thermesLoggersInitializer: HermesLoggersInitializer,\n\t\t\t\thermesApi: HermesApi) { // HermesApi initialization\n\t\tsuper(\n\t\t\teventHandlers,\n\t\t\taggregateCommandHandlers,\n\t\t\tcommandHandlers,\n\t\t\tdefinedAggregate,\n\t\t\tinjector,\n\t\t\taggregateFactoryArchive,\n\t\t\taggregateRepositoryArchive,\n\t\t\tcommandBus,\n\t\t\tdomainEventBus,\n\t\t\thermesLoggersInitializer,\n\t\t\thermesApi\n\t\t);\n\t}\n\n\tprivate static registerCreateCommandHandler<I extends AggregateId, A extends AggregateRoot<I>, C extends Command<I>>(\n\t\tcreateCommandHandlerType: Type<CreateAggregateCommandHandler<A, C>>,\n\t\taggregateName: string): Array<Provider> {\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tprovide: createCommandHandlerType,\n\t\t\t\tuseClass: createCommandHandlerType\n\t\t\t}, {\n\t\t\t\tprovide: CREATE_AGGREGATE_COMMAND_HANDLERS,\n\t\t\t\tuseFactory: createAggregateCommandHandlerFactory,\n\t\t\t\tmulti: true,\n\t\t\t\tdeps: [\n\t\t\t\t\tcreateCommandHandlerType,\n\t\t\t\t\tAggregateFactoryArchive,\n\t\t\t\t\tAggregateRepositoryArchive,\n\t\t\t\t\taggregateName,\n\t\t\t\t\tDomainEventPublisher\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t}\n\n}\n","import { AggregateId } from '../core/domain/tactical/aggregate/aggregate-id';\n\nimport { AggregateEvent } from '../core/domain/tactical/aggregate/aggregate-event';\nimport { DomainEvent } from '../core/domain/event/domain-event';\nimport { HermesObservable } from '../common/stream/observable/hermes.observable';\n\ndeclare const expect: any;\ndeclare const it: any;\ndeclare const jest: any;\n\nexport function assertDomainEvents<I extends AggregateId>(actualEvents: ReadonlyArray<DomainEvent<I>>, expectedEvents: Array<DomainEvent<I>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length);\n\n\tfor (const actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: DomainEvent<I>) => {\n\t\t\treturn event.equalsByType(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t\texpect(actualEvent.equalsByType(expectedEvent)).toBeTruthy();\n\t\t// expect(actualEvent.aggregateId).toEqual(expectedEvent.aggregateId, 'Events aggregateId should be the same');\n\t\texpect(actualEvent.getPayload()).toEqual(expectedEvent.getPayload(), 'Events payload should be the same');\n\t}\n\n}\n\nexport function assertAggregateEvents<T extends AggregateId>(actualEvents: ReadonlyArray<AggregateEvent<T>>, expectedEvents: Array<AggregateEvent<T>>): void {\n\n\texpect(actualEvents.length).toEqual(expectedEvents.length, 'Aggregate events');\n\n\tfor (const actualEvent of actualEvents) {\n\n\t\tconst expectedEvent = expectedEvents.find((event: AggregateEvent<T>) => {\n\t\t\treturn event.equals(actualEvent);\n\t\t});\n\n\t\texpect(expectedEvent).toBeDefined();\n\t}\n}\n\nexport function testEventRepositoryIsEmptyOnStart<T>(createStream: () => HermesObservable<T>, desc: string): void {\n\n\tit('should be no ' + desc + ' events on start', () => {\n\n\t\texpect.assertions(3);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t() => nextFn(),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).not.toHaveBeenCalled();\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).not.toHaveBeenCalled();\n\t});\n}\n\nexport function testWarehouseDefaultValueOnStart<T>(createStream: () => HermesObservable<T>, defaultValue: T, desc: string): void {\n\n\tit('should have default value ' + desc, () => {\n\n\t\texpect.assertions(4);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t(value) => nextFn(value),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).toHaveBeenCalledWith(defaultValue);\n\t\texpect(nextFn).toHaveBeenCalledTimes(1);\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).not.toHaveBeenCalled();\n\t});\n}\n\nexport function testWarehouseDefaultValueOnStartOnce<T>(createStream: () => HermesObservable<T>, defaultValue: T, desc: string): void {\n\n\tit('should have default value ' + desc, () => {\n\n\t\texpect.assertions(4);\n\n\t\t// given\n\t\tconst nextFn = jest.fn(),\n\t\t\terrorFn = jest.fn(),\n\t\t\tcompleteFn = jest.fn();\n\n\t\t// when\n\t\tcreateStream()\n\t\t\t.subscribe(\n\t\t\t\t(value) => nextFn(value),\n\t\t\t\t(err: any) => errorFn(err),\n\t\t\t\t() => completeFn()\n\t\t\t);\n\n\t\t// then\n\t\texpect(nextFn).toHaveBeenCalledWith(defaultValue);\n\t\texpect(nextFn).toHaveBeenCalledTimes(1);\n\t\texpect(errorFn).not.toHaveBeenCalled();\n\t\texpect(completeFn).toHaveBeenCalledTimes(1);\n\t});\n}\n","import { AggregateId } from '../../tactical/aggregate/aggregate-id';\nimport { Command } from '../command';\n\nexport abstract class CreateAggregateCommand extends Command<AggregateId> {\n\n\tprotected constructor(aggregateId: AggregateId,\n\t\t\t\t\t\t  type: string) {\n\t\tsuper(aggregateId, type);\n\t}\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {KeyArchive as ɵh} from './common/key.archive';\nexport {HermesLoggersInitializer as ɵp} from './core/api/hermes.loggers.initializer';\nexport {HermesBaseModule as ɵc,commandLoggerFactory as ɵa,eventLoggerFactory as ɵb} from './core/api/hermes.module';\nexport {Logger as ɵd} from './core/api/logger/logger';\nexport {AggregateDefinition as ɵm} from './core/domain/command/config/aggregate-definition';\nexport {aggregateDefinitionToken as ɵl} from './core/domain/command/config/aggregate-definition.token';\nexport {AggregateFactoryArchive as ɵn,AggregateRepositoryArchive as ɵo} from './core/domain/command/config/define';\nexport {CreateAggregateCommandHandlerImpl as ɵba,createAggregateCommandHandlerFactory as ɵz} from './core/domain/command/create-aggregate/create-aggregate.command-handler-impl';\nexport {CREATE_AGGREGATE_COMMAND_HANDLERS as ɵj} from './core/domain/command/create-aggregate/create-aggregate.command-handlers-token';\nexport {FILTERED_COMMAND_STREAM as ɵf} from './core/domain/command/filtered-command-stream';\nexport {CommandHandlerImpl as ɵv,commandHandlerFactory as ɵu} from './core/domain/command/handler/command-handler-impl';\nexport {COMMAND_HANDLERS as ɵk} from './core/domain/command/handler/command-handlers';\nexport {DomainEventStore as ɵg} from './core/domain/event/domain-event.store';\nexport {DomainEventHandlerImpl as ɵy,domainEventHandlerFactory as ɵw,multiDomainEventHandlerFactory as ɵx} from './core/domain/event/handler/domain-event-handler-impl';\nexport {DOMAIN_EVENT_HANDLERS as ɵi} from './core/domain/event/handler/domain-event-handlers';\nexport {Message as ɵe} from './core/domain/message/message';\nexport {ConsoleCommandLogger as ɵq} from './core/infrastructure/logger/command/console.command.logger';\nexport {NoopCommandLogger as ɵr} from './core/infrastructure/logger/command/noop.command.logger';\nexport {ConsoleEventLogger as ɵs} from './core/infrastructure/logger/event/console.event.logger';\nexport {NoopEventLogger as ɵt} from './core/infrastructure/logger/event/noop.event.logger';"],"names":["Optional"],"mappings":"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"}