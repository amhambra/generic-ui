import { ReadModelStore } from '../../../api/read/store/read-model.store';
export class PersistReadModelStore extends ReadModelStore {
    stateStore;
    constructor(stateStore) {
        super();
        this.stateStore = stateStore;
    }
    getById(aggregateId) {
        return this.getValue(aggregateId);
    }
    getAll() {
        return this.getAllValues();
    }
    getAllValues() {
        return this.stateStore
            .getAll()
            .map((anemia) => this.toReadModel(anemia));
    }
    getValue(aggregateId) {
        const optAnemia = this.stateStore.get(aggregateId);
        return optAnemia.map(this.toReadModel);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc2lzdC5yZWFkLW1vZGVsLnN0b3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL2d1aS1oZXJtZXMvc3JjL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvcGVyc2lzdC9yZWFkL3BlcnNpc3QucmVhZC1tb2RlbC5zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFTMUUsTUFBTSxPQUFnQixxQkFFTyxTQUFRLGNBQW9CO0lBRWpCO0lBQXZDLFlBQXVDLFVBQW1DO1FBQ3pFLEtBQUssRUFBRSxDQUFDO1FBRDhCLGVBQVUsR0FBVixVQUFVLENBQXlCO0lBRTFFLENBQUM7SUFJRCxPQUFPLENBQUMsV0FBd0I7UUFDL0IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxNQUFNO1FBQ0wsT0FBTyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVPLFlBQVk7UUFDbkIsT0FBTyxJQUFJLENBQUMsVUFBVTthQUNoQixNQUFNLEVBQUU7YUFDUixHQUFHLENBQUMsQ0FBQyxNQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRU8sUUFBUSxDQUFDLFdBQXdCO1FBQ3hDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRW5ELE9BQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEMsQ0FBQztDQUVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhZE1vZGVsUm9vdCB9IGZyb20gJy4uLy4uLy4uL2FwaS9yZWFkL3JlYWQtbW9kZWwtcm9vdCc7XG5pbXBvcnQgeyBSZWFkTW9kZWxTdG9yZSB9IGZyb20gJy4uLy4uLy4uL2FwaS9yZWFkL3N0b3JlL3JlYWQtbW9kZWwuc3RvcmUnO1xuXG5pbXBvcnQgeyBQZXJzaXN0QW5lbWlhIH0gZnJvbSAnLi4vcGVyc2lzdC1hbmVtaWEnO1xuaW1wb3J0IHsgUGVyc2lzdFN0YXRlU3RvcmUgfSBmcm9tICcuLi9wZXJzaXN0LXN0YXRlLnN0b3JlJztcbmltcG9ydCB7IE9wdGlvbmFsIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tbW9uL29wdGlvbmFsJztcbmltcG9ydCB7IFJlYWRNb2RlbFJvb3RJZCB9IGZyb20gJy4uLy4uLy4uL2FwaS9yZWFkL3JlYWQtbW9kZWwtcm9vdC1pZCc7XG5pbXBvcnQgeyBBZ2dyZWdhdGVJZCB9IGZyb20gJy4uLy4uLy4uL2FwaS90YWN0aWNhbC9hZ2dyZWdhdGUvYWdncmVnYXRlLWlkJztcblxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUGVyc2lzdFJlYWRNb2RlbFN0b3JlPEkgZXh0ZW5kcyBSZWFkTW9kZWxSb290SWQsXG5cdFIgZXh0ZW5kcyBSZWFkTW9kZWxSb290PEk+LFxuXHRBIGV4dGVuZHMgUGVyc2lzdEFuZW1pYTxJPj4gZXh0ZW5kcyBSZWFkTW9kZWxTdG9yZTxJLCBSPiB7XG5cblx0cHJvdGVjdGVkIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgc3RhdGVTdG9yZTogUGVyc2lzdFN0YXRlU3RvcmU8SSwgQT4pIHtcblx0XHRzdXBlcigpO1xuXHR9XG5cblx0YWJzdHJhY3QgdG9SZWFkTW9kZWwoYW5lbWlhOiBBKTogUjtcblxuXHRnZXRCeUlkKGFnZ3JlZ2F0ZUlkOiBBZ2dyZWdhdGVJZCk6IE9wdGlvbmFsPFI+IHtcblx0XHRyZXR1cm4gdGhpcy5nZXRWYWx1ZShhZ2dyZWdhdGVJZCk7XG5cdH1cblxuXHRnZXRBbGwoKTogQXJyYXk8Uj4ge1xuXHRcdHJldHVybiB0aGlzLmdldEFsbFZhbHVlcygpO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXRBbGxWYWx1ZXMoKTogQXJyYXk8Uj4ge1xuXHRcdHJldHVybiB0aGlzLnN0YXRlU3RvcmVcblx0XHRcdFx0ICAgLmdldEFsbCgpXG5cdFx0XHRcdCAgIC5tYXAoKGFuZW1pYTogQSkgPT4gdGhpcy50b1JlYWRNb2RlbChhbmVtaWEpKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0VmFsdWUoYWdncmVnYXRlSWQ6IEFnZ3JlZ2F0ZUlkKTogT3B0aW9uYWw8Uj4ge1xuXHRcdGNvbnN0IG9wdEFuZW1pYSA9IHRoaXMuc3RhdGVTdG9yZS5nZXQoYWdncmVnYXRlSWQpO1xuXG5cdFx0cmV0dXJuIG9wdEFuZW1pYS5tYXAodGhpcy50b1JlYWRNb2RlbCk7XG5cdH1cblxufVxuIl19