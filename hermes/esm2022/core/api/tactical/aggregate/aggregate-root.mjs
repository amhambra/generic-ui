export class AggregateRoot {
    type;
    aggregateId;
    events;
    constructor(aggregateId, type) {
        this.type = type;
        this.aggregateId = aggregateId;
        this.events = [];
    }
    getId() {
        return this.aggregateId;
    }
    getType() {
        return this.type;
    }
    getEvents() {
        return this.events;
    }
    addEvent(args) {
        if (Array.isArray(args)) {
            for (const event of args) {
                this.events.push(event);
            }
        }
        else {
            this.events.push(args);
        }
    }
    clearEvents() {
        this.events.length = 0;
    }
    equals(aggregate) {
        return aggregate.getId().toString() === this.getId().toString();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdncmVnYXRlLXJvb3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvZ3VpLWhlcm1lcy9zcmMvY29yZS9hcGkvdGFjdGljYWwvYWdncmVnYXRlL2FnZ3JlZ2F0ZS1yb290LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE1BQU0sT0FBZ0IsYUFBYTtJQU9WO0lBTFAsV0FBVyxDQUFJO0lBRWYsTUFBTSxDQUEyQjtJQUVsRCxZQUFzQixXQUFjLEVBQ1osSUFBWTtRQUFaLFNBQUksR0FBSixJQUFJLENBQVE7UUFDbkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUlELEtBQUs7UUFDSixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDekIsQ0FBQztJQUVELE9BQU87UUFDTixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbEIsQ0FBQztJQUVELFNBQVM7UUFDUixPQUFPLElBQUksQ0FBQyxNQUEwQyxDQUFDO0lBQ3hELENBQUM7SUFJRCxRQUFRLENBQUMsSUFBa0Q7UUFFMUQsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3hCLEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxFQUFFO2dCQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN4QjtTQUNEO2FBQU07WUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUF5QixDQUFDLENBQUM7U0FDNUM7SUFDRixDQUFDO0lBRUQsV0FBVztRQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQsTUFBTSxDQUFDLFNBQTJCO1FBQ2pDLE9BQU8sU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLFFBQVEsRUFBRSxLQUFLLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNqRSxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZ2dyZWdhdGVFdmVudCB9IGZyb20gJy4vYWdncmVnYXRlLWV2ZW50JztcbmltcG9ydCB7IEFnZ3JlZ2F0ZUlkIH0gZnJvbSAnLi9hZ2dyZWdhdGUtaWQnO1xuaW1wb3J0IHsgQWdncmVnYXRlRXZlbnRUeXBlIH0gZnJvbSAnLi9hZ2dyZWdhdGUtZXZlbnQtdHlwZSc7XG5cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFnZ3JlZ2F0ZVJvb3Q8SSBleHRlbmRzIEFnZ3JlZ2F0ZUlkPiB7XG5cblx0cHJpdmF0ZSByZWFkb25seSBhZ2dyZWdhdGVJZDogSTtcblxuXHRwcml2YXRlIHJlYWRvbmx5IGV2ZW50czogQXJyYXk8QWdncmVnYXRlRXZlbnQ8ST4+O1xuXG5cdHByb3RlY3RlZCBjb25zdHJ1Y3RvcihhZ2dyZWdhdGVJZDogSSxcblx0XHRcdFx0XHRcdCAgcHJpdmF0ZSByZWFkb25seSB0eXBlOiBzdHJpbmcpIHtcblx0XHR0aGlzLmFnZ3JlZ2F0ZUlkID0gYWdncmVnYXRlSWQ7XG5cdFx0dGhpcy5ldmVudHMgPSBbXTtcblx0fVxuXG5cdGFic3RyYWN0IGNyZWF0ZUV2ZW50KCk6IEFnZ3JlZ2F0ZUV2ZW50VHlwZTxBZ2dyZWdhdGVFdmVudDxJPj47XG5cblx0Z2V0SWQoKTogSSB7XG5cdFx0cmV0dXJuIHRoaXMuYWdncmVnYXRlSWQ7XG5cdH1cblxuXHRnZXRUeXBlKCk6IHN0cmluZyB7XG5cdFx0cmV0dXJuIHRoaXMudHlwZTtcblx0fVxuXG5cdGdldEV2ZW50cygpOiBSZWFkb25seUFycmF5PEFnZ3JlZ2F0ZUV2ZW50PEk+PiB7XG5cdFx0cmV0dXJuIHRoaXMuZXZlbnRzIGFzIFJlYWRvbmx5QXJyYXk8QWdncmVnYXRlRXZlbnQ8ST4+O1xuXHR9XG5cblx0YWRkRXZlbnQoZXZlbnQ6IEFnZ3JlZ2F0ZUV2ZW50PEk+KTogdm9pZDtcblx0YWRkRXZlbnQoZXZlbnRzOiBBcnJheTxBZ2dyZWdhdGVFdmVudDxJPj4pOiB2b2lkO1xuXHRhZGRFdmVudChhcmdzOiBBZ2dyZWdhdGVFdmVudDxJPiB8IEFycmF5PEFnZ3JlZ2F0ZUV2ZW50PEk+Pik6IHZvaWQge1xuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkoYXJncykpIHtcblx0XHRcdGZvciAoY29uc3QgZXZlbnQgb2YgYXJncykge1xuXHRcdFx0XHR0aGlzLmV2ZW50cy5wdXNoKGV2ZW50KTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5ldmVudHMucHVzaChhcmdzIGFzIEFnZ3JlZ2F0ZUV2ZW50PEk+KTtcblx0XHR9XG5cdH1cblxuXHRjbGVhckV2ZW50cygpOiB2b2lkIHtcblx0XHR0aGlzLmV2ZW50cy5sZW5ndGggPSAwO1xuXHR9XG5cblx0ZXF1YWxzKGFnZ3JlZ2F0ZTogQWdncmVnYXRlUm9vdDxJPik6IGJvb2xlYW4ge1xuXHRcdHJldHVybiBhZ2dyZWdhdGUuZ2V0SWQoKS50b1N0cmluZygpID09PSB0aGlzLmdldElkKCkudG9TdHJpbmcoKTtcblx0fVxufVxuIl19