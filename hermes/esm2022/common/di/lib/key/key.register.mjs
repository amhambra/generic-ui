import { Key } from './key';
import { NotFoundKey } from './not-found-key';
export class KeyRegister {
    records = new Map();
    getKey(token) {
        const key = this.records.get(token);
        if (!key) {
            return new NotFoundKey(token);
        }
        return key;
    }
    getKeyAndTryRegister(token, provider) {
        if (!this.has(token)) {
            this.set(token, provider);
        }
        return this.getKey(token);
    }
    has(token) {
        return this.records.has(token);
    }
    set(token, _provider) {
        this.records.set(token, Key.from(token));
    }
    clear() {
        this.records.clear();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5LnJlZ2lzdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL2d1aS1oZXJtZXMvc3JjL2NvbW1vbi9kaS9saWIva2V5L2tleS5yZWdpc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBRzVCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUU5QyxNQUFNLE9BQU8sV0FBVztJQUVOLE9BQU8sR0FBRyxJQUFJLEdBQUcsRUFBd0IsQ0FBQztJQUUzRCxNQUFNLENBQUksS0FBZTtRQUN4QixNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVwQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1QsT0FBTyxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM5QjtRQUVELE9BQU8sR0FBRyxDQUFDO0lBQ1osQ0FBQztJQUVELG9CQUFvQixDQUFJLEtBQWUsRUFBRSxRQUF1QjtRQUUvRCxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztTQUMxQjtRQUVELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsR0FBRyxDQUFJLEtBQWU7UUFDckIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsR0FBRyxDQUFJLEtBQWUsRUFBRSxTQUF3QjtRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxLQUFLO1FBQ0osSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QixDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLZXkgfSBmcm9tICcuL2tleSc7XG5pbXBvcnQgeyBUb2tlbiB9IGZyb20gJy4uL3Rva2VuJztcbmltcG9ydCB7IENsYXNzUHJvdmlkZXIgfSBmcm9tICcuLi9wcm92aWRlci9jbGFzcy9jbGFzcy1wcm92aWRlcic7XG5pbXBvcnQgeyBOb3RGb3VuZEtleSB9IGZyb20gJy4vbm90LWZvdW5kLWtleSc7XG5cbmV4cG9ydCBjbGFzcyBLZXlSZWdpc3RlciB7XG5cblx0cHJpdmF0ZSByZWFkb25seSByZWNvcmRzID0gbmV3IE1hcDxUb2tlbjxhbnk+LCBLZXk8YW55Pj4oKTtcblxuXHRnZXRLZXk8VD4odG9rZW46IFRva2VuPFQ+KTogS2V5PFQ+IHtcblx0XHRjb25zdCBrZXkgPSB0aGlzLnJlY29yZHMuZ2V0KHRva2VuKTtcblxuXHRcdGlmICgha2V5KSB7XG5cdFx0XHRyZXR1cm4gbmV3IE5vdEZvdW5kS2V5KHRva2VuKTtcblx0XHR9XG5cblx0XHRyZXR1cm4ga2V5O1xuXHR9XG5cblx0Z2V0S2V5QW5kVHJ5UmVnaXN0ZXI8VD4odG9rZW46IFRva2VuPFQ+LCBwcm92aWRlcjogQ2xhc3NQcm92aWRlcik6IEtleTxUPiB7XG5cblx0XHRpZiAoIXRoaXMuaGFzKHRva2VuKSkge1xuXHRcdFx0dGhpcy5zZXQodG9rZW4sIHByb3ZpZGVyKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5nZXRLZXkodG9rZW4pO1xuXHR9XG5cblx0aGFzPFQ+KHRva2VuOiBUb2tlbjxUPik6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLnJlY29yZHMuaGFzKHRva2VuKTtcblx0fVxuXG5cdHNldDxUPih0b2tlbjogVG9rZW48VD4sIF9wcm92aWRlcjogQ2xhc3NQcm92aWRlcik6IHZvaWQge1xuXHRcdHRoaXMucmVjb3Jkcy5zZXQodG9rZW4sIEtleS5mcm9tKHRva2VuKSk7XG5cdH1cblxuXHRjbGVhcigpOiB2b2lkIHtcblx0XHR0aGlzLnJlY29yZHMuY2xlYXIoKTtcblx0fVxufVxuIl19