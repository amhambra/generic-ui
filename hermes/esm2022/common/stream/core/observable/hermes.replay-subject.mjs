import { HermesSubject } from './hermes.subject';
import { HermesSubscriber } from './subscriber/hermes.subscriber';
export class HermesReplaySubject extends HermesSubject {
    bufferSize;
    values = [];
    constructor(bufferSize = 1) {
        super();
        this.bufferSize = bufferSize;
    }
    pipe(...operations) {
        return super.pipe(...operations);
    }
    next(value) {
        this.values.push(value);
        if (this.bufferSize < this.values.length) {
            this.values.shift();
        }
        super.next(value);
    }
    subscribe() {
        let subscriber;
        if (arguments[0] instanceof HermesSubscriber) {
            subscriber = arguments[0];
        }
        else {
            subscriber = this.createSubscriber(arguments[0], arguments[1], arguments[2]);
        }
        const subscription = super.subscribe(subscriber);
        for (const value of this.values) {
            subscriber.next(value);
        }
        return subscription;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVybWVzLnJlcGxheS1zdWJqZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vYnVpbGQtY2xpL3Byb2plY3RzL2d1aS1oZXJtZXMvc3JjL2NvbW1vbi9zdHJlYW0vY29yZS9vYnNlcnZhYmxlL2hlcm1lcy5yZXBsYXktc3ViamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHbEUsTUFBTSxPQUFPLG1CQUF1QixTQUFRLGFBQWdCO0lBSTlCO0lBRlosTUFBTSxHQUFhLEVBQUUsQ0FBQztJQUV2QyxZQUE2QixhQUFxQixDQUFDO1FBQ2xELEtBQUssRUFBRSxDQUFDO1FBRG9CLGVBQVUsR0FBVixVQUFVLENBQVk7SUFFbkQsQ0FBQztJQUVRLElBQUksQ0FBQyxHQUFHLFVBQW1EO1FBQ25FLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLFVBQVUsQ0FBNkIsQ0FBQztJQUM5RCxDQUFDO0lBRVEsSUFBSSxDQUFDLEtBQVE7UUFDckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEIsSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFO1lBQ3pDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDcEI7UUFDRCxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25CLENBQUM7SUFVUSxTQUFTO1FBRWpCLElBQUksVUFBK0IsQ0FBQztRQUVwQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsWUFBWSxnQkFBZ0IsRUFBRTtZQUM3QyxVQUFVLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzFCO2FBQU07WUFDTixVQUFVLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0U7UUFFRCxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRWpELEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNoQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3ZCO1FBRUQsT0FBTyxZQUFZLENBQUM7SUFDckIsQ0FBQztDQUVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGVybWVzU3ViamVjdCB9IGZyb20gJy4vaGVybWVzLnN1YmplY3QnO1xuaW1wb3J0IHsgSGVybWVzU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vc3Vic2NyaXB0aW9uL2hlcm1lcy5zdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgSGVybWVzU3Vic2NyaWJlciB9IGZyb20gJy4vc3Vic2NyaWJlci9oZXJtZXMuc3Vic2NyaWJlcic7XG5pbXBvcnQgeyBIZXJtZXNPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAnLi9oZXJtZXMub2JzZXJ2YWJsZSc7XG5cbmV4cG9ydCBjbGFzcyBIZXJtZXNSZXBsYXlTdWJqZWN0PFQ+IGV4dGVuZHMgSGVybWVzU3ViamVjdDxUPiB7XG5cblx0cHJpdmF0ZSByZWFkb25seSB2YWx1ZXM6IEFycmF5PFQ+ID0gW107XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBidWZmZXJTaXplOiBudW1iZXIgPSAxKSB7XG5cdFx0c3VwZXIoKTtcblx0fVxuXG5cdG92ZXJyaWRlIHBpcGUoLi4ub3BlcmF0aW9uczogQXJyYXk8SGVybWVzT3BlcmF0b3JGdW5jdGlvbjxhbnksIGFueT4+KTogSGVybWVzUmVwbGF5U3ViamVjdDxhbnk+IHtcblx0XHRyZXR1cm4gc3VwZXIucGlwZSguLi5vcGVyYXRpb25zKSBhcyBIZXJtZXNSZXBsYXlTdWJqZWN0PGFueT47XG5cdH1cblxuXHRvdmVycmlkZSBuZXh0KHZhbHVlOiBUKTogdm9pZCB7XG5cdFx0dGhpcy52YWx1ZXMucHVzaCh2YWx1ZSk7XG5cdFx0aWYgKHRoaXMuYnVmZmVyU2l6ZSA8IHRoaXMudmFsdWVzLmxlbmd0aCkge1xuXHRcdFx0dGhpcy52YWx1ZXMuc2hpZnQoKTtcblx0XHR9XG5cdFx0c3VwZXIubmV4dCh2YWx1ZSk7XG5cdH1cblxuXHRvdmVycmlkZSBzdWJzY3JpYmUoXG5cdFx0bmV4dD86ICh2YWx1ZTogVCkgPT4gdm9pZCxcblx0XHRlcnJvcj86IChlcnJvcjogYW55KSA9PiB2b2lkLFxuXHRcdGNvbXBsZXRlPzogKCkgPT4gdm9pZFxuXHQpOiBIZXJtZXNTdWJzY3JpcHRpb247XG5cdG92ZXJyaWRlIHN1YnNjcmliZShcblx0XHRzdWJzY3JpYmVyOiBIZXJtZXNTdWJzY3JpYmVyPFQ+XG5cdCk6IEhlcm1lc1N1YnNjcmlwdGlvbjtcblx0b3ZlcnJpZGUgc3Vic2NyaWJlKCk6IEhlcm1lc1N1YnNjcmlwdGlvbiB7XG5cblx0XHRsZXQgc3Vic2NyaWJlcjogSGVybWVzU3Vic2NyaWJlcjxUPjtcblxuXHRcdGlmIChhcmd1bWVudHNbMF0gaW5zdGFuY2VvZiBIZXJtZXNTdWJzY3JpYmVyKSB7XG5cdFx0XHRzdWJzY3JpYmVyID0gYXJndW1lbnRzWzBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdWJzY3JpYmVyID0gdGhpcy5jcmVhdGVTdWJzY3JpYmVyKGFyZ3VtZW50c1swXSwgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pO1xuXHRcdH1cblxuXHRcdGNvbnN0IHN1YnNjcmlwdGlvbiA9IHN1cGVyLnN1YnNjcmliZShzdWJzY3JpYmVyKTtcblxuXHRcdGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy52YWx1ZXMpIHtcblx0XHRcdHN1YnNjcmliZXIubmV4dCh2YWx1ZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHN1YnNjcmlwdGlvbjtcblx0fVxuXG59XG4iXX0=