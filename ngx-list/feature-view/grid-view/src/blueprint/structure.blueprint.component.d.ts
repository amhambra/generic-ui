import { ChangeDetectorRef, ElementRef } from '@angular/core';
import { SmartComponent } from '../../../../feature/common/component/src/smart-component';
import { PagingModel } from '../../../../core/structure/paging/src/api/model/paging.model';
import { StructureDefinition } from '../structure/structure-definition';
import { HermesObservable } from '@generic-ui/hermes';
import * as i0 from "@angular/core";
export declare class StructureBlueprintComponent extends SmartComponent {
    private readonly structureDefinition;
    private className;
    private readonly structureId;
    private readonly summariesWarehouse;
    private readonly structureHeaderTopEnabledArchive;
    private readonly structureHeaderBottomEnabledArchive;
    private readonly searchWarehouse;
    private readonly pagingWarehouse;
    private readonly structureWarehouse;
    private readonly structureInfoPanelArchive;
    private readonly structureTitlePanelConfigArchive;
    private readonly structureFooterPanelConfigArchive;
    readonly bottomSummariesPanelEnabled$: HermesObservable<boolean>;
    readonly contentCssClass: string;
    readonly headerCssClass: string;
    readonly headerTopClasses: string;
    readonly headerBottomClasses: string;
    readonly topHeaderEnabled$: HermesObservable<boolean>;
    readonly bottomHeaderEnabled$: HermesObservable<boolean>;
    readonly footerPanelEnabled$: HermesObservable<boolean>;
    readonly items$: HermesObservable<any>;
    readonly topSummariesPanelEnabled$: HermesObservable<boolean>;
    readonly searchEnabled$: HermesObservable<boolean>;
    readonly titlePanelEnabled$: HermesObservable<boolean>;
    readonly infoPanelEnabled$: HermesObservable<boolean>;
    readonly pagingModel$: HermesObservable<PagingModel>;
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef, structureDefinition: StructureDefinition, className: string);
    isColumnHeaderTopEnabled(topHeaderEnabled: boolean): boolean;
    isColumnHeaderBottomEnabled(bottomHeaderEnabled: boolean): boolean;
    isPagingTopEnabled(pagingModel: PagingModel): boolean;
    isPagingBottomEnabled(pagingModel: PagingModel): boolean;
    protected getSelectorName(): string;
    private selectTitlePanelEnabled;
    private selectInfoPanelEnabled;
    private selectFooterPanelEnabled;
    private selectItems;
    static ɵfac: i0.ɵɵFactoryDeclaration<StructureBlueprintComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<StructureBlueprintComponent, "div[gui-structure-blueprint]", never, {}, {}, never, never, false, never>;
}
