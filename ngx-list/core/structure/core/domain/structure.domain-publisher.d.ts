import { FilterPublisher } from '../../filter/api/filter.publisher';
import { SourceDispatcher } from '../../source/domain/source.dispatcher';
import { FilterConfig } from '../../filter/api/config/filter.config';
import { QuickFiltersConfig } from '../../filter/api/quick-filter/quick-filters.config';
import { StructurePublisher } from '../api/structure.publisher';
import { SchemaTheme } from '../../../schema/api/theme/schema-theme';
import { CellEditConfig } from '../api/edit/cell-edit.config';
import { StructureCellEditArchive } from '../../../../feature-view/grid-view/edit/structure.cell-edit.archive';
import { VerticalFormationPublisher } from '../../vertical-formation/api/vertical-formation.publisher';
import { StructureId } from '../api/global/structure.id';
export declare class StructureDomainPublisher extends StructurePublisher {
    private readonly filterCommandInvoker;
    private readonly sourceDispatcher;
    private readonly verticalFormationCommandInvoker;
    private readonly structureCellEditArchive;
    private readonly commandDispatcher;
    constructor(filterCommandInvoker: FilterPublisher, sourceDispatcher: SourceDispatcher, verticalFormationCommandInvoker: VerticalFormationPublisher, structureCellEditArchive: StructureCellEditArchive);
    static readonly services: readonly [typeof FilterPublisher, typeof SourceDispatcher, typeof VerticalFormationPublisher, typeof StructureCellEditArchive];
    create(structureId: StructureId): void;
    enableVirtualScroll(structureId: StructureId): void;
    disableVirtualScroll(structureId: StructureId): void;
    scrollToTop(structureId: StructureId): void;
    scrollToBottom(structureId: StructureId): void;
    scrollToIndex(index: number, structureId: StructureId): void;
    setScrollPosition(position: number, structureId: StructureId): void;
    setOrigin(items: Array<any>, structureId: StructureId): void;
    setFilterConfig(config: FilterConfig, structureId: StructureId): void;
    setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;
    setRowHeight(rowHeight: number, structureId: StructureId): void;
    setContainerHeight(height: number, structureId: StructureId): void;
    setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;
    setCellEdit(cellEdit: CellEditConfig, structureId: StructureId): void;
}
