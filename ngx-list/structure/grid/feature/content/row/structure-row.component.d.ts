import { ChangeDetectorRef, ElementRef, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';
import { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';
import { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';
import { StructureId } from '../../../../core/api/structure.id';
import { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';
import { SmartComponent } from '../../../../../common/cdk/smart-component';
import { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';
export declare class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {
    private readonly changeDetectorRef;
    private readonly elRef;
    private readonly renderer2;
    private readonly structureId;
    private readonly formationWarehouse;
    private readonly formationCommandDispatcher;
    entity: ItemEntity;
    columns: Array<CellTemplateWithAccessor>;
    editMode: boolean;
    cellEditing: boolean;
    searchPhrase: string;
    index: number;
    rowStyle: GuiRowStyle;
    rowClass: GuiRowClass;
    detailsEnabled: boolean;
    checkboxSelection: boolean;
    selectedItem: boolean;
    private row;
    constructor(changeDetectorRef: ChangeDetectorRef, elRef: ElementRef, renderer2: Renderer2, structureId: StructureId, formationWarehouse: FormationWarehouse, formationCommandDispatcher: FormationCommandInvoker);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    trackByFn(): number;
    selectRow(): void;
    checkSelectedItem(): void;
    private updateRowStyle;
    private renderRowStyles;
    private updateRowClass;
}
