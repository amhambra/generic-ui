import { ChangeDetectorRef, ElementRef, Injector, OnInit } from '@angular/core';
import { FabricDialogService } from '@generic-ui/fabric';
import { SmartComponent } from '../../../../../common/cdk/component/smart-component';
import { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';
import { SourceWarehouse } from '../../../../source/core/api/source.warehouse';
import { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';
import { CompositionId } from '../../../../../composition/core/domain/composition.id';
import { StructureId } from '../../../../core/domain/structure.id';
import { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';
import { StructureInfoPanelArchive } from './structure.info-panel.archive';
import { StructureInfoPanelConfig } from './structure.info-panel.config';
import { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';
import { TranslationService } from '../../../../../l10n/core/api/translation.service';
export declare class StructureInfoPanelComponent extends SmartComponent implements OnInit {
    private readonly changeDetectorRef;
    private readonly injector;
    private readonly sourceReadModelService;
    private readonly dialog;
    private readonly compositionId;
    private readonly structureId;
    private readonly schemaReadModelRootId;
    private readonly menuColumnManagerService;
    private readonly translationService;
    private readonly schemaManagerService;
    private readonly structureInfoPanelEnabledArchive;
    totalItemsSize: number;
    preparedItemsSize: number;
    rowHeight: number;
    infoModal: typeof StructureInfoModalComponent;
    infoPanelConfig: StructureInfoPanelConfig;
    themeManagerTooltipText: string;
    columnManagerTooltipText: string;
    infoTooltipText: string;
    constructor(changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef, injector: Injector, sourceReadModelService: SourceWarehouse, dialog: FabricDialogService, compositionId: CompositionId, structureId: StructureId, schemaReadModelRootId: SchemaReadModelRootId, menuColumnManagerService: StructureDialogColumnManagerService, translationService: TranslationService, schemaManagerService: StructureDialogSchemaManagerService, structureInfoPanelEnabledArchive: StructureInfoPanelArchive);
    ngOnInit(): void;
    openInfo(): void;
    openColumnManager(): void;
    openSchemaManager(): void;
    protected getSelectorName(): string;
}
