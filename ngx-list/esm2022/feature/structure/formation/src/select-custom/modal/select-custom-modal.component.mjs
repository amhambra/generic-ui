import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
import { DynamicallyCreatedComponent } from '../../../../../common/component';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../core/structure/structure-core/src/api/global/structure.id";
import * as i2 from "../../../../../../core/structure/formation/src/api/formation.publisher";
import * as i3 from "../../../../../../core/structure/formation/src/api/formation.warehouse";
import * as i4 from "@angular/common";
import * as i5 from "../../../../../gui-angular/template/let/gui.let.directive";
export class SelectCustomModalComponent extends DynamicallyCreatedComponent {
    structureId;
    formationPublisher;
    formationWarehouse;
    // @ts-ignore
    selection$ = this.formationWarehouse.onCustomSelections(this.structureId);
    constructor(elRef, structureId, formationPublisher, formationWarehouse) {
        super(elRef);
        this.structureId = structureId;
        this.formationPublisher = formationPublisher;
        this.formationWarehouse = formationWarehouse;
    }
    selectCustom(id) {
        this.formationPublisher.selectCustom(id, this.structureId);
    }
    getSelectorName() {
        return 'gui-select-custom-modal';
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectCustomModalComponent, deps: [{ token: i0.ElementRef }, { token: i1.StructureId }, { token: i2.FormationPublisher }, { token: i3.FormationWarehouse }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SelectCustomModalComponent, selector: "div[gui-select-custom-modal]", usesInheritance: true, ngImport: i0, template: "<ul *guiLet=\"selection$; let selection\">\n\t<li (click)=\"selectCustom(sel.getCustomSelectId())\"\n\t\t*ngFor=\"let sel of selection.getSelections()\"\n\t\t[attr.id]=\"sel.key\">\n\t\t{{sel.text}}\n\t</li>\n</ul>\n", styles: [".gui-select-custom-modal{background:#fff;border:1px solid #d6d6d6;border-radius:0 0 4px 4px}.gui-select-custom-modal ul{list-style:none;margin:0;padding:0}.gui-select-custom-modal ul li{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;border-color:#d6d6d6;box-sizing:border-box;color:#333;cursor:pointer;display:block;font:14px Arial;padding:8px 12px}\n"], dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.GuiLetDirective, selector: "[guiLet]", inputs: ["guiLet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SelectCustomModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'div[gui-select-custom-modal]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<ul *guiLet=\"selection$; let selection\">\n\t<li (click)=\"selectCustom(sel.getCustomSelectId())\"\n\t\t*ngFor=\"let sel of selection.getSelections()\"\n\t\t[attr.id]=\"sel.key\">\n\t\t{{sel.text}}\n\t</li>\n</ul>\n", styles: [".gui-select-custom-modal{background:#fff;border:1px solid #d6d6d6;border-radius:0 0 4px 4px}.gui-select-custom-modal ul{list-style:none;margin:0;padding:0}.gui-select-custom-modal ul li{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;border-color:#d6d6d6;box-sizing:border-box;color:#333;cursor:pointer;display:block;font:14px Arial;padding:8px 12px}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StructureId }, { type: i2.FormationPublisher }, { type: i3.FormationWarehouse }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWN1c3RvbS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWxpc3Qvc3JjL2ZlYXR1cmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9zcmMvc2VsZWN0LWN1c3RvbS9tb2RhbC9zZWxlY3QtY3VzdG9tLW1vZGFsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvZmVhdHVyZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9zZWxlY3QtY3VzdG9tL21vZGFsL3NlbGVjdC1jdXN0b20tbW9kYWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBYyxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVsRyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7Ozs7OztBQVk5RSxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsMkJBQTJCO0lBTXREO0lBQ0E7SUFDQTtJQU5wQixhQUFhO0lBQ2IsVUFBVSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFMUUsWUFBWSxLQUFpQixFQUNULFdBQXdCLEVBQ3hCLGtCQUFzQyxFQUN0QyxrQkFBc0M7UUFDekQsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBSE0sZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBRTFELENBQUM7SUFFRCxZQUFZLENBQUMsRUFBMkI7UUFDdkMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFUyxlQUFlO1FBQ3hCLE9BQU8seUJBQXlCLENBQUM7SUFDbEMsQ0FBQzt3R0FsQlcsMEJBQTBCOzRGQUExQiwwQkFBMEIsMkZDZHZDLDBOQU9BOzs0RkRPYSwwQkFBMEI7a0JBUHRDLFNBQVM7K0JBQ0MsOEJBQThCLG1CQUd2Qix1QkFBdUIsQ0FBQyxNQUFNLGlCQUNoQyxpQkFBaUIsQ0FBQyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1hdGlvbldhcmVob3VzZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9zcmMvYXBpL2Zvcm1hdGlvbi53YXJlaG91c2UnO1xuaW1wb3J0IHsgRHluYW1pY2FsbHlDcmVhdGVkQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29tbW9uL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVJZCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL3N0cnVjdHVyZS1jb3JlL3NyYy9hcGkvZ2xvYmFsL3N0cnVjdHVyZS5pZCc7XG5pbXBvcnQgeyBGb3JtYXRpb25QdWJsaXNoZXIgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9mb3JtYXRpb24vc3JjL2FwaS9mb3JtYXRpb24ucHVibGlzaGVyJztcbmltcG9ydCB7IEZvcm1hdGlvbkN1c3RvbVNlbGVjdElkIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vY29yZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9hcGkvY3VzdG9tL2Zvcm1hdGlvbi5jdXN0b20tc2VsZWN0LmlkJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnZGl2W2d1aS1zZWxlY3QtY3VzdG9tLW1vZGFsXScsXG5cdHRlbXBsYXRlVXJsOiBgc2VsZWN0LWN1c3RvbS1tb2RhbC5jb21wb25lbnQuaHRtbGAsXG5cdHN0eWxlVXJsczogW2BzZWxlY3QtY3VzdG9tLW1vZGFsLmNvbXBvbmVudC5zY3NzYF0sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFNlbGVjdEN1c3RvbU1vZGFsQ29tcG9uZW50IGV4dGVuZHMgRHluYW1pY2FsbHlDcmVhdGVkQ29tcG9uZW50IHtcblxuXHQvLyBAdHMtaWdub3JlXG5cdHNlbGVjdGlvbiQgPSB0aGlzLmZvcm1hdGlvbldhcmVob3VzZS5vbkN1c3RvbVNlbGVjdGlvbnModGhpcy5zdHJ1Y3R1cmVJZCk7XG5cblx0Y29uc3RydWN0b3IoZWxSZWY6IEVsZW1lbnRSZWYsXG5cdFx0XHRcdHByaXZhdGUgcmVhZG9ubHkgc3RydWN0dXJlSWQ6IFN0cnVjdHVyZUlkLFxuXHRcdFx0XHRwcml2YXRlIHJlYWRvbmx5IGZvcm1hdGlvblB1Ymxpc2hlcjogRm9ybWF0aW9uUHVibGlzaGVyLFxuXHRcdFx0XHRwcml2YXRlIHJlYWRvbmx5IGZvcm1hdGlvbldhcmVob3VzZTogRm9ybWF0aW9uV2FyZWhvdXNlKSB7XG5cdFx0c3VwZXIoZWxSZWYpO1xuXHR9XG5cblx0c2VsZWN0Q3VzdG9tKGlkOiBGb3JtYXRpb25DdXN0b21TZWxlY3RJZCk6IHZvaWQge1xuXHRcdHRoaXMuZm9ybWF0aW9uUHVibGlzaGVyLnNlbGVjdEN1c3RvbShpZCwgdGhpcy5zdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZ2V0U2VsZWN0b3JOYW1lKCk6IHN0cmluZyB7XG5cdFx0cmV0dXJuICdndWktc2VsZWN0LWN1c3RvbS1tb2RhbCc7XG5cdH1cbn1cbiIsIjx1bCAqZ3VpTGV0PVwic2VsZWN0aW9uJDsgbGV0IHNlbGVjdGlvblwiPlxuXHQ8bGkgKGNsaWNrKT1cInNlbGVjdEN1c3RvbShzZWwuZ2V0Q3VzdG9tU2VsZWN0SWQoKSlcIlxuXHRcdCpuZ0Zvcj1cImxldCBzZWwgb2Ygc2VsZWN0aW9uLmdldFNlbGVjdGlvbnMoKVwiXG5cdFx0W2F0dHIuaWRdPVwic2VsLmtleVwiPlxuXHRcdHt7c2VsLnRleHR9fVxuXHQ8L2xpPlxuPC91bD5cbiJdfQ==