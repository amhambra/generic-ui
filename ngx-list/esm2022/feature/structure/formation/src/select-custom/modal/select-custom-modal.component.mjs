import { ChangeDetectionStrategy, Component, ViewEncapsulation, inject } from '@angular/core';
import { FormationWarehouse } from '../../../../../../core/structure/formation/src/api/formation.warehouse';
import { DynamicallyCreatedComponent } from '../../../../../common/component';
import { StructureId } from '../../../../../../core/structure/structure-core/src/api/global/structure.id';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../core/structure/formation/src/api/formation.publisher";
import * as i2 from "@angular/common";
import * as i3 from "../../../../../gui-angular/template/let/gui.let.directive";
export class SelectCustomModalComponent extends DynamicallyCreatedComponent {
    formationPublisher;
    structureId = inject(StructureId);
    formationWarehouse = inject(FormationWarehouse);
    selection$ = this.formationWarehouse.onCustomSelections(this.structureId);
    constructor(elRef, formationPublisher) {
        super(elRef);
        this.formationPublisher = formationPublisher;
    }
    selectCustom(id) {
        this.formationPublisher.selectCustom(id, this.structureId);
    }
    getSelectorName() {
        return 'gui-select-custom-modal';
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: SelectCustomModalComponent, deps: [{ token: i0.ElementRef }, { token: i1.FormationPublisher }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.2", type: SelectCustomModalComponent, selector: "div[gui-select-custom-modal]", usesInheritance: true, ngImport: i0, template: "<ul *guiLet=\"selection$; let selection\">\n\t<li (click)=\"selectCustom(sel.getCustomSelectId())\"\n\t\t*ngFor=\"let sel of selection.getSelections()\"\n\t\t[attr.id]=\"sel.key\">\n\t\t{{sel.text}}\n\t</li>\n</ul>\n", styles: [".gui-select-custom-modal{background:#fff;border:1px solid #d6d6d6;border-radius:0 0 4px 4px}.gui-select-custom-modal ul{list-style:none;margin:0;padding:0}.gui-select-custom-modal ul li{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;border-color:#d6d6d6;box-sizing:border-box;color:#333;cursor:pointer;display:block;font:14px Arial;padding:8px 12px}\n"], dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.GuiLetDirective, selector: "[guiLet]", inputs: ["guiLet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: SelectCustomModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'div[gui-select-custom-modal]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<ul *guiLet=\"selection$; let selection\">\n\t<li (click)=\"selectCustom(sel.getCustomSelectId())\"\n\t\t*ngFor=\"let sel of selection.getSelections()\"\n\t\t[attr.id]=\"sel.key\">\n\t\t{{sel.text}}\n\t</li>\n</ul>\n", styles: [".gui-select-custom-modal{background:#fff;border:1px solid #d6d6d6;border-radius:0 0 4px 4px}.gui-select-custom-modal ul{list-style:none;margin:0;padding:0}.gui-select-custom-modal ul li{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background:#fff;border-color:#d6d6d6;box-sizing:border-box;color:#333;cursor:pointer;display:block;font:14px Arial;padding:8px 12px}\n"] }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.FormationPublisher }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWN1c3RvbS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWxpc3Qvc3JjL2ZlYXR1cmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9zcmMvc2VsZWN0LWN1c3RvbS9tb2RhbC9zZWxlY3QtY3VzdG9tLW1vZGFsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvZmVhdHVyZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9zZWxlY3QtY3VzdG9tL21vZGFsL3NlbGVjdC1jdXN0b20tbW9kYWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBYyxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDNUcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDOUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZFQUE2RSxDQUFDOzs7OztBQVcxRyxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsMkJBQTJCO0lBVXhEO0lBUkQsV0FBVyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUVsQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUVqRSxVQUFVLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUUxRSxZQUNDLEtBQWlCLEVBQ0Esa0JBQXNDO1FBRXZELEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUZJLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7SUFHeEQsQ0FBQztJQUVELFlBQVksQ0FBQyxFQUEyQjtRQUN2QyxJQUFJLENBQUMsa0JBQWtCLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVTLGVBQWU7UUFDeEIsT0FBTyx5QkFBeUIsQ0FBQztJQUNsQyxDQUFDO3VHQXJCVywwQkFBMEI7MkZBQTFCLDBCQUEwQiwyRkNkdkMsME5BT0E7OzJGRE9hLDBCQUEwQjtrQkFQdEMsU0FBUzsrQkFDQyw4QkFBOEIsbUJBR3ZCLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBWaWV3RW5jYXBzdWxhdGlvbiwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtYXRpb25XYXJlaG91c2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9mb3JtYXRpb24vc3JjL2FwaS9mb3JtYXRpb24ud2FyZWhvdXNlJztcbmltcG9ydCB7IER5bmFtaWNhbGx5Q3JlYXRlZENvbXBvbmVudCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbW1vbi9jb21wb25lbnQnO1xuaW1wb3J0IHsgU3RydWN0dXJlSWQgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9zdHJ1Y3R1cmUtY29yZS9zcmMvYXBpL2dsb2JhbC9zdHJ1Y3R1cmUuaWQnO1xuaW1wb3J0IHsgRm9ybWF0aW9uUHVibGlzaGVyIH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vY29yZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9hcGkvZm9ybWF0aW9uLnB1Ymxpc2hlcic7XG5pbXBvcnQgeyBGb3JtYXRpb25DdXN0b21TZWxlY3RJZCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL2Zvcm1hdGlvbi9zcmMvYXBpL2N1c3RvbS9mb3JtYXRpb24uY3VzdG9tLXNlbGVjdC5pZCc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2RpdltndWktc2VsZWN0LWN1c3RvbS1tb2RhbF0nLFxuXHR0ZW1wbGF0ZVVybDogYHNlbGVjdC1jdXN0b20tbW9kYWwuY29tcG9uZW50Lmh0bWxgLFxuXHRzdHlsZVVybHM6IFtgc2VsZWN0LWN1c3RvbS1tb2RhbC5jb21wb25lbnQuc2Nzc2BdLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcblx0ZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBTZWxlY3RDdXN0b21Nb2RhbENvbXBvbmVudCBleHRlbmRzIER5bmFtaWNhbGx5Q3JlYXRlZENvbXBvbmVudCB7XG5cblx0cHJpdmF0ZSByZWFkb25seSBzdHJ1Y3R1cmVJZCA9IGluamVjdChTdHJ1Y3R1cmVJZCk7XG5cblx0cHJpdmF0ZSByZWFkb25seSBmb3JtYXRpb25XYXJlaG91c2UgPSBpbmplY3QoRm9ybWF0aW9uV2FyZWhvdXNlKTtcblxuXHRzZWxlY3Rpb24kID0gdGhpcy5mb3JtYXRpb25XYXJlaG91c2Uub25DdXN0b21TZWxlY3Rpb25zKHRoaXMuc3RydWN0dXJlSWQpO1xuXG5cdGNvbnN0cnVjdG9yKFxuXHRcdGVsUmVmOiBFbGVtZW50UmVmLFxuXHRcdHByaXZhdGUgcmVhZG9ubHkgZm9ybWF0aW9uUHVibGlzaGVyOiBGb3JtYXRpb25QdWJsaXNoZXJcblx0KSB7XG5cdFx0c3VwZXIoZWxSZWYpO1xuXHR9XG5cblx0c2VsZWN0Q3VzdG9tKGlkOiBGb3JtYXRpb25DdXN0b21TZWxlY3RJZCk6IHZvaWQge1xuXHRcdHRoaXMuZm9ybWF0aW9uUHVibGlzaGVyLnNlbGVjdEN1c3RvbShpZCwgdGhpcy5zdHJ1Y3R1cmVJZCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZ2V0U2VsZWN0b3JOYW1lKCk6IHN0cmluZyB7XG5cdFx0cmV0dXJuICdndWktc2VsZWN0LWN1c3RvbS1tb2RhbCc7XG5cdH1cbn1cbiIsIjx1bCAqZ3VpTGV0PVwic2VsZWN0aW9uJDsgbGV0IHNlbGVjdGlvblwiPlxuXHQ8bGkgKGNsaWNrKT1cInNlbGVjdEN1c3RvbShzZWwuZ2V0Q3VzdG9tU2VsZWN0SWQoKSlcIlxuXHRcdCpuZ0Zvcj1cImxldCBzZWwgb2Ygc2VsZWN0aW9uLmdldFNlbGVjdGlvbnMoKVwiXG5cdFx0W2F0dHIuaWRdPVwic2VsLmtleVwiPlxuXHRcdHt7c2VsLnRleHR9fVxuXHQ8L2xpPlxuPC91bD5cbiJdfQ==