import { ChangeDetectionStrategy, Component, ElementRef, inject, Inject, ViewChild, ViewEncapsulation } from '@angular/core';
import { SmartComponent } from '../../../../../../feature/common/component/src/smart-component';
import { hermesMap } from '@generic-ui/hermes';
import { StructureColumnConfigService } from '../structure.column-config.service';
import { GuiState } from '../../../../../../feature/gui-angular/state/gui.state';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../core/l10n/src/api/translation.facade";
import * as i2 from "./structure.column-menu-config.archive";
import * as i3 from "../../../../../../core/composition/src/api/global/composition.id";
import * as i4 from "../../../../../../core/composition/src/api/composition.publisher";
import * as i5 from "@angular/common";
import * as i6 from "@generic-ui/fabric";
import * as i7 from "../../../../../../feature/gui-angular/template/let/gui.let.directive";
import * as i8 from "../../../column-manager/menu/structure.menu-column-manager.component";
import * as i9 from "../../../../../../feature/structure/filter/src/unique/unique-value-list.component";
import * as i10 from "../main/sort/structure.column-config-sort.component";
import * as i11 from "../main/hide/structure.column-config-column-hide.component";
import * as i12 from "../main/move/structure.column-config-column-move.component";
import * as i13 from "../../../../../../feature/l10n/src/translation.pipe";
import * as i14 from "../../../../../../core/composition/src/core-read/definition/cell-template-with-context";
export class StructureColumnConfigComponent extends SmartComponent {
    translationFacade;
    structureColumnMenuConfigArchive;
    compositionId;
    compositionCommandInvoker;
    injector;
    column;
    headerSortMenu;
    state = inject((GuiState));
    state$ = this.state.select();
    structureColumnConfigService;
    constructor(changeDetectorRef, elementRef, translationFacade, structureColumnMenuConfigArchive, compositionId, compositionCommandInvoker, injector, column) {
        super(changeDetectorRef, elementRef);
        this.translationFacade = translationFacade;
        this.structureColumnMenuConfigArchive = structureColumnMenuConfigArchive;
        this.compositionId = compositionId;
        this.compositionCommandInvoker = compositionCommandInvoker;
        this.injector = injector;
        this.column = column;
        this.structureColumnConfigService = this.injector.get(StructureColumnConfigService);
        this.state.connect('isEnabled', this.selectIsEnabled());
        this.state.connect('config', this.structureColumnMenuConfigArchive.on());
        this.state.connect('translations', this.translationFacade.onTranslation());
    }
    isEnabled(config) {
        return config.isEnabled();
    }
    hideColumn() {
        this.compositionCommandInvoker.disableColumn(this.column.getColumnDefinitionId(), this.compositionId);
        this.structureColumnConfigService.close();
    }
    moveLeft() {
        this.compositionCommandInvoker.moveLeft(this.column.getColumnDefinitionId(), this.compositionId);
        this.structureColumnConfigService.close();
    }
    moveRight() {
        this.compositionCommandInvoker.moveRight(this.column.getColumnDefinitionId(), this.compositionId);
        this.structureColumnConfigService.close();
    }
    highlightColumn() {
        this.compositionCommandInvoker.highlightColumn(this.column.getColumnDefinitionId(), this.compositionId);
        this.structureColumnConfigService.close();
    }
    getSelectorName() {
        return 'gui-column-config';
    }
    selectIsEnabled() {
        return this.structureColumnMenuConfigArchive
            .on()
            .pipe(hermesMap((config) => config.isEnabled()));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: StructureColumnConfigComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.TranslationFacade }, { token: i2.StructureColumnMenuConfigArchive }, { token: i3.CompositionId }, { token: i4.CompositionPublisher }, { token: i0.Injector }, { token: 'column' }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.2", type: StructureColumnConfigComponent, selector: "div[gui-column-config]", providers: [
            GuiState
        ], viewQueries: [{ propertyName: "headerSortMenu", first: true, predicate: ["headerSortMenu"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: "<ng-container *guiLet=\"state$; let localState\">\n\n\t<div *ngIf=\"localState.isEnabled\"\n\t\t class=\"gui-header-menu-tab\">\n\n\t\t<gui-tab [active]=\"localState.config.getActiveMenu()\"\n\t\t\t\t [menu]=\"localState.config.getMenus()\">\n\n\t\t\t<ng-container *ngIf=\"localState.config.isMainEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuMainTab\"\n\t\t\t\t\t\t\t  class=\"gui-tab-item-dropdown\">\n\n\t\t\t\t\t<div *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t [dropdownTextTranslation]=\"localState.translations.headerMenuMainTabColumnSort\"\n\t\t\t\t\t\t gui-structure-column-config-sort>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (columnHidden)=\"hideColumn()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t gui-structure-column-config-column-hide>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (click)=\"highlightColumn()\"\n\t\t\t\t\t\t class=\"gui-header-menu-item\">\n\t\t\t\t\t\t{{'headerMenuMainTabHighlightColumn' | guiTranslate}}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (movedLeft)=\"moveLeft()\"\n\t\t\t\t\t\t (movedRight)=\"moveRight()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t gui-structure-column-config-column-move>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf=\"localState.config.isFilteringEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuFilterTab\">\n\n\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t<div [fieldId]=\"column.getFieldId()\"\n\t\t\t\t\t\t gui-unique-value-list>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf=\"localState.config.isColumnManagerEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuColumnsTab\">\n\n\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t</gui-tab>\n\t</div>\n\n</ng-container>\n", dependencies: [{ kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.FabricTabComponent, selector: "gui-tab", inputs: ["menu", "active", "scrollActive"] }, { kind: "component", type: i6.FabricTabItemComponent, selector: "gui-tab-item", inputs: ["tab"] }, { kind: "directive", type: i7.GuiLetDirective, selector: "[guiLet]", inputs: ["guiLet"] }, { kind: "component", type: i8.StructureMenuColumnManagerComponent, selector: "div[gui-structure-menu-column-manager]" }, { kind: "component", type: i9.UniqueValueListComponent, selector: "div[gui-unique-value-list][fieldId]", inputs: ["fieldId"] }, { kind: "component", type: i10.StructureColumnConfigSortComponent, selector: "div[gui-structure-column-config-sort][column][dropdownTextTranslation]", inputs: ["column", "dropdownTextTranslation"] }, { kind: "component", type: i11.StructureColumnConfigColumnHideComponent, selector: "div[gui-structure-column-config-column-hide]", inputs: ["column"], outputs: ["columnHidden"] }, { kind: "component", type: i12.StructureColumnConfigColumnMoveComponent, selector: "div[gui-structure-column-config-column-move][column]", inputs: ["column"], outputs: ["movedLeft", "movedRight"] }, { kind: "pipe", type: i13.TranslationPipe, name: "guiTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: StructureColumnConfigComponent, decorators: [{
            type: Component,
            args: [{ selector: 'div[gui-column-config]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [
                        GuiState
                    ], template: "<ng-container *guiLet=\"state$; let localState\">\n\n\t<div *ngIf=\"localState.isEnabled\"\n\t\t class=\"gui-header-menu-tab\">\n\n\t\t<gui-tab [active]=\"localState.config.getActiveMenu()\"\n\t\t\t\t [menu]=\"localState.config.getMenus()\">\n\n\t\t\t<ng-container *ngIf=\"localState.config.isMainEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuMainTab\"\n\t\t\t\t\t\t\t  class=\"gui-tab-item-dropdown\">\n\n\t\t\t\t\t<div *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t [dropdownTextTranslation]=\"localState.translations.headerMenuMainTabColumnSort\"\n\t\t\t\t\t\t gui-structure-column-config-sort>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (columnHidden)=\"hideColumn()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t gui-structure-column-config-column-hide>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (click)=\"highlightColumn()\"\n\t\t\t\t\t\t class=\"gui-header-menu-item\">\n\t\t\t\t\t\t{{'headerMenuMainTabHighlightColumn' | guiTranslate}}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div (movedLeft)=\"moveLeft()\"\n\t\t\t\t\t\t (movedRight)=\"moveRight()\"\n\t\t\t\t\t\t [column]=\"column\"\n\t\t\t\t\t\t gui-structure-column-config-column-move>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf=\"localState.config.isFilteringEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuFilterTab\">\n\n\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t<div [fieldId]=\"column.getFieldId()\"\n\t\t\t\t\t\t gui-unique-value-list>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t\t<ng-container *ngIf=\"localState.config.isColumnManagerEnabled()\">\n\n\t\t\t\t<gui-tab-item [tab]=\"localState.translations.headerMenuColumnsTab\">\n\n\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t</div>\n\n\t\t\t\t</gui-tab-item>\n\n\t\t\t</ng-container>\n\n\t\t</gui-tab>\n\t</div>\n\n</ng-container>\n" }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.TranslationFacade }, { type: i2.StructureColumnMenuConfigArchive }, { type: i3.CompositionId }, { type: i4.CompositionPublisher }, { type: i0.Injector }, { type: i14.CellTemplateWithContext, decorators: [{
                    type: Inject,
                    args: ['column']
                }] }], propDecorators: { headerSortMenu: [{
                type: ViewChild,
                args: ['headerSortMenu', { read: ElementRef, static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,