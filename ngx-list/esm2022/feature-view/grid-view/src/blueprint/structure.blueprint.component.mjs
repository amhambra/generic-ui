import { ChangeDetectionStrategy, Component, inject, Inject, ViewEncapsulation } from '@angular/core';
import { SmartComponent } from '../../../../feature/common/component/src/smart-component';
import { StructureId } from '../../../../core/structure/structure-core/src/api/global/structure.id';
import { StructureWarehouse } from '../../../../core/structure/structure-core/src/api/structure.warehouse';
import { PagingWarehouse } from '../../../../core/structure/paging/src/api/paging.warehouse';
import { StructureInfoPanelArchive } from '../../../../core/structure/structure-core/src/api/panel/info/structure.info-panel.archive';
import { SearchWarehouse } from '../../../../core/structure/search/src/api/search.warehouse';
import { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';
import { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';
import { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';
import { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';
import { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';
import { SummariesWarehouse } from '../../../../core/structure/summaries/src/api/summaries.warehouse';
import { hermesMap } from '@generic-ui/hermes';
import * as i0 from "@angular/core";
import * as i1 from "../structure/structure-definition";
import * as i2 from "@angular/common";
import * as i3 from "../../../../feature/gui-angular/template/let/gui.let.directive";
import * as i4 from "../../../../feature/gui-angular/template/if/gui.if.directive";
import * as i5 from "../../../../feature/structure/paging/src/paging.component";
import * as i6 from "../../../../feature/structure/summaries/src/panel/structure.summaries-panel.component";
import * as i7 from "../panel/info/structure.info-panel.component";
import * as i8 from "../panel/top/structure.top-panel.component";
import * as i9 from "../../../../feature/structure/source/src/empty/empty-source.component";
import * as i10 from "../header/structure-header.component";
import * as i11 from "../content/container/structure-container.component";
import * as i12 from "../panel/banner-panels/title-panel/structure.title-panel.component";
import * as i13 from "../panel/banner-panels/footer-panel/structure.footer-panel.component";
import * as i14 from "../../../../feature/gui-angular/template/push/gui.push.pipe";
export class StructureBlueprintComponent extends SmartComponent {
    structureDefinition;
    className;
    structureId = inject(StructureId);
    summariesWarehouse = inject(SummariesWarehouse);
    structureHeaderTopEnabledArchive = inject(StructureHeaderTopEnabledArchive);
    structureHeaderBottomEnabledArchive = inject(StructureHeaderBottomEnabledArchive);
    searchWarehouse = inject(SearchWarehouse);
    pagingWarehouse = inject(PagingWarehouse);
    structureWarehouse = inject(StructureWarehouse);
    structureInfoPanelArchive = inject(StructureInfoPanelArchive);
    structureTitlePanelConfigArchive = inject(StructureTitlePanelConfigArchive);
    structureFooterPanelConfigArchive = inject(StructureFooterPanelConfigArchive);
    bottomSummariesPanelEnabled$ = this.summariesWarehouse.onBottomEnabled(this.structureId);
    contentCssClass;
    headerCssClass;
    headerTopClasses;
    headerBottomClasses;
    topHeaderEnabled$ = this.structureHeaderTopEnabledArchive.on();
    bottomHeaderEnabled$ = this.structureHeaderBottomEnabledArchive.on();
    footerPanelEnabled$ = this.selectFooterPanelEnabled();
    items$ = this.selectItems();
    topSummariesPanelEnabled$ = this.summariesWarehouse.onTopEnabled(this.structureId);
    searchEnabled$ = this.searchWarehouse.onSearchEnabled(this.structureId);
    titlePanelEnabled$ = this.selectTitlePanelEnabled();
    infoPanelEnabled$ = this.selectInfoPanelEnabled();
    pagingModel$ = this.pagingWarehouse.onPaging(this.structureId);
    constructor(changeDetectorRef, elementRef, structureDefinition, className) {
        super(changeDetectorRef, elementRef);
        this.structureDefinition = structureDefinition;
        this.className = className;
        this.headerCssClass = `gui-${this.className}-header`;
        this.contentCssClass = `gui-${this.className}-content`;
        this.headerTopClasses = this.headerCssClass + ' gui-header-top';
        this.headerBottomClasses = this.headerCssClass + ' gui-header-bottom';
    }
    isColumnHeaderTopEnabled(topHeaderEnabled) {
        return this.structureDefinition.isHeaderEnabled() && topHeaderEnabled;
    }
    isColumnHeaderBottomEnabled(bottomHeaderEnabled) {
        return this.structureDefinition.isHeaderEnabled() && bottomHeaderEnabled;
    }
    isPagingTopEnabled(pagingModel) {
        return this.structureDefinition.getTopPaging().isEnabled() && pagingModel.isPagerTop();
    }
    isPagingBottomEnabled(pagingModel) {
        return this.structureDefinition.getBottomPaging().isEnabled() && pagingModel.isPagerBottom();
    }
    getSelectorName() {
        return 'gui-structure-blueprint';
    }
    selectTitlePanelEnabled() {
        return this.structureTitlePanelConfigArchive
            .on()
            .pipe(hermesMap((titlePanel) => {
            return titlePanel.enabled;
        }));
    }
    selectInfoPanelEnabled() {
        return this.structureInfoPanelArchive
            .on()
            .pipe(hermesMap((infoPanel) => {
            return infoPanel.isEnabled();
        }));
    }
    selectFooterPanelEnabled() {
        return this.structureFooterPanelConfigArchive
            .on()
            .pipe(hermesMap((footerPanel) => {
            return footerPanel.enabled;
        }));
    }
    selectItems() {
        return this.structureWarehouse.on(this.structureId)
            .pipe(hermesMap((structure) => {
            return structure.getEntities();
        }));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: StructureBlueprintComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.StructureDefinition }, { token: STRUCTURE_CSS_CLASS_NAME }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.0.2", type: StructureBlueprintComponent, selector: "div[gui-structure-blueprint]", usesInheritance: true, ngImport: i0, template: "<!---------- TOP ---------->\n<div *guiIf=\"titlePanelEnabled$\" gui-structure-title-panel></div>\n\n<div *guiIf=\"searchEnabled$\" gui-structure-top-panel></div>\n\n<ng-container *guiLet=\"pagingModel$; let pagingModel\">\n\t<div *ngIf=\"isPagingTopEnabled(pagingModel)\" [position]=\"0\"\n\t\t gui-paging>\n\t</div>\n</ng-container>\n\n<div [enabled]=\"topSummariesPanelEnabled$ | guiPush\" class=\"gui-structure-summaries-panel-top\"\n\t gui-structure-summaries-panel>\n</div>\n\n<ng-container *guiLet=\"topHeaderEnabled$; let topHeaderEnabled\">\n\t<div *ngIf=\"isColumnHeaderTopEnabled(topHeaderEnabled)\" [ngClass]=\"headerTopClasses\"\n\t\t gui-structure-header>\n\t</div>\n</ng-container>\n\n\n<!---------- MAIN ---------->\n<div [ngClass]=\"contentCssClass\" gui-structure-container>\n</div>\n\n<div [items]=\"items$ | guiPush\" gui-empty-source>\n</div>\n\n\n<!---------- BOTTOM ---------->\n<ng-container *guiLet=\"bottomHeaderEnabled$; let bottomHeaderEnabled\">\n\t<div *ngIf=\"isColumnHeaderBottomEnabled(bottomHeaderEnabled)\" [ngClass]=\"headerBottomClasses\"\n\t\t gui-structure-header>\n\t</div>\n</ng-container>\n\n<div [enabled]=\"bottomSummariesPanelEnabled$ | guiPush\" class=\"gui-structure-summaries-panel-bottom\"\n\t gui-structure-summaries-panel>\n</div>\n\n<ng-container *guiLet=\"footerPanelEnabled$; let footerPanelEnabled\">\n\t<div *ngIf=\"footerPanelEnabled\" gui-structure-footer-panel></div>\n</ng-container>\n\n<ng-container *guiLet=\"pagingModel$; let pagingModel\">\n\t<div *ngIf=\"isPagingBottomEnabled(pagingModel)\" [position]=\"1\"\n\t\t gui-paging>\n\t</div>\n</ng-container>\n\n<div *guiIf=\"infoPanelEnabled$\" gui-structure-info-panel></div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.GuiLetDirective, selector: "[guiLet]", inputs: ["guiLet"] }, { kind: "directive", type: i4.GuiIfDirective, selector: "[guiIf]", inputs: ["guiIf"] }, { kind: "component", type: i5.PagingComponent, selector: "div[gui-paging][position]", inputs: ["position", "minimal"] }, { kind: "component", type: i6.StructureSummariesPanelComponent, selector: "div[gui-structure-summaries-panel][enabled]", inputs: ["enabled"] }, { kind: "component", type: i7.StructureInfoPanelComponent, selector: "div[gui-structure-info-panel]" }, { kind: "component", type: i8.StructureTopPanelComponent, selector: "div[gui-structure-top-panel]" }, { kind: "component", type: i9.EmptySourceComponent, selector: "div[gui-empty-source][items]", inputs: ["items"] }, { kind: "component", type: i10.StructureHeaderComponent, selector: "div[gui-structure-header]" }, { kind: "component", type: i11.StructureContainerComponent, selector: "div[gui-structure-container]" }, { kind: "component", type: i12.StructureTitlePanelComponent, selector: "div[gui-structure-title-panel]" }, { kind: "component", type: i13.StructureFooterPanelComponent, selector: "div[gui-structure-footer-panel]" }, { kind: "pipe", type: i14.GuiPushPipe, name: "guiPush" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.2", ngImport: i0, type: StructureBlueprintComponent, decorators: [{
            type: Component,
            args: [{ selector: 'div[gui-structure-blueprint]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<!---------- TOP ---------->\n<div *guiIf=\"titlePanelEnabled$\" gui-structure-title-panel></div>\n\n<div *guiIf=\"searchEnabled$\" gui-structure-top-panel></div>\n\n<ng-container *guiLet=\"pagingModel$; let pagingModel\">\n\t<div *ngIf=\"isPagingTopEnabled(pagingModel)\" [position]=\"0\"\n\t\t gui-paging>\n\t</div>\n</ng-container>\n\n<div [enabled]=\"topSummariesPanelEnabled$ | guiPush\" class=\"gui-structure-summaries-panel-top\"\n\t gui-structure-summaries-panel>\n</div>\n\n<ng-container *guiLet=\"topHeaderEnabled$; let topHeaderEnabled\">\n\t<div *ngIf=\"isColumnHeaderTopEnabled(topHeaderEnabled)\" [ngClass]=\"headerTopClasses\"\n\t\t gui-structure-header>\n\t</div>\n</ng-container>\n\n\n<!---------- MAIN ---------->\n<div [ngClass]=\"contentCssClass\" gui-structure-container>\n</div>\n\n<div [items]=\"items$ | guiPush\" gui-empty-source>\n</div>\n\n\n<!---------- BOTTOM ---------->\n<ng-container *guiLet=\"bottomHeaderEnabled$; let bottomHeaderEnabled\">\n\t<div *ngIf=\"isColumnHeaderBottomEnabled(bottomHeaderEnabled)\" [ngClass]=\"headerBottomClasses\"\n\t\t gui-structure-header>\n\t</div>\n</ng-container>\n\n<div [enabled]=\"bottomSummariesPanelEnabled$ | guiPush\" class=\"gui-structure-summaries-panel-bottom\"\n\t gui-structure-summaries-panel>\n</div>\n\n<ng-container *guiLet=\"footerPanelEnabled$; let footerPanelEnabled\">\n\t<div *ngIf=\"footerPanelEnabled\" gui-structure-footer-panel></div>\n</ng-container>\n\n<ng-container *guiLet=\"pagingModel$; let pagingModel\">\n\t<div *ngIf=\"isPagingBottomEnabled(pagingModel)\" [position]=\"1\"\n\t\t gui-paging>\n\t</div>\n</ng-container>\n\n<div *guiIf=\"infoPanelEnabled$\" gui-structure-info-panel></div>\n" }]
        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.StructureDefinition }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [STRUCTURE_CSS_CLASS_NAME]
                }] }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RydWN0dXJlLmJsdWVwcmludC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9idWlsZC1jbGkvcHJvamVjdHMvbmd4LWxpc3Qvc3JjL2ZlYXR1cmUtdmlldy9ncmlkLXZpZXcvc3JjL2JsdWVwcmludC9zdHJ1Y3R1cmUuYmx1ZXByaW50LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvZmVhdHVyZS12aWV3L2dyaWQtdmlldy9zcmMvYmx1ZXByaW50L3N0cnVjdHVyZS5ibHVlcHJpbnQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQWMsTUFBTSxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVySSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMERBQTBELENBQUM7QUFJMUYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVFQUF1RSxDQUFDO0FBQ3BHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVFQUF1RSxDQUFDO0FBQzNHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUM3RixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwyRkFBMkYsQ0FBQztBQUV0SSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNERBQTRELENBQUM7QUFDN0YsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDbEcsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDeEcsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0seUVBQXlFLENBQUM7QUFDM0gsT0FBTyxFQUFFLGlDQUFp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QUksQ0FBQyxXQUFXLENBQUM7YUFDN0MsSUFBSSxDQUNKLFNBQVMsQ0FBQyxDQUFDLFNBQWlDLEVBQUUsRUFBRTtZQUMvQyxPQUFPLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FDRixDQUFDO0lBQ1IsQ0FBQzt1R0FqSFcsMkJBQTJCLGdIQTZDOUIsd0JBQXdCOzJGQTdDckIsMkJBQTJCLDJGQzlCeEMsMnBEQW9EQTs7MkZEdEJhLDJCQUEyQjtrQkFOdkMsU0FBUzsrQkFDQyw4QkFBOEIsbUJBRXZCLHVCQUF1QixDQUFDLE1BQU0saUJBQ2hDLGlCQUFpQixDQUFDLElBQUk7OzBCQStDbkMsTUFBTTsyQkFBQyx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgaW5qZWN0LCBJbmplY3QsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFNtYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vZmVhdHVyZS9jb21tb24vY29tcG9uZW50L3NyYy9zbWFydC1jb21wb25lbnQnO1xuaW1wb3J0IHsgU3RydWN0dXJlUmVhZE1vZGVsUm9vdCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL3N0cnVjdHVyZS1jb3JlL3NyYy9hcGkvcmVhZC9zdHJ1Y3R1cmUucmVhZC1tb2RlbC1yb290JztcbmltcG9ydCB7IFBhZ2luZ01vZGVsIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29yZS9zdHJ1Y3R1cmUvcGFnaW5nL3NyYy9hcGkvbW9kZWwvcGFnaW5nLm1vZGVsJztcbmltcG9ydCB7IFN0cnVjdHVyZURlZmluaXRpb24gfSBmcm9tICcuLi9zdHJ1Y3R1cmUvc3RydWN0dXJlLWRlZmluaXRpb24nO1xuaW1wb3J0IHsgU3RydWN0dXJlSWQgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9zdHJ1Y3R1cmUtY29yZS9zcmMvYXBpL2dsb2JhbC9zdHJ1Y3R1cmUuaWQnO1xuaW1wb3J0IHsgU3RydWN0dXJlV2FyZWhvdXNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29yZS9zdHJ1Y3R1cmUvc3RydWN0dXJlLWNvcmUvc3JjL2FwaS9zdHJ1Y3R1cmUud2FyZWhvdXNlJztcbmltcG9ydCB7IFBhZ2luZ1dhcmVob3VzZSB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL3BhZ2luZy9zcmMvYXBpL3BhZ2luZy53YXJlaG91c2UnO1xuaW1wb3J0IHsgU3RydWN0dXJlSW5mb1BhbmVsQXJjaGl2ZSB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL3N0cnVjdHVyZS1jb3JlL3NyYy9hcGkvcGFuZWwvaW5mby9zdHJ1Y3R1cmUuaW5mby1wYW5lbC5hcmNoaXZlJztcbmltcG9ydCB7IEZpbHRlcldhcmVob3VzZSB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvc3RydWN0dXJlL2ZpbHRlci9zcmMvYXBpL2ZpbHRlci53YXJlaG91c2UnO1xuaW1wb3J0IHsgU2VhcmNoV2FyZWhvdXNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29yZS9zdHJ1Y3R1cmUvc2VhcmNoL3NyYy9hcGkvc2VhcmNoLndhcmVob3VzZSc7XG5pbXBvcnQgeyBTVFJVQ1RVUkVfQ1NTX0NMQVNTX05BTUUgfSBmcm9tICcuL3N0cnVjdHVyZS10b2tlbnMnO1xuaW1wb3J0IHsgU3RydWN0dXJlSGVhZGVyVG9wRW5hYmxlZEFyY2hpdmUgfSBmcm9tICcuLi9oZWFkZXIvc3RydWN0dXJlLWhlYWRlci10b3AtZW5hYmxlZC5hcmNoaXZlJztcbmltcG9ydCB7IFN0cnVjdHVyZUhlYWRlckJvdHRvbUVuYWJsZWRBcmNoaXZlIH0gZnJvbSAnLi4vaGVhZGVyL3N0cnVjdHVyZS1oZWFkZXItYm90dG9tLWVuYWJsZWQuYXJjaGl2ZSc7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVUaXRsZVBhbmVsQ29uZmlnQXJjaGl2ZSB9IGZyb20gJy4uL3BhbmVsL2Jhbm5lci1wYW5lbHMvdGl0bGUtcGFuZWwvc3RydWN0dXJlLnRpdGxlLXBhbmVsLmNvbmZpZy1hcmNoaXZlJztcbmltcG9ydCB7IFN0cnVjdHVyZUZvb3RlclBhbmVsQ29uZmlnQXJjaGl2ZSB9IGZyb20gJy4uL3BhbmVsL2Jhbm5lci1wYW5lbHMvZm9vdGVyLXBhbmVsL3N0cnVjdHVyZS5mb290ZXItcGFuZWwuY29uZmlnLWFyY2hpdmUnO1xuXG5pbXBvcnQgeyBTdHJ1Y3R1cmVJbmZvUGFuZWxDb25maWcgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9zdHJ1Y3R1cmUtY29yZS9zcmMvYXBpL3BhbmVsL2luZm8vc3RydWN0dXJlLmluZm8tcGFuZWwuY29uZmlnJztcbmltcG9ydCB7IFN0cnVjdHVyZUJhbm5lclBhbmVsQ29uZmlnIH0gZnJvbSAnLi4vcGFuZWwvYmFubmVyLXBhbmVscy9zdHJ1Y3R1cmUtYmFubmVyLXBhbmVsLmNvbmZpZyc7XG5pbXBvcnQgeyBTdW1tYXJpZXNXYXJlaG91c2UgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL3N0cnVjdHVyZS9zdW1tYXJpZXMvc3JjL2FwaS9zdW1tYXJpZXMud2FyZWhvdXNlJztcbmltcG9ydCB7IGhlcm1lc01hcCwgSGVybWVzT2JzZXJ2YWJsZSB9IGZyb20gJ0BnZW5lcmljLXVpL2hlcm1lcyc7XG5cblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnZGl2W2d1aS1zdHJ1Y3R1cmUtYmx1ZXByaW50XScsXG5cdHRlbXBsYXRlVXJsOiAnLi9zdHJ1Y3R1cmUuYmx1ZXByaW50LmNvbXBvbmVudC5odG1sJyxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgU3RydWN0dXJlQmx1ZXByaW50Q29tcG9uZW50IGV4dGVuZHMgU21hcnRDb21wb25lbnQge1xuXG5cdHByaXZhdGUgcmVhZG9ubHkgc3RydWN0dXJlSWQgPSBpbmplY3QoU3RydWN0dXJlSWQpO1xuXHRwcml2YXRlIHJlYWRvbmx5IHN1bW1hcmllc1dhcmVob3VzZSA9IGluamVjdChTdW1tYXJpZXNXYXJlaG91c2UpO1xuXHRwcml2YXRlIHJlYWRvbmx5IHN0cnVjdHVyZUhlYWRlclRvcEVuYWJsZWRBcmNoaXZlID0gaW5qZWN0KFN0cnVjdHVyZUhlYWRlclRvcEVuYWJsZWRBcmNoaXZlKTtcblx0cHJpdmF0ZSByZWFkb25seSBzdHJ1Y3R1cmVIZWFkZXJCb3R0b21FbmFibGVkQXJjaGl2ZSA9IGluamVjdChTdHJ1Y3R1cmVIZWFkZXJCb3R0b21FbmFibGVkQXJjaGl2ZSk7XG5cdHByaXZhdGUgcmVhZG9ubHkgc2VhcmNoV2FyZWhvdXNlID0gaW5qZWN0KFNlYXJjaFdhcmVob3VzZSk7XG5cdHByaXZhdGUgcmVhZG9ubHkgcGFnaW5nV2FyZWhvdXNlID0gaW5qZWN0KFBhZ2luZ1dhcmVob3VzZSk7XG5cdHByaXZhdGUgcmVhZG9ubHkgc3RydWN0dXJlV2FyZWhvdXNlID0gaW5qZWN0KFN0cnVjdHVyZVdhcmVob3VzZSk7XG5cdHByaXZhdGUgcmVhZG9ubHkgc3RydWN0dXJlSW5mb1BhbmVsQXJjaGl2ZSA9IGluamVjdChTdHJ1Y3R1cmVJbmZvUGFuZWxBcmNoaXZlKTtcblx0cHJpdmF0ZSByZWFkb25seSBzdHJ1Y3R1cmVUaXRsZVBhbmVsQ29uZmlnQXJjaGl2ZSA9IGluamVjdChTdHJ1Y3R1cmVUaXRsZVBhbmVsQ29uZmlnQXJjaGl2ZSk7XG5cdHByaXZhdGUgcmVhZG9ubHkgc3RydWN0dXJlRm9vdGVyUGFuZWxDb25maWdBcmNoaXZlID0gaW5qZWN0KFN0cnVjdHVyZUZvb3RlclBhbmVsQ29uZmlnQXJjaGl2ZSk7XG5cblx0cmVhZG9ubHkgYm90dG9tU3VtbWFyaWVzUGFuZWxFbmFibGVkJCA9IHRoaXMuc3VtbWFyaWVzV2FyZWhvdXNlLm9uQm90dG9tRW5hYmxlZCh0aGlzLnN0cnVjdHVyZUlkKTtcblxuXHRyZWFkb25seSBjb250ZW50Q3NzQ2xhc3M6IHN0cmluZztcblxuXHRyZWFkb25seSBoZWFkZXJDc3NDbGFzczogc3RyaW5nO1xuXG5cdHJlYWRvbmx5IGhlYWRlclRvcENsYXNzZXM6IHN0cmluZztcblxuXHRyZWFkb25seSBoZWFkZXJCb3R0b21DbGFzc2VzOiBzdHJpbmc7XG5cblx0cmVhZG9ubHkgdG9wSGVhZGVyRW5hYmxlZCQgPSB0aGlzLnN0cnVjdHVyZUhlYWRlclRvcEVuYWJsZWRBcmNoaXZlLm9uKCk7XG5cblx0cmVhZG9ubHkgYm90dG9tSGVhZGVyRW5hYmxlZCQgPSB0aGlzLnN0cnVjdHVyZUhlYWRlckJvdHRvbUVuYWJsZWRBcmNoaXZlLm9uKCk7XG5cblx0cmVhZG9ubHkgZm9vdGVyUGFuZWxFbmFibGVkJCA9IHRoaXMuc2VsZWN0Rm9vdGVyUGFuZWxFbmFibGVkKCk7XG5cblx0cmVhZG9ubHkgaXRlbXMkID0gdGhpcy5zZWxlY3RJdGVtcygpO1xuXG5cdHJlYWRvbmx5IHRvcFN1bW1hcmllc1BhbmVsRW5hYmxlZCQgPSB0aGlzLnN1bW1hcmllc1dhcmVob3VzZS5vblRvcEVuYWJsZWQodGhpcy5zdHJ1Y3R1cmVJZCk7XG5cblx0cmVhZG9ubHkgc2VhcmNoRW5hYmxlZCQgPSB0aGlzLnNlYXJjaFdhcmVob3VzZS5vblNlYXJjaEVuYWJsZWQodGhpcy5zdHJ1Y3R1cmVJZCk7XG5cblx0cmVhZG9ubHkgdGl0bGVQYW5lbEVuYWJsZWQkID0gdGhpcy5zZWxlY3RUaXRsZVBhbmVsRW5hYmxlZCgpO1xuXG5cdHJlYWRvbmx5IGluZm9QYW5lbEVuYWJsZWQkID0gdGhpcy5zZWxlY3RJbmZvUGFuZWxFbmFibGVkKCk7XG5cblx0cmVhZG9ubHkgcGFnaW5nTW9kZWwkID0gdGhpcy5wYWdpbmdXYXJlaG91c2Uub25QYWdpbmcodGhpcy5zdHJ1Y3R1cmVJZCk7XG5cblx0Y29uc3RydWN0b3IoXG5cdFx0Y2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuXHRcdGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG5cdFx0cHJpdmF0ZSByZWFkb25seSBzdHJ1Y3R1cmVEZWZpbml0aW9uOiBTdHJ1Y3R1cmVEZWZpbml0aW9uLFxuXHRcdEBJbmplY3QoU1RSVUNUVVJFX0NTU19DTEFTU19OQU1FKSBwcml2YXRlIGNsYXNzTmFtZTogc3RyaW5nXG5cdCkge1xuXHRcdHN1cGVyKGNoYW5nZURldGVjdG9yUmVmLCBlbGVtZW50UmVmKTtcblxuXHRcdHRoaXMuaGVhZGVyQ3NzQ2xhc3MgPSBgZ3VpLSR7dGhpcy5jbGFzc05hbWV9LWhlYWRlcmA7XG5cdFx0dGhpcy5jb250ZW50Q3NzQ2xhc3MgPSBgZ3VpLSR7dGhpcy5jbGFzc05hbWV9LWNvbnRlbnRgO1xuXG5cdFx0dGhpcy5oZWFkZXJUb3BDbGFzc2VzID0gdGhpcy5oZWFkZXJDc3NDbGFzcyArICcgZ3VpLWhlYWRlci10b3AnO1xuXHRcdHRoaXMuaGVhZGVyQm90dG9tQ2xhc3NlcyA9IHRoaXMuaGVhZGVyQ3NzQ2xhc3MgKyAnIGd1aS1oZWFkZXItYm90dG9tJztcblx0fVxuXG5cdGlzQ29sdW1uSGVhZGVyVG9wRW5hYmxlZCh0b3BIZWFkZXJFbmFibGVkOiBib29sZWFuKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuc3RydWN0dXJlRGVmaW5pdGlvbi5pc0hlYWRlckVuYWJsZWQoKSAmJiB0b3BIZWFkZXJFbmFibGVkO1xuXHR9XG5cblx0aXNDb2x1bW5IZWFkZXJCb3R0b21FbmFibGVkKGJvdHRvbUhlYWRlckVuYWJsZWQ6IGJvb2xlYW4pOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5zdHJ1Y3R1cmVEZWZpbml0aW9uLmlzSGVhZGVyRW5hYmxlZCgpICYmIGJvdHRvbUhlYWRlckVuYWJsZWQ7XG5cdH1cblxuXHRpc1BhZ2luZ1RvcEVuYWJsZWQocGFnaW5nTW9kZWw6IFBhZ2luZ01vZGVsKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuc3RydWN0dXJlRGVmaW5pdGlvbi5nZXRUb3BQYWdpbmcoKS5pc0VuYWJsZWQoKSAmJiBwYWdpbmdNb2RlbC5pc1BhZ2VyVG9wKCk7XG5cdH1cblxuXHRpc1BhZ2luZ0JvdHRvbUVuYWJsZWQocGFnaW5nTW9kZWw6IFBhZ2luZ01vZGVsKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMuc3RydWN0dXJlRGVmaW5pdGlvbi5nZXRCb3R0b21QYWdpbmcoKS5pc0VuYWJsZWQoKSAmJiBwYWdpbmdNb2RlbC5pc1BhZ2VyQm90dG9tKCk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZ2V0U2VsZWN0b3JOYW1lKCk6IHN0cmluZyB7XG5cdFx0cmV0dXJuICdndWktc3RydWN0dXJlLWJsdWVwcmludCc7XG5cdH1cblxuXHRwcml2YXRlIHNlbGVjdFRpdGxlUGFuZWxFbmFibGVkKCk6IEhlcm1lc09ic2VydmFibGU8Ym9vbGVhbj4ge1xuXHRcdHJldHVybiB0aGlzLnN0cnVjdHVyZVRpdGxlUGFuZWxDb25maWdBcmNoaXZlXG5cdFx0XHRcdCAgIC5vbigpXG5cdFx0XHRcdCAgIC5waXBlKFxuXHRcdFx0XHRcdCAgIGhlcm1lc01hcCgodGl0bGVQYW5lbDogU3RydWN0dXJlQmFubmVyUGFuZWxDb25maWcpID0+IHtcblx0XHRcdFx0XHRcdCAgIHJldHVybiB0aXRsZVBhbmVsLmVuYWJsZWQ7XG5cdFx0XHRcdFx0ICAgfSlcblx0XHRcdFx0ICAgKTtcblx0fVxuXG5cdHByaXZhdGUgc2VsZWN0SW5mb1BhbmVsRW5hYmxlZCgpOiBIZXJtZXNPYnNlcnZhYmxlPGJvb2xlYW4+IHtcblx0XHRyZXR1cm4gdGhpcy5zdHJ1Y3R1cmVJbmZvUGFuZWxBcmNoaXZlXG5cdFx0XHRcdCAgIC5vbigpXG5cdFx0XHRcdCAgIC5waXBlKFxuXHRcdFx0XHRcdCAgIGhlcm1lc01hcCgoaW5mb1BhbmVsOiBTdHJ1Y3R1cmVJbmZvUGFuZWxDb25maWcpID0+IHtcblx0XHRcdFx0XHRcdCAgIHJldHVybiBpbmZvUGFuZWwuaXNFbmFibGVkKCk7XG5cdFx0XHRcdFx0ICAgfSlcblx0XHRcdFx0ICAgKTtcblx0fVxuXG5cdHByaXZhdGUgc2VsZWN0Rm9vdGVyUGFuZWxFbmFibGVkKCk6IEhlcm1lc09ic2VydmFibGU8Ym9vbGVhbj4ge1xuXHRcdHJldHVybiB0aGlzLnN0cnVjdHVyZUZvb3RlclBhbmVsQ29uZmlnQXJjaGl2ZVxuXHRcdFx0XHQgICAub24oKVxuXHRcdFx0XHQgICAucGlwZShcblx0XHRcdFx0XHQgICBoZXJtZXNNYXAoKGZvb3RlclBhbmVsOiBTdHJ1Y3R1cmVCYW5uZXJQYW5lbENvbmZpZykgPT4ge1xuXHRcdFx0XHRcdFx0ICAgcmV0dXJuIGZvb3RlclBhbmVsLmVuYWJsZWQ7XG5cdFx0XHRcdFx0ICAgfSlcblx0XHRcdFx0ICAgKTtcblx0fVxuXG5cdHByaXZhdGUgc2VsZWN0SXRlbXMoKSB7XG5cdFx0cmV0dXJuIHRoaXMuc3RydWN0dXJlV2FyZWhvdXNlLm9uKHRoaXMuc3RydWN0dXJlSWQpXG5cdFx0XHRcdCAgIC5waXBlKFxuXHRcdFx0XHRcdCAgIGhlcm1lc01hcCgoc3RydWN0dXJlOiBTdHJ1Y3R1cmVSZWFkTW9kZWxSb290KSA9PiB7XG5cdFx0XHRcdFx0XHQgICByZXR1cm4gc3RydWN0dXJlLmdldEVudGl0aWVzKCk7XG5cdFx0XHRcdFx0ICAgfSlcblx0XHRcdFx0ICAgKTtcblx0fVxuXG59XG4iLCI8IS0tLS0tLS0tLS0gVE9QIC0tLS0tLS0tLS0+XG48ZGl2ICpndWlJZj1cInRpdGxlUGFuZWxFbmFibGVkJFwiIGd1aS1zdHJ1Y3R1cmUtdGl0bGUtcGFuZWw+PC9kaXY+XG5cbjxkaXYgKmd1aUlmPVwic2VhcmNoRW5hYmxlZCRcIiBndWktc3RydWN0dXJlLXRvcC1wYW5lbD48L2Rpdj5cblxuPG5nLWNvbnRhaW5lciAqZ3VpTGV0PVwicGFnaW5nTW9kZWwkOyBsZXQgcGFnaW5nTW9kZWxcIj5cblx0PGRpdiAqbmdJZj1cImlzUGFnaW5nVG9wRW5hYmxlZChwYWdpbmdNb2RlbClcIiBbcG9zaXRpb25dPVwiMFwiXG5cdFx0IGd1aS1wYWdpbmc+XG5cdDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG5cbjxkaXYgW2VuYWJsZWRdPVwidG9wU3VtbWFyaWVzUGFuZWxFbmFibGVkJCB8IGd1aVB1c2hcIiBjbGFzcz1cImd1aS1zdHJ1Y3R1cmUtc3VtbWFyaWVzLXBhbmVsLXRvcFwiXG5cdCBndWktc3RydWN0dXJlLXN1bW1hcmllcy1wYW5lbD5cbjwvZGl2PlxuXG48bmctY29udGFpbmVyICpndWlMZXQ9XCJ0b3BIZWFkZXJFbmFibGVkJDsgbGV0IHRvcEhlYWRlckVuYWJsZWRcIj5cblx0PGRpdiAqbmdJZj1cImlzQ29sdW1uSGVhZGVyVG9wRW5hYmxlZCh0b3BIZWFkZXJFbmFibGVkKVwiIFtuZ0NsYXNzXT1cImhlYWRlclRvcENsYXNzZXNcIlxuXHRcdCBndWktc3RydWN0dXJlLWhlYWRlcj5cblx0PC9kaXY+XG48L25nLWNvbnRhaW5lcj5cblxuXG48IS0tLS0tLS0tLS0gTUFJTiAtLS0tLS0tLS0tPlxuPGRpdiBbbmdDbGFzc109XCJjb250ZW50Q3NzQ2xhc3NcIiBndWktc3RydWN0dXJlLWNvbnRhaW5lcj5cbjwvZGl2PlxuXG48ZGl2IFtpdGVtc109XCJpdGVtcyQgfCBndWlQdXNoXCIgZ3VpLWVtcHR5LXNvdXJjZT5cbjwvZGl2PlxuXG5cbjwhLS0tLS0tLS0tLSBCT1RUT00gLS0tLS0tLS0tLT5cbjxuZy1jb250YWluZXIgKmd1aUxldD1cImJvdHRvbUhlYWRlckVuYWJsZWQkOyBsZXQgYm90dG9tSGVhZGVyRW5hYmxlZFwiPlxuXHQ8ZGl2ICpuZ0lmPVwiaXNDb2x1bW5IZWFkZXJCb3R0b21FbmFibGVkKGJvdHRvbUhlYWRlckVuYWJsZWQpXCIgW25nQ2xhc3NdPVwiaGVhZGVyQm90dG9tQ2xhc3Nlc1wiXG5cdFx0IGd1aS1zdHJ1Y3R1cmUtaGVhZGVyPlxuXHQ8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuXG48ZGl2IFtlbmFibGVkXT1cImJvdHRvbVN1bW1hcmllc1BhbmVsRW5hYmxlZCQgfCBndWlQdXNoXCIgY2xhc3M9XCJndWktc3RydWN0dXJlLXN1bW1hcmllcy1wYW5lbC1ib3R0b21cIlxuXHQgZ3VpLXN0cnVjdHVyZS1zdW1tYXJpZXMtcGFuZWw+XG48L2Rpdj5cblxuPG5nLWNvbnRhaW5lciAqZ3VpTGV0PVwiZm9vdGVyUGFuZWxFbmFibGVkJDsgbGV0IGZvb3RlclBhbmVsRW5hYmxlZFwiPlxuXHQ8ZGl2ICpuZ0lmPVwiZm9vdGVyUGFuZWxFbmFibGVkXCIgZ3VpLXN0cnVjdHVyZS1mb290ZXItcGFuZWw+PC9kaXY+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqZ3VpTGV0PVwicGFnaW5nTW9kZWwkOyBsZXQgcGFnaW5nTW9kZWxcIj5cblx0PGRpdiAqbmdJZj1cImlzUGFnaW5nQm90dG9tRW5hYmxlZChwYWdpbmdNb2RlbClcIiBbcG9zaXRpb25dPVwiMVwiXG5cdFx0IGd1aS1wYWdpbmc+XG5cdDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG5cbjxkaXYgKmd1aUlmPVwiaW5mb1BhbmVsRW5hYmxlZCRcIiBndWktc3RydWN0dXJlLWluZm8tcGFuZWw+PC9kaXY+XG4iXX0=