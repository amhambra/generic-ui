import { SelectedRowChangedEvent } from '../../core/selected-row-changed.event';
import { RowSelectedArchive } from './row-selected.archive';
import { RowSelectedReadModel } from '../../api/row-selected/row-selected.read-model';
export class SelectedRowChangedEventHandler {
    rowSelectedArchive;
    constructor(rowSelectedArchive) {
        this.rowSelectedArchive = rowSelectedArchive;
    }
    static services = [RowSelectedArchive];
    forEvent() {
        return SelectedRowChangedEvent;
    }
    handle(rowChangedEvent) {
        if (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {
            const rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());
            this.rowSelectedArchive.next(rowChangedEvent.getAggregateId(), rowSelectedRead);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0ZWQtcm93LWNoYW5nZWQuZXZlbnQtaGFuZGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2J1aWxkLWNsaS9wcm9qZWN0cy9uZ3gtbGlzdC9zcmMvY29yZS9zdHJ1Y3R1cmUvZm9ybWF0aW9uL3NyYy9jb3JlLXJlYWQvcm93LXNlbGVjdGVkL3NlbGVjdGVkLXJvdy1jaGFuZ2VkLmV2ZW50LWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFHdEYsTUFBTSxPQUFPLDhCQUE4QjtJQUViO0lBQTdCLFlBQTZCLGtCQUFzQztRQUF0Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBQ25FLENBQUM7SUFFRCxNQUFNLENBQVUsUUFBUSxHQUFHLENBQUMsa0JBQWtCLENBQVUsQ0FBQztJQUV6RCxRQUFRO1FBQ1AsT0FBTyx1QkFBdUIsQ0FBQztJQUNoQyxDQUFDO0lBRUQsTUFBTSxDQUFDLGVBQXdDO1FBRTlDLElBQUksZUFBZSxDQUFDLGFBQWEsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFFO1lBRTdELE1BQU0sZUFBZSxHQUFHLElBQUksb0JBQW9CLENBQy9DLGVBQWUsQ0FBQyxlQUFlLEVBQUUsRUFDakMsZUFBZSxDQUFDLGFBQWEsRUFBRSxFQUMvQixlQUFlLENBQUMsZUFBZSxFQUFFLENBQ2pDLENBQUM7WUFFRixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxjQUFjLEVBQUUsRUFBRSxlQUFlLENBQUMsQ0FBQztTQUNoRjtJQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEb21haW5FdmVudEhhbmRsZXIsIERvbWFpbkV2ZW50VHlwZSB9IGZyb20gJ0BnZW5lcmljLXVpL2hlcm1lcyc7XG5cbmltcG9ydCB7IFNlbGVjdGVkUm93Q2hhbmdlZEV2ZW50IH0gZnJvbSAnLi4vLi4vY29yZS9zZWxlY3RlZC1yb3ctY2hhbmdlZC5ldmVudCc7XG5pbXBvcnQgeyBSb3dTZWxlY3RlZEFyY2hpdmUgfSBmcm9tICcuL3Jvdy1zZWxlY3RlZC5hcmNoaXZlJztcbmltcG9ydCB7IFN0cnVjdHVyZUlkIH0gZnJvbSAnLi4vLi4vLi4vLi4vc3RydWN0dXJlLWNvcmUvc3JjL2FwaS9nbG9iYWwvc3RydWN0dXJlLmlkJztcbmltcG9ydCB7IFJvd1NlbGVjdGVkUmVhZE1vZGVsIH0gZnJvbSAnLi4vLi4vYXBpL3Jvdy1zZWxlY3RlZC9yb3ctc2VsZWN0ZWQucmVhZC1tb2RlbCc7XG5cblxuZXhwb3J0IGNsYXNzIFNlbGVjdGVkUm93Q2hhbmdlZEV2ZW50SGFuZGxlciBpbXBsZW1lbnRzIERvbWFpbkV2ZW50SGFuZGxlcjxTdHJ1Y3R1cmVJZCwgU2VsZWN0ZWRSb3dDaGFuZ2VkRXZlbnQ+IHtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHJvd1NlbGVjdGVkQXJjaGl2ZTogUm93U2VsZWN0ZWRBcmNoaXZlKSB7XG5cdH1cblxuXHRzdGF0aWMgcmVhZG9ubHkgc2VydmljZXMgPSBbUm93U2VsZWN0ZWRBcmNoaXZlXSBhcyBjb25zdDtcblxuXHRmb3JFdmVudCgpOiBEb21haW5FdmVudFR5cGU8U2VsZWN0ZWRSb3dDaGFuZ2VkRXZlbnQ+IHtcblx0XHRyZXR1cm4gU2VsZWN0ZWRSb3dDaGFuZ2VkRXZlbnQ7XG5cdH1cblxuXHRoYW5kbGUocm93Q2hhbmdlZEV2ZW50OiBTZWxlY3RlZFJvd0NoYW5nZWRFdmVudCk6IHZvaWQge1xuXG5cdFx0aWYgKHJvd0NoYW5nZWRFdmVudC5vZk1lc3NhZ2VUeXBlKCdTZWxlY3RlZFJvd0NoYW5nZWRFdmVudCcpKSB7XG5cblx0XHRcdGNvbnN0IHJvd1NlbGVjdGVkUmVhZCA9IG5ldyBSb3dTZWxlY3RlZFJlYWRNb2RlbChcblx0XHRcdFx0cm93Q2hhbmdlZEV2ZW50LmdldFNlbGVjdGVkUm93cygpLFxuXHRcdFx0XHRyb3dDaGFuZ2VkRXZlbnQuaXNBbGxTZWxlY3RlZCgpLFxuXHRcdFx0XHRyb3dDaGFuZ2VkRXZlbnQuaXNBbGxVbnNlbGVjdGVkKClcblx0XHRcdCk7XG5cblx0XHRcdHRoaXMucm93U2VsZWN0ZWRBcmNoaXZlLm5leHQocm93Q2hhbmdlZEV2ZW50LmdldEFnZ3JlZ2F0ZUlkKCksIHJvd1NlbGVjdGVkUmVhZCk7XG5cdFx0fVxuXHR9XG5cbn1cbiJdfQ==