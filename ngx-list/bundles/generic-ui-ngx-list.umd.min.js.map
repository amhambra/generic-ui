{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/row-selection.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/event/source-event.service.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view-gateway.declarations.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.api-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ListViewGateway","structureId","sourceCommandService","simpleChanges","items","setOrigin","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","Injectable","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","structureGlobalId","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandDispatcher","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SelectedRow","data","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandDispatcher","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","FieldId","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","ReadModelObject","Boolean","Number","PagingConverter","aggregate","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","elementRef","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandDispatcher","handle","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelection","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","sorting","setSortingConfig","filtering","quickFilters","ngOnInit","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","NextPageEvent","PrevPageEvent","PagingEventRepository","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventService","StructureColumnMenuConfig","sort","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","changeDetectorRef","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","PagingPosition","detectChanges","isPagingVisible","[class.gui-paging]","Renderer2","ElementRef","ChangeDetectorRef","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandDispatcher","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","from","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandDispatcher","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","[class.gui-icon]","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","clear","reset","searchInputSubscription","controls","valueChanges","debounceTime","[class.gui-search-bar]","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","matcher","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","configs","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldDomainModule","FieldCommandDispatcher","FieldApiModule","FieldFeatureModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","calculateAllSelected","calculateAllUnselected","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","ngAfterViewInit","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandDispatcher","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","[class.gui-list-view-source]","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","[class.gui-list-view-layout]","ListViewItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ListViewContainerCardComponent","[class.gui-list-container-card]","ListViewCardItemComponent","[class.gui-list-card]","ListViewContainerModeSelectComponent","options","listContainerMode","changeContainerMode","[class.gui-list-mode-select]","ListViewCreatedEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","save","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","defineAggregate","Gate","isDefined","propertyName","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","ListViewSearchingGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","log","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","FilterMenuTriggerComponent","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","[class.gui-filter-value]","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","ActiveSearchComponent","clearSearch","stopPropagation","FilterMenuFeatureModule","entryComponents","ListViewFeatureModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","totalItemsSize","preparedItemsSize","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","compositionCommandService","enabledColumnsCount","reduce","accumulator","toggleColumn","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","StructureColumnManagerModule","StructureInfoIconComponent","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","StructureSchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","filterFieldName","_a","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","NumberEditTemplateComponent","fb","StringEditTemplateComponent","setSelectionRange","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","text","CellValueType","FunctionViewComponent","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnConfig","presentation","header","align","setInitialAlign","getPresentation","getColumnConfig","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","cellEditingEnabled","isBooleanDataType","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","ColumnDefinition","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","removeColumn","updatedWidths","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","components","exportDeclarations","compositionKey","CompositionModule","FabricDatePickerModule","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","getValues","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","isPlatformBrowser","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","prevValue","selectRow","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","FieldsInitedEventHandler","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../domain-api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","export interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n","import { ListViewMode } from '../../../../structure/list/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../domain-api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListPaging, GuiListSearching, GuiListView } from '../domain-api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/domain-api/field.config';\nimport { SearchConfig } from '../../../structure/search/domain-api/search-config';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandDispatcher } from '../../../source/domain-api/source.command-dispatcher';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport abstract class ListViewGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandDispatcher\n\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SetEnabledSelectionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SetSelectionModeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SelectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class UnselectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../../../structure/source/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class SourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../../structure/source/domain-api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../../structure/source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../structure/source/domain-api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterConfig } from '../../domain-api/filter-config';\n\nexport class SetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class RemoveAllFiltersCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class AddFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterId } from '../../filter.id';\n\n\nexport class RemoveFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class SelectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class UnselectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class SelectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class UnselectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from '../domain/filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { QuickFiltersConfig } from '../../domain-api/quick-filters.config';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandDispatcher } from '../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../structure/source/domain/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../structure/filter/domain-api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../../structure/filter/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../../../structure/source/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../../structure/filter/domain-api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../lib/composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { OriginId } from '../origin-id';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends Command {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../field/domain-api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../../../structure/source/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../../structure/field/domain-api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../../structure/source/domain-api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../../structure/source/domain-api/prepared/structure.prepared-items.repository';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../../lib/structure/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../../structure/search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../../structure/search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../../structure/search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../../../../structure/source/domain-api/read/source';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../../../../structure/source/domain-api/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/domain-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../../structure/source/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../../../structure/source/domain-api/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../../structure/source/domain-api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../../structure/search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../../structure/field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../../structure/field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../../structure/field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Field } from '../../../../../structure/field/domain/core/field/field';\nimport { ColumnFieldId } from '../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandDispatcher: CompositionCommandDispatcher) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandDispatcher.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../structure/filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../../../structure/source/domain-api/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../../../structure/source/domain-api/source.command-dispatcher';\nimport { SourceEventService } from '../../../../structure/source/domain-api/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../../structure/source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../../structure/search/domain-api/search.event-repository';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandDispatcher } from '../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchCommandDispatcher } from '../../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { SelectedRow } from '../../../../structure/source/domain-api/formation/selected-row';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandDispatcher,\n\t\tprotected searchCommandDispatcher: SearchCommandDispatcher,\n\t\tprotected fieldCommandDispatcher: FieldCommandDispatcher,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandDispatcher: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandDispatcher,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SelectedRowChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { SelectedRow } from './selected-row';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\t\t   const selectedRows = event.getSelectedRows();\n\n\t\t\t\t\t\t   return this.sourceWarehouse\n\t\t\t\t\t\t\t\t\t  .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t\t\t  let selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t\t\t  length = items.length;\n\n\t\t\t\t\t\t\t\t\t\t\t  for (let i = 0; i < length; i += 1) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t  let item = items[i];\n\n\t\t\t\t\t\t\t\t\t\t\t\t  if (selectedRows.some((row: string) => row === item.getId().toString())) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t  selectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t\t  return selectedItems;\n\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class SearchEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SearchPhraseSetDomainEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SortOrder } from '../../../../lib/composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../lib/composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SortingCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { AggregateId } from '@generic-ui/hermes';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../lib/structure/domain-api/read/structure.read-model-root';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class SortingWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SortingEventRepository {\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../lib/composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandDispatcher } from './sorting.command-dispatcher';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandDispatcher,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../lib/structure/domain/structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../source/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/core/field/data/data-type';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandDispatcher {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandDispatcher } from './search.command-dispatcher';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandDispatcher,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../../lib/structure/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandDispatcher } from '../domain-api/search.command-dispatcher';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/core/field/field.id';\nimport { DataType } from '../../domain/core/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/core/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../../lib/structure/domain/structure/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../../domain-api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../../domain-api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './core/field-collection.factory';\nimport { DataFieldFactory } from './core/field/data/data-field.factory';\nimport { FieldIdGenerator } from './core/field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './core/field/field.factory';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandDispatcher {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandDispatcher } from './field.command-dispatcher';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandDispatcher,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i+= 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../domain-api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../domain-api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../domain-api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../domain-api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventService } from './formation/formation-event.service';\nimport { FormationCommandDispatcher } from './formation/formation.command-dispatcher';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandDispatcher,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventService,\n\n\t\tFormationCommandDispatcher,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../domain-api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../domain-api/source.api-module';\nimport { RowSelectionModeRepository } from '../domain-api/formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive,\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../../structure/source/domain-api/source.command-dispatcher';\nimport { SourceEventService } from '../../../structure/source/domain-api/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../../structure/source/domain-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../structure/source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../structure/search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { SortingCommandDispatcher } from '../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { SearchCommandDispatcher } from '../../../structure/search/domain-api/search.command-dispatcher';\nimport { FieldCommandDispatcher } from '../../../structure/field/domain-api/field.command-dispatcher';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../composition/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../../structure/filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../../structure/filter/feature/config/filter-container-token';\nimport { FormationCommandDispatcher } from '../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { RowSelectionTypeArchive } from '../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../../structure/source/feature/source.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tsearchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tfieldCommandDispatcher: FieldCommandDispatcher,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../lib/composition/domain-api/read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\nexport class SetListViewModeCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ToggleListViewSelectorCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandDispatcher {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { ListViewGateway } from './gateway/list-view.gateway';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureIdGenerator } from '../../../lib/structure/feature/structure-id.generator';\nimport { structureIdFactory } from '../../../lib/structure/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../../lib/structure/domain-api/structure.command-dispatcher';\nimport { SourceCommandDispatcher } from '../../source/domain-api/source.command-dispatcher';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../../lib/structure/feature/local/local-providers';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../domain-api/read/list-view.read-model-root-id';\nimport { ListViewCommandDispatcher } from '../domain-api/list-view.command-dispatcher';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<gui-list-view-layout></gui-list-view-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent extends ListViewGateway implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandDispatcher\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'gui-list-view-source',\n\ttemplate: `\n\n\t\t<gui-list-view-item *ngFor=\"let element of source\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"template\">\n\t\t</gui-list-view-item>\n\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-source]': `\"true\"`\n\t}\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../domain-api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../domain-api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../domain-api/mode/selector/list-view.selector.repository';\n\n@Component({\n\tselector: 'gui-list-view-layout',\n\ttemplate: `\n\n\t\t<div class=\"gui-list-panel-search\">\n\n\t\t\t<gui-search-bar *ngIf=\"searchBarEnabled\"></gui-search-bar>\n\n\t\t\t<!--\t\t\t<gui-sorting-selector></gui-sorting-selector>-->\n\t\t\t<!--\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>\n\t\t</div>\n\t\t<div class=\"gui-list-panel-top\">\n\t\t\t<gui-list-mode-select *ngIf=\"selectorEnabled\"></gui-list-mode-select>\n\n\t\t\t<gui-paging [minimal]=\"true\" [position]=\"0\"></gui-paging>\n\t\t</div>\n\n\t\t<gui-list-view-source *ngIf=\"listModeEnabled\"></gui-list-view-source>\n\n\t\t<gui-list-container-card *ngIf=\"cardModeEnabled\"></gui-list-container-card>\n\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-layout]': `\"true\"`\n\t}\n})\nexport class ListViewLayoutComponent extends SmartComponent {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t// private readonly c: ListViewModeRepository,\n\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listViewSelectorRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'gui-list-view-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\n\n@Component({\n\tselector: 'gui-list-container-card',\n\ttemplate: `\n\n\t\t<gui-list-card-item *ngFor=\"let element of items\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"cardTemplate\">\n\t\t</gui-list-card-item>\n\n\t\t<gui-empty-source [items]=\"items\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-container-card]': `\"true\"`\n\t}\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'gui-list-card-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-card-wrapper\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-card-wrapper\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-card]': `\"true\"`\n\t}\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../domain-api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-list-mode-select',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeContainerMode($event)\"\n\t\t\t\t\t[options]=\"options\"\n\t\t\t\t\t[selected]=\"listContainerMode\">\n\t\t</gui-select>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-mode-select]': `\"true\"`\n\t}\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent {\n\n\toptions = Object.keys(ListViewMode)\n\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t.filter((val) => !Number.isInteger(val));\n\n\tlistContainerMode: ListViewMode;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = mode;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangeContainerMode(mode: ListViewMode): void {\n\t\tthis.listViewModeRepository.setMode(mode, this.listViewReadModelRootId.toAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewCreatedEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\n\nexport class ListViewCreatedAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\n\nexport class ListViewModeSetEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\nexport class ListViewModeSetAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tmode: ListViewMode;\n\n\tselectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ListViewWarehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../domain-api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandDispatcher } from './list-view.command-dispatcher';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandDispatcher,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from './smart-component';\n\nexport abstract class Gate extends SmartComponent {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tisDefined(propertyName: string, simpleChanges: SimpleChanges): boolean {\n\t\treturn simpleChanges[propertyName] !== undefined && simpleChanges[propertyName].currentValue !== undefined;\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../../../paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../paging/domain-api/paging.event-repository';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\t\t\tprivate readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('paging', simpleChanges)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewCommandDispatcher } from '../../../domain-api/list-view.command-dispatcher';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('mode', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('template', simpleChanges)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', simpleChanges)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { FieldConfig } from '../../../../field/domain-api/field.config';\nimport { FieldCommandDispatcher } from '../../../../field/domain-api/field.command-dispatcher';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('fields', simpleChanges)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { SearchConfig } from '../../../../search/domain-api/search-config';\nimport { SearchCommandDispatcher } from '../../../../search/domain-api/search.command-dispatcher';\nimport { SearchEventRepository } from '../../../../search/domain-api/search.event-repository';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly searchEventRepository: SearchEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('searching', simpleChanges)) {\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(this.searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate\n];\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-sorting-selector',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`\n})\nexport class SortingSelectorComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\n\tchangeSorting(sorting: string) {\n\t\tconsole.log(sorting);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../lib/composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../lib/composition/domain-api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/domain-api/field.warehouse';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { FilterTypeMap } from '../../domain-api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../lib/composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/domain-api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SearchCommandDispatcher } from '../../../../search/domain-api/search.command-dispatcher';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandDispatcher,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../domain-api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view-gateway.declarations';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: [\n\t\tListViewComponent,\n\t\tlistViewGatewayDeclarations\n\t],\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTooltipModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.2\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../lib/structure/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../domain/theme/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon></gui-structure-schema-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../domain-api/schema.warehouse';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../domain-api/schema.command-dispatcher';\nimport { SchemaReadModelRootId } from '../../domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../domain-api/row-coloring';\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">Theme manager:</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Theme:</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Row coloring:</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">Vertical grid\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">Horizontal grid\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate schemaCommandService: SchemaCommandDispatcher,\n\t\t\t\tprivate schemaReadModelService: SchemaWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../lib/structure/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class StructureSchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../lib/structure/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { StructureSchemaManagerModule } from '../../../../../schema/feature/manager/structure.schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../../structure/source-counter/feature/source-counter.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tStructureSchemaManagerModule,\n\t\tSourceCounterFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../structure/filter/domain-api/filter.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../structure/filter/domain-api/unique/unique-values.read-model';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { FilterWarehouse } from '../../../../structure/filter/domain-api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { FilterCommandDispatcher } from '../../../../../structure/filter/domain-api/filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: FilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { FormationCommandDispatcher } from '../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../../structure/search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../../structure/search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../../structure/source/domain-api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../../structure/source/domain-api/row-selection';\nimport { RowSelectToggleType } from '../../../../structure/source/domain/formation/core/row-select-toggle-type';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation, SimpleChanges, OnChanges, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { FormationCommandDispatcher } from '../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowSelectToggleType } from '../../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../../structure/source/domain-api/formation/row-selected.read-model';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../../structure/source/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { SourceWarehouse } from '../../../../structure/source/domain-api/source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../../structure/filter/domain-api/filter.warehouse';\nimport { SearchWarehouse } from '../../../../structure/search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\nexport class SelectionEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class FilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class FilterAddedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\nexport class ActiveFiltersSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class UniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class AllUniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class UniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\n\n\nexport class AllUniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../../structure/source/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../../structure/source/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../../structure/sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../../structure/source/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../../structure/filter/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../../structure/search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../../structure/filter/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../../structure/filter/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../../structure/filter/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../../structure/filter/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../../structure/filter/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../../structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './domain-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './domain-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../../../structure/source/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../../../structure/field/domain/core/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../../../structure/source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../../structure/field/domain/core/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../../../../../structure/field/domain/core/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../../../structure/source/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../../../structure/field/domain/core/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.ofMessageType('StructureSummariesChangedEvent')),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../domain-api/filter-config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../domain-api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../field/domain/core/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../../domain/filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../field/domain/core/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../domain-api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from './filter.id-generator';\nimport { ActiveFilterReadModel } from '../domain-api/active/active-filter.read-model';\nimport { FilterId } from './filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\n\nexport class FilterTypesInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\n\n\nexport class FilterTypesInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class FilterAddedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\n\n\nexport class FilterRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\n\nexport class SelectedRowChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\n\nexport class SelectionEnabledSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../../../../structure/source/domain/core/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { FilterManager } from '../../../../structure/filter/domain/filter.manager';\nimport { FieldCollection } from '../../../../structure/field/domain/core/field-collection';\nimport { FormationManager } from '../../../../structure/source/domain/formation/core/formation-manager';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../../../structure/sorting/domain-api/sorting-config';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { StructureSorter } from '../../../../structure/sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../../../structure/filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../structure/filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../../structure/search/domain-api/search-config';\nimport { SearchManager } from '../../../../structure/search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../../../structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../../../structure/field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../../../structure/field/domain-api/field.config';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../../../structure/filter/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../../../structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../../../structure/filter/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../../../structure/filter/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../../../structure/filter/domain/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../../../structure/filter/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../../../structure/filter/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../../structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../../../structure/filter/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../../../structure/filter/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../../../structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../../../structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../../../structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../../../structure/source/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../../../structure/source/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../../../structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../../../structure/source/domain-api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../../../structure/source/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../../../structure/source/domain/origin/origin-id';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../field/domain/core/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../lib/composition/domain/column/sort/sort-order';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../field/domain/core/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../../../structure/source/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../../../structure/filter/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../../../structure/field/domain/core/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../../../structure/sorting/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../../../structure/search/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../../../structure/filter/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { FieldsInitedEventHandler } from '../../../structure/field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\n\tVerticalFormationFactory,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../../structure/filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../../structure/search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandDispatcher } from '../../../../../../../structure/sorting/domain-api/sorting.command-dispatcher';\nimport { CompositionId } from '../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValuesReadModel } from '../../domain-api/unique/unique-values.read-model';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../domain-api/unique/unique-value.read-model';\nimport { FilterCommandDispatcher } from '../../domain-api/filter.command-dispatcher';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"gui-unique-value-list-actions\">\n<!--\t\t\t<button gui-button-->\n<!--\t\t\t\t\t[outline]=\"true\"-->\n<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n<!--\t\t\t\tCancel-->\n<!--\t\t\t</button>-->\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../../lib/structure/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../../structure/filter/feature/unique/unique-value-list.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../../structure/source/domain-api/source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../../structure/source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../../../structure/source/domain-api/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaVerticalGridSetEventHandler } from './vertical-grid/schema.vertical-grid-set.event-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../../structure/source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../../structure/source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../../../structure/source/domain-api/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandDispatcher) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class ToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\nexport class ConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../lib/structure/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../lib/structure/domain/structure/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../domain-api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../domain-api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../domain-api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../domain-api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../domain-api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandDispatcher } from './filter.command-dispatcher';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandDispatcher,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectorRef, Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { FormationCommandDispatcher } from '../../../../../../structure/source/domain-api/formation/formation.command-dispatcher';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../../structure/source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../../structure/source/domain-api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../../structure/source/domain-api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandDispatcher,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { SourceWarehouse } from '../../../structure/source/domain-api/source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../structure/source/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../structure/sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../structure/sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../structure/field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../structure/field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../structure/search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../structure/search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../../structure/search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\nimport { StructureSchemaManagerModule } from '../../../schema/feature/manager/structure.schema-manager.module';\nimport { FilterDomainModule } from '../../../structure/filter/domain/filter.domain-module';\nimport { FilterApiModule } from '../../../structure/filter/domain-api/filter.api-module';\nimport { SourceDomainModule } from '../../../structure/source/domain/source.domain-module';\nimport { SourceApiModule } from '../../../structure/source/domain-api/source.api-module';\nimport { SelectAllComponent } from '../feature/header/columns/select-all/select-all.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tStructureSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../lib/structure/domain-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}