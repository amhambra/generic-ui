{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/container-template.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/container-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.providers.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/container-source.component.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/container-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/container-list-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.api-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/formation/formation.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/source/source.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/search/icon/structure.search-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","ListCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ContainerTemplate","LIST","CARD","GuiListModeConverter","mode","GuiListMode","ListViewMode","GuiListGateway","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","Input","guiListProviders","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","_this","_super","ofEvent","forEvents","pipe","subscribe","event","subs","console","tslib_1.__extends","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","structureId","set","toString","onOrigin","asObservable","map","get","distinctUntilChanged","Injectable","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","onStructure","structure","getEntities","ents1","ents2","flag","forEach","ent","index","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","GuiListComponent","platformId","elementRef","changeDetectorRef","structureSourceWarehouse","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ContainerGateway","listViewReadModelRootId","sourceCommandService","containerTemplateArchive","listCardTemplateArchive","structurePagingCommandDispatcher","listViewCommandDispatcher","simpleChanges","setPaging","setMode","modeSelector","toggleSelector","items","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","changePageSize","nextPage","prevPage","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","PagingRepository","on","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","LocalPagingWarehouse","Observable","SetFormationCommand","payload","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","fieldId","externalFilterId","filterValue","getFieldId","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","getColumns","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FieldId","ASC","DESC","NONE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","Number","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","equalsById","getIds","Formation","selectedRows","selectedRowsList","ReadModelObject","FormationConverter","aggregate","rows","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","Boolean","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","data","version","RandomStringGenerator","generate","getData","getUiId","replace","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","schemaId","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","columnFieldId","getItemId","getColumnFieldId","getValue","SourceCommandDispatcher","structureFieldUiRepository","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","ENTER","SUBMIT","CANCEL","StructureGateway","pagingEventService","sourceEventService","schemaCommandDispatcher","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelecting","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","ngOnInit","onPageChange","emit","onPageSizeChange","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","onRowColoring","Output","NextPageEvent","PrevPageEvent","PagingEventRepository","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","getPayload","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","sort","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","item","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","alternativeDisplay","PagingPosition","detectChanges","isPagingVisible","[class.gui-paging]","Renderer2","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","ngAfterViewInit","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ContainerTemplateArchive","ListCardTemplateArchive","containerProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","SetListViewModeCommand","getMode","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","listViewGlobalId","ListViewCommandDispatcher","listViewDispatcher","listViewIdFactory","componentProviders","ContainerComponent","[class.gui-container]","[class.gui-generic]","ContainerSourceComponent","[class.gui-container-source]","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ContainerLayoutComponent","listViewModeRepository","listViewSelectorRepository","listModeEnabled","cardModeEnabled","[class.gui-container-layout]","ContainerListItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ListContainerCardComponent","[class.gui-list-container-card]","ListCardItemComponent","[class.gui-list-card]","ListContainerModeSelectComponent","options","val","isInteger","listContainerMode","changeContainerMode","[class.gui-list-mode-select]","ListViewCreatedEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setEnabled","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","save","listViewAggregate","ListViewEventRepository","ListViewWarehouse","SetListViewModeCommandHandler","publishFromAggregate","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","handle","ofMessageType","DomainEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","defineAggregate","DOMAIN_EVENT_HANDLERS","multi","ListViewFeatureModule","FabricSelectModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureInfoPanelComponent","dialog","menuColumnManagerService","infoModal","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","TEXT","NUMBER","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","CUSTOM","FUNCTION","DATE","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","ViewChild","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","StringEditTemplateComponent","setSelectionRange","UNKNOWN","STRING","BOOLEAN","EditTemplatesComponent","dataType","DataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","type","text","CellValueType","FunctionViewComponent","element","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnField","columnConfig","presentation","header","align","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","cellEditingEnabled","isBooleanDataType","searchPhrase","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","field","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","ColumnFieldId","ChangeSortParams","direction","CompositionChangeSortStatusEventHandler","getDirections","dir","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","getFields","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","isPlatformBrowser","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","FormationSetEvent","SortToggledEvent","directions","StructureFilterToggledEvent","SortOrderSetEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","FieldsInitedEvent","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","matcher","getSearchMatcher","getSortValue","getSortMatcher","getSearchValue","Field","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownField","SummariesType","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","delete","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","onSelectChange","StructureFilterMenuModule","StructureSearchIconComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../domain-api/gui.list.api';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ContainerTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","export interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n","import { ListViewMode } from '../../../../structure/list/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../domain-api/gui.list.api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListMode, GuiListPaging, GuiListView } from '../domain-api/gui.list.api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { ListCardTemplate } from '../../../structure/list/feature/card/template/list.card-template';\nimport { ContainerTemplate } from '../../../structure/list/feature/source/template/container-template';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\nimport { ListViewMode } from '../../../structure/list/domain/mode/list-view-mode';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\tcontainerTemplate: ContainerTemplate;\n\n\tlistCardTemplate: ListCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ContainerTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\nimport { StructureSourceWarehouse } from '../../../lib/structure/domain-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandDispatcher } from '../../../lib/structure/domain-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\nimport { ContainerTemplate } from './source/template/container-template';\nimport { ContainerTemplateArchive } from './source/template/container-template.archive';\nimport { ListCardTemplateArchive } from './card/template/list.card-template.archive';\nimport { ListCardTemplate } from './card/template/list.card-template';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\nimport { ListViewCommandDispatcher } from '../domain-api/list-view.command-dispatcher';\nimport { ListViewReadModelRootId } from '../domain-api/read/list-view.read-model-root-id';\n\n\nexport abstract class ContainerGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\t@Input()\n\ttemplate: ContainerTemplate;\n\n\t@Input()\n\tcardTemplate: ListCardTemplate;\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprotected readonly sourceCommandService: SourceCommandDispatcher,\n\t\tprotected readonly containerTemplateArchive: ContainerTemplateArchive,\n\t\tprotected readonly listCardTemplateArchive: ListCardTemplateArchive,\n\t\tprotected readonly structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected readonly listViewCommandDispatcher: ListViewCommandDispatcher\n\t\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.template !== undefined && simpleChanges.template.currentValue !== undefined) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (simpleChanges.cardTemplate !== undefined && simpleChanges.cardTemplate.currentValue !== undefined) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.mode !== undefined && simpleChanges.mode.currentValue !== undefined) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (simpleChanges.modeSelector !== undefined && simpleChanges.modeSelector.currentValue !== undefined) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../domain-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../domain-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../domain-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../domain-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../domain-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../domain-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../domain-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../domain-api/sorting-config';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../domain-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../domain-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../domain-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../domain-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/domain-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../domain-api/sorting-config';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../domain-api/search/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../domain-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../domain-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventService: PagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../domain-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent,\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent,\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../domain-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../domain-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/domain-api/composition.event-repository';\nimport { FormationEventService } from '../domain-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../domain-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/domain-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventService: PagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ContainerTemplate } from './container-template';\n\n\n@Injectable()\nexport class ContainerTemplateArchive extends Archive<ContainerTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListCardTemplate } from './list.card-template';\n\n\n@Injectable()\nexport class ListCardTemplateArchive extends Archive<ListCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ContainerTemplateArchive } from './source/template/container-template.archive';\nimport { ListCardTemplateArchive } from './card/template/list.card-template.archive';\n\nexport const containerProviders = [\n\tContainerTemplateArchive,\n\tListCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../lib/composition/domain-api/read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\nexport class SetListViewModeCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ToggleListViewSelectorCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandDispatcher {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { ContainerGateway } from './container.gateway';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureIdGenerator } from '../../../lib/structure/feature/structure-id.generator';\nimport { structureIdFactory } from '../../../lib/structure/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../../lib/structure/domain-api/structure.command-dispatcher';\nimport { SourceCommandDispatcher } from '../../../lib/structure/domain-api/source/source.command-dispatcher';\nimport { containerProviders } from './container.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { localProviders, provideComponentServices } from '../../../lib/structure/feature/local/local-providers';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\nimport { ContainerTemplateArchive } from './source/template/container-template.archive';\nimport { ListCardTemplateArchive } from './card/template/list.card-template.archive';\nimport { ListViewReadModelRootId } from '../domain-api/read/list-view.read-model-root-id';\nimport { ListViewCommandDispatcher } from '../domain-api/list-view.command-dispatcher';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},{\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...containerProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-container',\n\ttemplate: `\n\n\t\t<gui-container-layout></gui-container-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: componentProviders,\n\tstyleUrls: [\n\t\t'./style/list.ngx.scss',\n\t\t'./source/container-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-container]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ContainerComponent extends ContainerGateway {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tcontainerTemplateArchive: ContainerTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandDispatcher\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tlistViewReadModelRootId,\n\t\t\tsourceCommandService,\n\t\t\tcontainerTemplateArchive,\n\t\t\tlistCardTemplateArchive,\n\t\t\tstructurePagingCommandDispatcher,\n\t\t\tlistViewCommandDispatcher\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { StructureSourceWarehouse } from '../../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../../lib/structure/domain/source/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ContainerTemplate } from './template/container-template';\nimport { ContainerTemplateArchive } from './template/container-template.archive';\n\n@Component({\n\tselector: 'gui-container-source',\n\ttemplate: `\n\n\t\t<gui-container-list-item *ngFor=\"let element of source\"\n\t\t\t\t\t   [item]=\"element\"\n\t\t\t\t\t   [template]=\"template\">\n\t\t</gui-container-list-item>\n\t\t\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-container-source]': `\"true\"`\n\t}\n})\nexport class ContainerSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ContainerTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ContainerTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ContainerTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../domain-api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../domain-api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../domain-api/mode/selector/list-view.selector.repository';\n\n@Component({\n\tselector: 'gui-container-layout',\n\ttemplate: `\n\n\t\t<div class=\"gui-list-panel-top\">\n\t\t\t<gui-list-mode-select *ngIf=\"selectorEnabled\"></gui-list-mode-select>\n\n\t\t\t<gui-paging [minimal]=\"true\" [position]=\"0\"></gui-paging>\n\t\t</div>\n\n\t\t<gui-container-source *ngIf=\"listModeEnabled\"></gui-container-source>\n\n\t\t<gui-list-container-card *ngIf=\"cardModeEnabled\"></gui-list-container-card>\n\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-container-layout]': `\"true\"`\n\t}\n})\nexport class ContainerLayoutComponent extends SmartComponent {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tconstructor(\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listViewSelectorRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ContainerTemplate } from '../template/container-template';\n\n\n@Component({\n\tselector: 'gui-container-list-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ContainerListItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ContainerTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation, Input } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureSourceWarehouse } from '../../../../lib/structure/domain-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../../lib/structure/domain/source/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ListCardTemplate } from './template/list.card-template';\nimport { ListCardTemplateArchive } from './template/list.card-template.archive';\n\n@Component({\n\tselector: 'gui-list-container-card',\n\ttemplate: `\n\n\t\t<gui-list-card-item *ngFor=\"let element of items\"\n\t\t\t\t\t\t\t\t [item]=\"element\"\n\t\t\t\t\t\t\t\t [template]=\"cardTemplate\">\n\t\t</gui-list-card-item>\n\n\t\t<gui-empty-source [items]=\"items\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-container-card]': `\"true\"`\n\t}\n})\nexport class ListContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListCardTemplate } from '../template/list.card-template';\n\n\n@Component({\n\tselector: 'gui-list-card-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-card-wrapper\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-card-wrapper\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-card]': `\"true\"`\n\t}\n})\nexport class ListCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../domain-api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-list-mode-select',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeContainerMode($event)\"\n\t\t\t\t\t[options]=\"options\"\n\t\t\t\t\t[selected]=\"listContainerMode\">\n\t\t</gui-select>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-mode-select]': `\"true\"`\n\t}\n})\nexport class ListContainerModeSelectComponent extends SmartComponent {\n\n\toptions = Object.keys(ListViewMode)\n\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t.filter((val) => !Number.isInteger(val));\n\n\tlistContainerMode: ListViewMode;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = mode;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangeContainerMode(mode: ListViewMode): void {\n\t\tthis.listViewModeRepository.setMode(mode, this.listViewReadModelRootId.toAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewCreatedEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\n\nexport class ListViewCreatedAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\n\nexport class ListViewModeSetEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\nexport class ListViewModeSetAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tmode: ListViewMode;\n\n\tselectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): Type<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ListViewWarehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../domain-api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey),\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler extends DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler extends DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandDispatcher } from './list-view.command-dispatcher';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandDispatcher,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: ListViewModeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tListViewSelectorRepository,\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: ListViewSelectorToggledEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ContainerComponent } from './container.component';\nimport { ContainerSourceComponent } from './source/container-source.component';\nimport { ContainerLayoutComponent } from './layout/container-layout.component';\nimport { ContainerListItemComponent } from './source/list-item/container-list-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { ListContainerCardComponent } from './card/list.container-card.component';\nimport { ListCardItemComponent } from './card/card-item/list.card-item.component';\nimport { ListContainerModeSelectComponent } from './container/select/list.container-mode-select.component';\nimport { ListViewApiModule } from '../domain-api/list-view.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tEmptySourceFeatureModule\n\t],\n\tdeclarations: [\n\t\tContainerComponent,\n\t\tContainerListItemComponent,\n\t\tContainerLayoutComponent,\n\t\tContainerSourceComponent,\n\n\t\tListContainerCardComponent,\n\t\tListCardItemComponent,\n\t\tListContainerModeSelectComponent\n\t],\n\texports: [\n\t\tContainerComponent\n\t],\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigService } from './structure.info-panel-config.service';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../domain-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId, FieldsInitedEvent> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../domain-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../domain-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../domain-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../domain-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../domain-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../domain-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/domain-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../domain-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../domain-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../domain-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../domain-api/filter/filter-config';\nimport { SearchConfig } from '../../../domain-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../domain-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId, StructureConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId, StructureConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId, StructureConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.ofMessageType('StructureSummariesChangedEvent')),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../domain-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../domain-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../domain-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../domain-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\t\t\t\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId, StructureSearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('StructureSearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../domain-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<gui-structure-search-icon></gui-structure-search-icon>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSearchIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\nimport { StructureSearchIconComponent } from './search/icon/structure.search-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent,\n\t\tStructureSearchIconComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../domain-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/domain-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../domain-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType = SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../domain-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../lib/structure/domain-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t],\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}