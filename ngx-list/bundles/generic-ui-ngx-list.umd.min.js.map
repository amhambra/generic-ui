{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gateway.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.id.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure-definition.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-list/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.id.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.converter.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/structure/core/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/core/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/core/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/structure/core/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/core/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/row-selection.ts","ng://@generic-ui/ngx-list/structure/core/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/event/source-event.service.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/core/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/structure/core/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/core/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/core/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/domain-api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/domain-api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view-gateway.declarations.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/core/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-list/structure/core/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/core/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/domain-api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/core/feature/header/columns/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/core/domain-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ListViewGateway","structureId","sourceCommandService","simpleChanges","items","setOrigin","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","Injectable","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandInvoker","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","structureGlobalId","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SelectedRow","data","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","FieldId","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandInvoker","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","ReadModelObject","Boolean","Number","PagingConverter","aggregate","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","elementRef","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","detector","render","detectChanges","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","handle","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelection","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","sorting","setSortingConfig","filtering","quickFilters","ngOnInit","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","NextPageEvent","PrevPageEvent","PagingEventRepository","eventBus","pagingReadModelService","switchMap","onEvent","EventRepository","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","StructureColumnMenuConfig","sort","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","changeDetectorRef","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","PagingPosition","isPagingVisible","[class.gui-paging]","Renderer2","ElementRef","ChangeDetectorRef","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","from","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandInvoker","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","[class.gui-icon]","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","clear","reset","searchInputSubscription","controls","valueChanges","debounceTime","[class.gui-search-bar]","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","matcher","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","configs","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","ngAfterViewInit","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","[class.gui-list-view-source]","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","[class.gui-list-view-layout]","ListViewItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ListViewContainerCardComponent","[class.gui-list-container-card]","ListViewCardItemComponent","[class.gui-list-card]","ListViewContainerModeSelectComponent","options","listContainerMode","changeContainerMode","[class.gui-list-mode-select]","ListViewCreatedEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","save","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","defineAggregate","Gate","isDefined","propertyName","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","ListViewSearchingGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","log","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","FilterMenuTriggerComponent","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","[class.gui-filter-value]","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","ActiveSearchComponent","clearSearch","stopPropagation","FilterMenuFeatureModule","entryComponents","ListViewFeatureModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","totalItemsSize","preparedItemsSize","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","compositionCommandService","enabledColumnsCount","reduce","accumulator","toggleColumn","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","StructureColumnManagerModule","StructureInfoIconComponent","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","dialogThemeService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","nextTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","FabricDialogThemeService","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","StructureSchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","filterFieldName","_a","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","NumberEditTemplateComponent","fb","StringEditTemplateComponent","setSelectionRange","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","text","CellValueType","FunctionViewComponent","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnConfig","presentation","header","align","setInitialAlign","getPresentation","getColumnConfig","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","cellEditingEnabled","isBooleanDataType","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","ColumnDefinition","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","removeColumn","updatedWidths","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","components","exportDeclarations","compositionKey","CompositionModule","FabricDatePickerModule","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","getValues","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","isPlatformBrowser","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","prevValue","selectRow","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","arr","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","FieldsInitedEventHandler","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","[class.gui-select-all]","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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C,cAIrD,IAAa2uC,GAA+B31C,EAAA,CAC3C,CACC+qB,QAASvkB,EACTovC,WAAYL,GACZM,KAAM,CACL/uC,IAGF,CACCikB,QAAShiB,EACT6sC,WAAYH,GACZI,KAAM,CACL/uC,IAGF,CACCikB,QAAS5I,GACTyzB,WAAYF,GACZG,KAAM,CACL/uC,KAGCgkB,GAAc,CAEjBI,GACAsC,GACAmM,GACAjM,GACAC,GACAU,GACAyT,GACAnT,GACAK,GACAsK,GAEAgI,GAAoBC,eACpBsC,GAAqBtC,eACrBiO,GAAmBjO,eACnBuH,GAAoBvH,eACpB8T,GAAoB9T,eAEpB9H,GACAO,GACAD,GACAS,GACAY,GACAsG,GACAE,KAIDkU,GAAA,SAAA9wC,GAkDC,SAAA8wC,EAAY9vC,EACTiD,EACAqzB,EACArK,EACA8jB,EACA1jB,EACAH,EACAC,EACAC,EACAE,EACAC,EACAyjB,EACAvjB,EACA1N,EACA2N,EACAC,EACAqP,EACAnP,EACAC,EACAC,EACAtC,EACAuC,EACAijB,EACA/iB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACiBzH,EACAkQ,EACArQ,EACAmqB,EACAC,EACAC,EACAC,EACA3yB,EACjBpS,EACAhH,EACiBgsC,GA3CpB,IAAAvxC,EA6CCC,EAAA9G,KAAAZ,KACCgU,EACAhH,EACAtE,EACAiD,EACAya,EACAqB,EACAuX,EACArK,EACAC,EACAC,EACAC,EACA2jB,EACA1jB,EACAC,EACAC,EACAyjB,EACAvjB,EACAC,EACAC,EACAqP,EACAnP,EACAC,EACAC,EACAtC,EACAuC,EACAijB,EACA/iB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACAr2B,YAjDkByH,EAAAmnB,WAAAA,EACAnnB,EAAAq3B,kBAAAA,EACAr3B,EAAAgnB,SAAAA,EACAhnB,EAAAmxC,oBAAAA,EACAnxC,EAAAoxC,0BAAAA,EACApxC,EAAAqxC,4BAAAA,EACArxC,EAAAsxC,oBAAAA,EACAtxC,EAAA2e,sBAAAA,EAGA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../domain-api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","export interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n","import { ListViewMode } from '../../../../structure/list/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../domain-api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListPaging, GuiListSearching, GuiListView } from '../domain-api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/domain-api/field.config';\nimport { SearchConfig } from '../../../structure/search/domain-api/search-config';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandInvoker } from '../../../source/domain-api/source.command-invoker';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport abstract class ListViewGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandInvoker\n\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/domain-api/paging.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../core/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../core/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SetEnabledSelectionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SetSelectionModeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SelectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class UnselectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../../source/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take, tap } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../core/domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../core/domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t\t//    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationWarehouse } from '../../../../source/domain-api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/domain-api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/domain-api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterConfig } from '../../domain-api/filter-config';\n\nexport class SetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class RemoveAllFiltersCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class AddFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterId } from '../../filter.id';\n\n\nexport class RemoveFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class SelectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class UnselectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class SelectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class UnselectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from '../domain/filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { QuickFiltersConfig } from '../../domain-api/quick-filters.config';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/domain-api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/domain/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/domain-api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/domain-api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { OriginId } from '../origin-id';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends Command {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../field/domain-api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/domain-api/source.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../../source/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/domain-api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/domain-api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/domain-api/prepared/structure.prepared-items.repository';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../structure/core/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/core/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/domain-api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../paging/domain-api/read/paging';\nimport { Source } from '../../../source/domain-api/read/source';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../../../source/domain-api/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/domain-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/domain-api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/domain-api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/domain-api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n\n\tprotected constructor(protected readonly detector?: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n\trender(): void {\n\t\tthis.detector.detectChanges();\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Field } from '../../../../field/domain/core/field/field';\nimport { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../../source/domain-api/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/domain-api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/domain-api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/domain-api/source.command-invoker';\nimport { SourceEventService } from '../../../source/domain-api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/domain-api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/domain-api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/domain-api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/domain-api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/domain-api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/domain-api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/domain-api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { SelectedRow } from '../../../source/domain-api/formation/selected-row';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from './read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SelectedRowChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { map, share, multicast, refCount } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t   \treturn event.getTheme()\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/domain-api/formation/formation.event-repository';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/domain-api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandInvoker } from '../domain-api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandInvoker } from '../../../domain-api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandInvoker } from '../../../domain-api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../core/domain-api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../core/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../core/domain/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../core/domain/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../source/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/core/field/data/data-type';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../core/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../core/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../domain-api/search.command-invoker';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/core/field/field.id';\nimport { DataType } from '../../domain/core/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/core/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../core/domain/summaries/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../core/domain/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../../domain-api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../../domain-api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './core/field-collection.factory';\nimport { DataFieldFactory } from './core/field/data/data-field.factory';\nimport { FieldIdGenerator } from './core/field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './core/field/field.factory';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i+= 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../domain-api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../domain-api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../domain-api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../domain-api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../domain-api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../domain-api/source.api-module';\nimport { RowSelectionModeRepository } from '../domain-api/formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive,\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/domain-api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/domain-api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/domain-api/source.command-invoker';\nimport { SourceEventService } from '../../source/domain-api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/domain-api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/domain-api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/domain-api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/domain-api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/domain-api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/domain-api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/domain-api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/domain-api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../composition/domain-api/read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\nexport class SetListViewModeCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ToggleListViewSelectorCommand extends Command {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { ListViewGateway } from './gateway/list-view.gateway';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureIdGenerator } from '../../core/feature/structure-id.generator';\nimport { structureIdFactory } from '../../core/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../core/domain-api/structure.command-dispatcher';\nimport { SourceCommandInvoker } from '../../source/domain-api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../core/feature/local/local-providers';\nimport { PagingCommandInvoker } from '../../paging/domain-api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../domain-api/read/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../domain-api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<gui-list-view-layout></gui-list-view-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent extends ListViewGateway implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'gui-list-view-source',\n\ttemplate: `\n\n\t\t<gui-list-view-item *ngFor=\"let element of source\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"template\">\n\t\t</gui-list-view-item>\n\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-source]': `\"true\"`\n\t}\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../domain-api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../domain-api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../domain-api/mode/selector/list-view.selector.repository';\n\n@Component({\n\tselector: 'gui-list-view-layout',\n\ttemplate: `\n\n\t\t<div class=\"gui-list-panel-search\">\n\n\t\t\t<gui-search-bar *ngIf=\"searchBarEnabled\"></gui-search-bar>\n\n\t\t\t<!--\t\t\t<gui-sorting-selector></gui-sorting-selector>-->\n\t\t\t<!--\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n<!--\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\t\t</div>\n\t\t<div class=\"gui-list-panel-top\">\n\t\t\t<gui-list-mode-select *ngIf=\"selectorEnabled\"></gui-list-mode-select>\n\n\t\t\t<gui-paging [minimal]=\"true\" [position]=\"0\"></gui-paging>\n\t\t</div>\n\n\t\t<gui-list-view-source *ngIf=\"listModeEnabled\"></gui-list-view-source>\n\n\t\t<gui-list-container-card *ngIf=\"cardModeEnabled\"></gui-list-container-card>\n\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-layout]': `\"true\"`\n\t}\n})\nexport class ListViewLayoutComponent extends SmartComponent {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t// private readonly c: ListViewModeRepository,\n\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listViewSelectorRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'gui-list-view-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\n\n@Component({\n\tselector: 'gui-list-container-card',\n\ttemplate: `\n\n\t\t<gui-list-card-item *ngFor=\"let element of items\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"cardTemplate\">\n\t\t</gui-list-card-item>\n\n\t\t<gui-empty-source [items]=\"items\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-container-card]': `\"true\"`\n\t}\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'gui-list-card-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-card-wrapper\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-card-wrapper\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-card]': `\"true\"`\n\t}\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../domain-api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-list-mode-select',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeContainerMode($event)\"\n\t\t\t\t\t[options]=\"options\"\n\t\t\t\t\t[selected]=\"listContainerMode\">\n\t\t</gui-select>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-mode-select]': `\"true\"`\n\t}\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent {\n\n\toptions = Object.keys(ListViewMode)\n\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t.filter((val) => !Number.isInteger(val));\n\n\tlistContainerMode: ListViewMode;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = mode;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangeContainerMode(mode: ListViewMode): void {\n\t\tthis.listViewModeRepository.setMode(mode, this.listViewReadModelRootId.toAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewCreatedEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\n\nexport class ListViewCreatedAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\n\nexport class ListViewModeSetEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\n\nexport class ListViewModeSetAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledEvent extends DomainEvent<ListViewId> {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends AggregateEvent<ListViewId> {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tmode: ListViewMode;\n\n\tselectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../domain-api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from './smart-component';\n\nexport abstract class Gate extends SmartComponent {\n\n\tprotected constructor() {\n\t\tsuper();\n\t}\n\n\tisDefined(propertyName: string, simpleChanges: SimpleChanges): boolean {\n\t\treturn simpleChanges[propertyName] !== undefined && simpleChanges[propertyName].currentValue !== undefined;\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\nimport { PagingCommandInvoker } from '../../../../paging/domain-api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/domain-api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tprivate readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('paging', simpleChanges)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../domain-api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../domain-api/read/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('mode', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('template', simpleChanges)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', simpleChanges)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { FieldConfig } from '../../../../field/domain-api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/domain-api/field.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('fields', simpleChanges)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { SearchConfig } from '../../../../search/domain-api/search-config';\nimport { SearchCommandInvoker } from '../../../../search/domain-api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/domain-api/search.event-repository';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchEventRepository: SearchEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('searching', simpleChanges)) {\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(this.searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate\n];\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-sorting-selector',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`\n})\nexport class SortingSelectorComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\n\tchangeSorting(sorting: string) {\n\t\tconsole.log(sorting);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/domain-api/field.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { FilterTypeMap } from '../../domain-api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/domain-api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/domain-api/search.command-invoker';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../domain-api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view-gateway.declarations';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: [\n\t\tListViewComponent,\n\t\tlistViewGatewayDeclarations\n\t],\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTooltipModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.4\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../structure/core/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../domain/theme/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon [gui-tooltip]=\"'Theme manager'\"></gui-structure-schema-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon [gui-tooltip]=\"'Column manager'\"></gui-structure-column-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon [gui-tooltip]=\"'Info'\"></gui-structure-info-icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../domain-api/schema.warehouse';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../domain-api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../domain-api/row-coloring';\nimport { FabricDialogThemeService } from '@generic-ui/fabric';\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">Theme manager:</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Theme:</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Row coloring:</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">Vertical grid\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">Horizontal grid\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse,\n\t\t\t\tprivate readonly dialogThemeService: FabricDialogThemeService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t\tthis.dialogThemeService.nextTheme(theme);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/core/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class StructureSchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../core/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { StructureSchemaManagerModule } from '../../../../../schema/feature/manager/structure.schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source-counter/feature/source-counter.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tStructureSchemaManagerModule,\n\t\tSourceCounterFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandInvoker,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/domain-api/filter.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/domain-api/unique/unique-values.read-model';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/domain-api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { FilterWarehouse } from '../../../filter/domain-api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/domain-api/row-selection';\nimport { RowSelectToggleType } from '../../../source/domain/formation/core/row-select-toggle-type';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation, SimpleChanges, OnChanges, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowSelectToggleType } from '../../../../source/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/domain-api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/domain-api/formation/row-selected.read-model';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/domain-api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.render();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/domain-api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SelectionEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class FilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class FilterAddedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\nexport class ActiveFiltersSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class UniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class AllUniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class UniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class AllUniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './domain-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './domain-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/domain/core/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/summaries/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../domain-api/filter-config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../domain-api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../field/domain/core/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../../domain/filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../field/domain/core/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../domain-api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from './filter.id-generator';\nimport { ActiveFilterReadModel } from '../domain-api/active/active-filter.read-model';\nimport { FilterId } from './filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\n\nexport class FilterTypesInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\n\n\nexport class FilterTypesInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class FilterAddedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\n\n\nexport class FilterRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\n\nexport class SelectedRowChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\n\nexport class SelectionEnabledSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/domain/paging.manager';\nimport { SourceManager } from '../../source/domain/core/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../sorting/domain/sorter.collection';\nimport { FilterManager } from '../../filter/domain/filter.manager';\nimport { FieldCollection } from '../../field/domain/core/field-collection';\nimport { FormationManager } from '../../source/domain/formation/core/formation-manager';\nimport { StructureId } from './structure.id';\nimport { StructureEditSourceItemParams } from '../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/domain-api/sorting-config';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../../sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { SearchManager } from '../../search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/domain-api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/domain/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/domain-api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/domain/origin/origin-id';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../field/domain/core/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../field/domain/core/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/domain/core/field-collection.factory';\nimport { StructureId } from './structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/vertical-formation/vertical-formation.factory';\nimport { summariesProviders } from '../domain/summaries/summaries.providers';\nimport { FieldsInitedEventHandler } from '../../field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\n\tVerticalFormationFactory,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/domain-api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/domain-api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/domain-api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValuesReadModel } from '../../domain-api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../domain-api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"gui-unique-value-list-actions\">\n<!--\t\t\t<button gui-button-->\n<!--\t\t\t\t\t[outline]=\"true\"-->\n<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n<!--\t\t\t\tCancel-->\n<!--\t\t\t</button>-->\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../core/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/domain-api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaVerticalGridSetEventHandler } from './vertical-grid/schema.vertical-grid-set.event-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/domain-api/source.command-invoker';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/domain-api/schema.command-invoker';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class ToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class ConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../domain-api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../domain-api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../domain-api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../domain-api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../domain-api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/domain-api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../source/domain-api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/domain-api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/domain-api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-select-all]': 'true',\n\t}\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../source/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SearchApiModule } from '../../search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\nimport { StructureSchemaManagerModule } from '../../../schema/feature/manager/structure.schema-manager.module';\nimport { FilterDomainModule } from '../../filter/domain/filter.domain-module';\nimport { FilterApiModule } from '../../filter/domain-api/filter.api-module';\nimport { SourceDomainModule } from '../../source/domain/source.domain-module';\nimport { SourceApiModule } from '../../source/domain-api/source.api-module';\nimport { SelectAllComponent } from '../feature/header/columns/select-all/select-all.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tStructureSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../structure/core/domain-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}