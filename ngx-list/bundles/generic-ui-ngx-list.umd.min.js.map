{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gateway.ts","ng://@generic-ui/ngx-list/structure/grid/core/domain-read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/structure/grid/core/domain-read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema-theme.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/domain-read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/domain-read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.api.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/read/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/read/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view-gateway.declarations.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ListViewGateway","structureId","sourceCommandService","simpleChanges","items","setOrigin","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CompositionCommand","Command","CreateCompositionCommand","compositionId","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","configs","getConfigs","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setGroups","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","Injectable","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","default","AggregateArchive","CompositionCommandInvoker","compositionDispatcher","compositionGroupRepository","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureCommand","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","structureGlobalId","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","RowSelectionModeRepository","SelectedRow","data","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","SetScrollBarPositionCommand","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","scrollToTop","scrollToBottom","Number","MAX_SAFE_INTEGER","scrollToIndex","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","FieldId","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","schemaId","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SchemaCommand","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandInvoker","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","ReadModelObject","Boolean","PagingConverter","aggregate","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaDomainEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","elementRef","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","detector","viewRendered","ngAfterViewInit","reRender","isViewRendered","detectChanges","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","handle","_a","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","matcher","summaries","sorting","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","StructureGateway","changeDetectorRef","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","translationService","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","changeAfterInit","structureColumnInputHandler","setDefaultTranslation","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelection","infoPanel","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","rowClass","rowStyle","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","localization","translationResolver","setResolver","translation","changeTranslation","ngOnInit","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","componentInitialized","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","isInitialized","isNotInitialized","NextPageEvent","PrevPageEvent","PagingEventRepository","eventBus","pagingReadModelService","switchMap","onEvent","EventRepository","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionDomainEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","PagingPosition","isPagingVisible","[class.gui-paging]","Renderer2","ElementRef","ChangeDetectorRef","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","TranslationApiModule","TranslationPipe","actualTranslationValue","subscription","transform","onTranslation","markForCheck","Pipe","pure","TranslationService","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","Dictionary","resolver","_b","_c","getTranslation","from","reduce","obj","TranslationServiceImpl","defaultTranslation","dictionary","dictionary$","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","FabricModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ofMessageType","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchCommandInvoker","searchDispatcher","SearchWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","SearchIconComponent","[class.gui-icon]","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","clear","reset","searchInputSubscription","controls","valueChanges","debounceTime","[class.gui-search-bar]","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","changeTheme","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","save","schemaAggregate","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","SchemaCssClass","SchemaCssClassesEventHandler","schemaTheme","schemaKey","SchemaDomainModule","registerMultiDomainEventHandler","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","cd","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","ListViewCommand","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","[class.gui-list-view-source]","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","[class.gui-list-view-layout]","ListViewItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ListViewContainerCardComponent","[class.gui-list-container-card]","ListViewCardItemComponent","[class.gui-list-card]","ListViewContainerModeSelectComponent","options","listContainerMode","changeContainerMode","[class.gui-list-mode-select]","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","ListViewAggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","Gate","cDetector","isDefined","propertyName","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","ListViewSearchingGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","log","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","FilterMenuTriggerComponent","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","[class.gui-filter-value]","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","ActiveSearchComponent","clearSearch","stopPropagation","FilterMenuFeatureModule","ListViewFeatureModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","number","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","parentInjector","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","totalItemsSize","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","compositionCommandService","enabledColumnsCount","accumulator","toggleColumn","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","StructureColumnManagerModule","StructureInfoIconComponent","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","dialogThemeService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","nextTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","FabricDialogThemeService","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","sortStatus","sortable","align","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","getValues","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","isPlatformBrowser","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","updateRowStyle","prevValue","selectRow","style","renderRowStyles","styleFunction","styles","separatedStyles","trim","clazz","class","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","arr","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureFilterReadModelRepository","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","remove","update","SummariesManagerFactory","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesUiEventsRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","[class.gui-select-all]","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","publishEvents","setColumnsParams","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","[class.gui-string-edit]","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","export interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\nexport abstract class ListViewGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandInvoker\n\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/domain-read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from './composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from './column/column.id';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from './structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../domain-read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/domain-read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureReadModelRepository } from '../../../core/domain-read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../domain-read/composition.read-model-root-repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../domain-read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../api/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaId } from '../api/schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../../structure/core/api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { Source } from '../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/domain-read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/domain-read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n\n\tprivate viewRendered: boolean = false;\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewRendered = true;\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewRendered()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewRendered(): boolean {\n\t\treturn this.viewRendered;\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = simpleChanges.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(simpleChanges.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { ChangeDetectorRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { PagingConfig } from '../../../paging/core/api/paging-config';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { SummariesConfig } from '../../../summaries/core/api/summaries-config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { GuiLocalization, GuiRowClass, GuiRowStyle } from '../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\n\t\tif (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from '../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { SchemaId } from '../../../api/schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from '../domain-read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../domain-read/schema.global-id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/row-coloring/row-coloring-set.event';\nimport { SchemaId } from './schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'translate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/domain-read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from '../api/schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaTheme } from '../../api/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaId } from '../../api/schema.id';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaTheme } from '../api/schema-theme';\nimport { SchemaRowColoring } from '../api/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../api/schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../api/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../api/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/schema-row-coloring';\nimport { SchemaTheme } from '../../api/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaThemeSetEventHandler } from '../domain-read/theme/schema-theme-set.event-handler';\nimport { SchemaHorizontalGridSetEventHandler } from '../domain-read/horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from '../domain-read/row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaVerticalGridSetEventHandler } from '../domain-read/vertical-grid/schema.vertical-grid-set.event-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from '../api/schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { schemaKey } from './schema.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../core/domain-read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tcd,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.cd.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootId } from '../../../../composition/core/domain-read/composition.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../api/list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../../api/list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './read/list-view.global-id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { ListViewGateway } from './gateway/list-view.gateway';\n\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { structureIdFactory } from '../../grid/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../core/api/structure.command-dispatcher';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../grid/feature/local/local-providers';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/read/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<gui-list-view-layout></gui-list-view-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent extends ListViewGateway implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'gui-list-view-source',\n\ttemplate: `\n\n\t\t<gui-list-view-item *ngFor=\"let element of source\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"template\">\n\t\t</gui-list-view-item>\n\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-source]': `\"true\"`\n\t}\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/read/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../core/api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../core/api/mode/selector/list-view.selector.repository';\n\n@Component({\n\tselector: 'gui-list-view-layout',\n\ttemplate: `\n\n\t\t<div class=\"gui-list-panel-search\">\n\n\t\t\t<gui-search-bar *ngIf=\"searchBarEnabled\"></gui-search-bar>\n\n\t\t\t<!--\t\t\t<gui-sorting-selector></gui-sorting-selector>-->\n\t\t\t<!--\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\t\t\t<!--\t\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\t\t</div>\n\t\t<div class=\"gui-list-panel-top\">\n\t\t\t<gui-list-mode-select *ngIf=\"selectorEnabled\"></gui-list-mode-select>\n\n\t\t\t<gui-paging [minimal]=\"true\" [position]=\"0\"></gui-paging>\n\t\t</div>\n\n\t\t<gui-list-view-source *ngIf=\"listModeEnabled\"></gui-list-view-source>\n\n\t\t<gui-list-container-card *ngIf=\"cardModeEnabled\"></gui-list-container-card>\n\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-view-layout]': `\"true\"`\n\t}\n})\nexport class ListViewLayoutComponent extends SmartComponent {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(\n\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t// private readonly c: ListViewModeRepository,\n\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listViewSelectorRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'gui-list-view-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\">\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\n\n@Component({\n\tselector: 'gui-list-container-card',\n\ttemplate: `\n\n\t\t<gui-list-card-item *ngFor=\"let element of items\"\n\t\t\t\t\t\t\t[item]=\"element\"\n\t\t\t\t\t\t\t[template]=\"cardTemplate\">\n\t\t</gui-list-card-item>\n\n\t\t<gui-empty-source [items]=\"items\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-container-card]': `\"true\"`\n\t}\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'gui-list-card-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-card-wrapper\">\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-card-wrapper\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-card]': `\"true\"`\n\t}\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../core/api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../core/api/read/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-list-mode-select',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeContainerMode($event)\"\n\t\t\t\t\t[options]=\"options\"\n\t\t\t\t\t[selected]=\"listContainerMode\">\n\t\t</gui-select>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-mode-select]': `\"true\"`\n\t}\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent {\n\n\toptions = Object.keys(ListViewMode)\n\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t.filter((val) => !Number.isInteger(val));\n\n\tlistContainerMode: ListViewMode;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.listViewModeRepository\n\t\t\t.on(this.listViewReadModelRootId.toAggregateId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = mode;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangeContainerMode(mode: ListViewMode): void {\n\t\tthis.listViewModeRepository.setMode(mode, this.listViewReadModelRootId.toAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../../api/list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from '../api/list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../../api/list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../../api/list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../../api/list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../api/list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract getById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../api/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewReadModelRootId } from './read/list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { ChangeDetectorRef, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from './smart-component';\n\nexport abstract class Gate extends SmartComponent {\n\n\tprotected constructor(cDetector: ChangeDetectorRef) {\n\t\tsuper(cDetector);\n\t}\n\n\tisDefined(propertyName: string, simpleChanges: SimpleChanges): boolean {\n\t\treturn simpleChanges[propertyName] !== undefined && simpleChanges[propertyName].currentValue !== undefined;\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tprivate readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('paging', simpleChanges)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/read/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('mode', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', simpleChanges)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('template', simpleChanges)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', simpleChanges)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('fields', simpleChanges)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/gate';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchEventRepository: SearchEventRepository) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (this.isDefined('searching', simpleChanges)) {\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(this.searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate\n];\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-sorting-selector',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`\n})\nexport class SortingSelectorComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\n\tchangeSorting(sorting: string) {\n\t\tconsole.log(sorting);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view-gateway.declarations';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: [\n\t\tListViewComponent,\n\t\tlistViewGatewayDeclarations\n\t],\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.13.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../structure/grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../core/api/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\t{{'infoPanelShowing' | translate}} <b>{{totalItemsSize | numberFormatter}}</b> {{'infoPanelItems' | translate}}\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\t{{'infoPanelShowing' | translate}}\n\t\t\t\t\t\t<b>{{preparedItemsSize | numberFormatter}}</b>\n\t\t\t\t\t\t{{'infoPanelOutOf' | translate}}\n\t\t\t\t\t\t<b>{{totalItemsSize | numberFormatter}}</b>\n\t\t\t\t\t\t{{'infoPanelItems' | translate}}\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon [gui-tooltip]=\"themeManagerTooltipText\"></gui-structure-schema-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon [gui-tooltip]=\"columnManagerTooltipText\"></gui-structure-column-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon [gui-tooltip]=\"infoTooltipText\"></gui-structure-info-icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogThemeService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/domain-read/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">{{'themeManagerModalTitle' | translate}}</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>{{'themeManagerModalTheme' | translate}}</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>{{'themeManagerModalRowColoring' | translate}}</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">{{'themeManagerModalVerticalGrid' | translate}}\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">{{'themeManagerModalHorizontalGrid' | translate}}\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse,\n\t\t\t\tprivate readonly dialogThemeService: FabricDialogThemeService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t\tthis.dialogThemeService.nextTheme(theme);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/core/api/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/core/domain-read/schema.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source-counter/feature/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tconsole.log(this.schemaRowClass);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowStyle() {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\n\t\t\tlet rowStyle = this.rowStyle.style || '';\n\n\t\t\tthis.renderRowStyles(rowStyle);\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\n\t\t\tlet rowStyle = this.rowStyle.styleFunction(this.entity.getData(), this.index);\n\n\t\t\tthis.renderRowStyles(rowStyle);\n\t\t}\n\n\t}\n\n\tprivate renderRowStyles(rowStyle: string = '') {\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.renderer2.setStyle(this.elRef.nativeElement, separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t\treturn rowStyle;\n\t}\n\n\tprivate updateRowClass() {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (this.entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(this.entity.getData(), this.index) || '';\n\t\t\t}\n\t\t}\n\n\t\tif (clazz) {\n\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, clazz);\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/domain-read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elementRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../core/domain-read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/domain-read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/domain-read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/domain-read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.api';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandDispatcher } from '../../../core/api/structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from '../domain-read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../core/api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | translate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | translate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | translate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | translate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | translate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | translate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"gui-unique-value-list-actions\">\n\t\t\t<!--\t\t\t<button gui-button-->\n\t\t\t<!--\t\t\t\t\t[outline]=\"true\"-->\n\t\t\t<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n\t\t\t<!--\t\t\t\tCancel-->\n\t\t\t<!--\t\t\t</button>-->\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/domain-read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../../summaries/core/api/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | translate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | translate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | translate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | translate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef);\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.api';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-select-all]': 'true'\n\t}\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './structure-summaries.ui-events-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesUiEventsRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.api';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from '../api/composition.api';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from './composition.api';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport {\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\tCompositionCommandInvoker,\n\t\tCompositionWarehouse,\n\t\tCompositionEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-string-edit]': 'true'\n\t}\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, fb);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\n\n\n@Component({\n\tselector: 'gui-structure-header-groups[groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchApiModule } from '../../../search/core/api/search.api-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gateway/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { FilterApiModule } from '../../../filter/core/api/filter.api-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SourceApiModule } from '../../../source/core/api/source.api-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.api';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}