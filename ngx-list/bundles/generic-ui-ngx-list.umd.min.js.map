{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.id.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/reactive.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-list/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-list/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/gate.ts","ng://@generic-ui/ngx-list/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/l10n/list-view-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/source/list-view-source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gates.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/summaries/structure-summaries.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-list/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListDefaultTranslation","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CompositionCommandInvoker","Injectable","StructureCommand","Command","SetPagingCommand","structureId","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","structureGlobalId","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SelectedRow","data","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","items","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getValueOrNullOrThrowError","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","StructureCommandInvoker","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","position","getPosition","SetScrollPositionCommand","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureDomainCommandInvoker","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","scrollToTop","scrollToBottom","Number","MAX_SAFE_INTEGER","scrollToIndex","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","EVEN","ODD","SchemaDomainEvent","SchemaThemeSetEvent","schemaId","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","rowColoring","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","verticalGrid","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","horizontalGrid","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","setTheme","DEFAULT_THEME","setHorizontalGrid","DEFAULT_HORIZONTAL_GRID","setVerticalGrid","DEFAULT_VERTICAL_GRID","setRowColoring","DEFAULT_ROW_COLORING","createEvent","changeTheme","SchemaTheme","SchemaRowColoring","coloring","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","AggregateRepository","InMemorySchemaStore","InMemoryStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","findById","save","schemaAggregate","CreateSchemaCommand","CreateAggregateCommand","CreateSchemaCommandHandler","forCommand","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","domainEventPublisher","handle","command","publish","aggregate","publishFromAggregate","DomainEventPublisher","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","theme$","setCssClass","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaTheme","ofMessageType","schemaKey","SchemaVerticalGridRepository","forEvent","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","commandHandlers","HermesModule","registerCommandHandler","domainEventHandlers","registerDomainEventHandler","registerMultiDomainEventHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","SchemaDispatcher","SchemaCommandInvoker","SchemaWarehouse","SchemaEventRepository","DomainEventBus","EventRepository","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaDomainCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","toFabricTheme","schemaRowColoring","toSchemaRowColoring","RowColoring","Theme","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onSingleTheme","onCssClasses","SchemaDomainEventRepository","onThemeChanged","onEvent","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","defineAggregate","provide","useClass","ApiModule","SchemaRowClassArchive","Archive","SchemaRowStyleArchive","LocalStructureCommandDispatcher","compositionId","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","CompositionCommand","CreateCompositionCommand","SetColumnsCommand","columns","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","configs","getConfigs","CompositionDispatcher","createComposition","setColumns","setGroups","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","compositionGlobalId","ColumnDefinitionId","ReadModelEntityId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","ColumnId","EntityId","CompositionDomainCommandInvoker","compositionDispatcher","compositionGroupRepository","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","LocalCompositionCommandDispatcher","columnDefId","CompositionWarehouse","CompositionReadModelRootRepository","ReadModelRootRepository","FieldId","CompositionDomainWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","schemaReadModelRootId","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","compare","JSON","stringify","ReadModelObject","Boolean","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","PagingSetEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","provideComponentServices","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","ClassModifier","_a","class_1","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","SchemaCssClassManager","schemaReadModelRepository","cssClass","classModifier","init","elementRef","cssHostRef","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","className","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","nativeElement","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","StreamCloser","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","ngAfterViewInit","reRender","isViewInDom","detectChanges","subscribeAndRender","obs$","callback","subscribeArguments","subscribeWithoutRender","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","matcher","summaries","sorting","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","StructureGateway","changeDetectorRef","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandInvoker","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","translationService","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","changeAfterInit","structureColumnInputHandler","setDefaultTranslation","editMode","cellEditing","autoResizeWidth","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","ngOnInit","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","componentInitialized","isInitialized","isNotInitialized","NextPageEvent","PrevPageEvent","PagingEventRepository","eventBus","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionEventRepository","SelectedRowChangedEvent","selectedRows","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","onItemSelected","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","onSearchPhrase","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","PagingComponent","elRef","cssClassModifier","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","isPagingVisible","localStreamCloser","PagingPosition","a","calculatePagingVisibility","ElementRef","ChangeDetectorRef","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","StructureAggregateRepository","SetPagingCommandHandler","structureAggregateRepository","structureAggregate","changePaging","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","PagingApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","_c","getTranslation","from","reduce","obj","setResolver","TranslationServiceImpl","dictionary","dictionary$","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","SearchCommandInvoker","searchDispatcher","SearchWarehouse","SearchDomainWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","StaticComponent","detach","IconComponent","SearchIconComponent","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","reset","searchInputSubscription","controls","valueChanges","debounceTime","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaFeatureModule","schemaApiModule","StyleModifier","setStyleByName","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","schemaCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","detectorRef","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","styleModifier","offsetWidth","timer","getStructureId","getElementRef","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","ListViewCommand","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","ListViewItemComponent","context","EmptySourceComponent","EmptySourceFeatureModule","ListViewContainerCardComponent","ListViewCardItemComponent","ListViewContainerModeSelectComponent","options","toGuiSelectOption","listContainerMode","changeContainerMode","selectedMode","toListViewMode","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","ListViewAggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","Gate","isDefined","propertyName","PagingGate","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","SearchingGate","searchCommandInvoker","ListViewSearchingGate","ListViewL10nGate","localization","translationResolver","SourceGate","sourceCommandInvoker","ListViewSourceGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","log","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","FilterMenuTriggerComponent","filterContainerRef","openDrawer","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValuesReadModel","allDisabled","calculateSelection","getValues","areAllSelected","areAllDisabled","isSelectAllChecked","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","uv","uniqueValues","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","ActiveFilterListComponent","ActiveSearchComponent","clearSearch","stopPropagation","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","exportDeclarations","ListViewFeatureModule","NumberFormatterPipe","number","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","StructureDialogColumnManagerService","schemaWarehouse","structureThemeConverter","fabricDialogService","readModelId","parentInjector","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","infoPanel","totalItemsSize","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","enabledColumnsCount","accumulator","toggleColumn","getColumnDefinitionId","StructureMenuColumnManagerComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","sortStatus","sortable","align","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","pagingWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesEventRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","getBannerPanelConfig","title","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","StructureThemeGateway","theme2","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","publishEvents","setColumnsParams","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionDomainEventRepository","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","StructurePagingGate","SelectionGate","itemsSelected","rowSelection","StructureSelectionGate","StructureL10nGate","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","columnMenu","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","rowColoringChanged","StructureRowStyleGate","structureGates","CssClassModule","StructureSharedModule","createStructureDefinition","StructureModule","isPlatformBrowser","window","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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AGA,GAGvCs2B,EA7CqC,IAEZ4sB,MAAQ,WA6ClCP,EA3DA,CAAmC7sB,IC0EnC,SAAgBstB,GAAmBC,GAClC,OAAO,IAAI95C,EAAY,OAAS85C,EAAUt5C,cAI3C,SAAgBu5C,GAAqBD,GACpC,OAAO,IAAIv3C,EAAc,OAASu3C,EAAUt5C,cAI7C,SAAgBw5C,GAAgBF,GAC/B,OAAO,IAAI7+B,GAAsB,OAAS6+B,EAAUt5C,cAIrD,IAAay5C,GAA+BjjD,EAAA,CAC3C,CACC+lB,QAAS/c,EACTk6C,WAAYL,GACZM,KAAM,CACL75C,IAGF,CACCyc,QAASxa,EACT23C,WAAYH,GACZI,KAAM,CACL75C,IAGF,CACCyc,QAAS9B,GACTi/B,WAAYF,GACZG,KAAM,CACL75C,KAGC+rB,GAAc,CAEjBoB,GACAiC,GACAwM,GACAvM,GACAC,GACAU,GACA4U,GACAtU,GACAK,GACA0K,GAEA+I,GAAoBJ,eACpB2C,GAAqB3C,eACrBiO,GAAmBjO,eACnByH,GAAoBzH,eACpB0U,GAAoB1U,eACpB4U,GAAoB5U,eACpBF,GAAyBE,eAEzBvI,GACAQ,GACAD,GACAE,GACAY,GACAyH,GACAE,KAIDqV,GAAA,SAAAt7C,GAmDC,SAAAs7C,EAAYv3C,EACTya,EACAqhB,EACA5J,EACAslB,EACAjlB,EACAJ,EACAC,EACAC,EACAolB,EACAhlB,EACAilB,EACA/kB,EACAna,EACAoa,EACAC,EACA0P,EACAxP,EACAC,EACAC,EACAjC,EACAkC,EACAykB,EACAvkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACiB/I,EACA2sB,EACDpd,EACCqd,EACAC,EACAC,EACAC,EACAr0B,EACjB9d,EACArF,EACiBy3C,GA9CpB,IAAAj8C,EAgDCC,EAAA5J,KAAAZ,KACCmmD,EACA3sB,EACAplB,EACArF,EACAR,EACAya,EACAkJ,EACAnL,EACAsjB,EACA5J,EACAC,EACAC,EACAC,EACAmlB,EACAjlB,EACAklB,EACAhlB,EACAilB,EACA/kB,EACA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ``\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiListLocalization {\n\n\ttranslation?: GuiListTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiListTranslation = TranslationChange;\n\nexport const GuiListDefaultTranslation = defaultTranslation;\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListLocalization, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: NgChanges<GuiListGateway>) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId?: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId?: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId?: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId?: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from './structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../domain/structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId?: StructureId): void;\n\n\tabstract enableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract disableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract scrollToTop(structureId?: StructureId): void;\n\n\tabstract scrollToBottom(structureId?: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId?: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId?: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId?: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId?: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId?: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId?: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId?: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId?: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { StructureId } from '../structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from '../api/structure.global-id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId?: SchemaReadModelRootId,\n\t\tstructureId?: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onSingleTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId?: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId?: SchemaReadModelRootId): Observable<SchemaCssClass>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId = schemaGlobalId,\n\t\t\t structureId: StructureId = structureGlobalId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { StructureDomainCommandInvoker } from '../../../../core/domain/structure.domain-command-invoker';\nimport { SchemaTheme } from '../../../../../schema/core';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureDomainCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../../../../../composition/core/domain/compositon.domain-command-invoker';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionDomainCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.create(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onContainerWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onWidthForEachColumn(compositionId?: CompositionId): Observable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId?: CompositionId): Observable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId?: CompositionId): Observable<boolean>;\n\n\tabstract onGroups(compositionId?: CompositionId): Observable<GroupCollection>;\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupRepository } from './group/composition.group.repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainWarehouse } from '../../../../../composition/core/domain-read/composition.domain-warehouse';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionDomainWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaDomainWarehouse } from '../../../../../schema/core/domain-read/schema.domain-warehouse';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaDomainWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { SchemaDomainCommandInvoker } from '../../../../../schema/core/domain/schema.domain-command-invoker';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { FabricModalThemeService } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaDomainCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tschemaDispatcher: SchemaDispatcher,\n\t\t\t\tfabricModalThemeService: FabricModalThemeService) {\n\t\tsuper(schemaDispatcher, structureCommandService, fabricModalThemeService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandInvoker, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { Subscription } from 'rxjs';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribeAndRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t// @Input()\n\t// rowColoring: RowColoring;\n\n\t// @Input()\n\t// rowStyle: GuiRowStyle;\n\n\t// @Input()\n\t// rowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t// @Input()\n\t// infoPanel: boolean | InfoPanelConfig;\n\n\t// @Input()\n\t// summaries: SummariesConfig;\n\n\t// @Input()\n\t// columnMenu: ColumnMenuConfig;\n\t//\n\t// @Input()\n\t// rowDetail: RowDetailConfig;\n\n\t// @Input()\n\t// titlePanel: TitlePanelConfig;\n\t//\n\t// @Input()\n\t// footerPanel: FooterPanelConfig;\n\t//\n\t// @Input()\n\t// localization: GuiLocalization;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t// @Output()\n\t// rowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme);\n\t\t}\n\n\t\t// if (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t// \tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t// }\n\n\t\t// if (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t// \tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t// }\n\t\t//\n\t\t// if (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t// \tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t// \tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t// }\n\n\t\t// if (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (typeof this.infoPanel === 'boolean') {\n\t\t// \t\tthis.infoPanel = {\n\t\t// \t\t\tenabled: this.infoPanel\n\t\t// \t\t};\n\t\t// \t}\n\t\t//\n\t\t// \tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t// \tthis.structureSummariesConfigService.set(this.summaries);\n\t\t// }\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (changes.loading !== undefined && changes.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.verticalGrid !== undefined && changes.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (changes.horizontalGrid !== undefined && changes.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\t// if (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t// \tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t// }\n\n\t\t// if (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t// \tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t// }\n\n\t\t// if (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t// \tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t// }\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (changes.virtualScroll !== undefined && changes.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (changes.sorting !== undefined && changes.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (changes.filtering !== undefined && changes.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (changes.quickFilters !== undefined && changes.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\t// if (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (this.localization.translationResolver) {\n\t\t// \t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t// \t}\n\t\t//\n\t\t// \tif (this.localization.translation) {\n\t\t// \t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t// \t}\n\t\t// }\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\t// this.schemaEventRepository\n\t\t// \t.onRowColoring(this.schemaId)\n\t\t// \t.pipe(this.takeUntil())\n\t\t// \t.subscribe((coloring: SchemaRowColoring) => {\n\t\t// \t\tthis.rowColoringChanged.emit(coloring);\n\t\t// \t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): Observable<number>;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, {selectedRows, allSelected, allUnselected}, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged((a: Paging, b: Paging) => {\n\t\t\t\t\treturn a.compare(b);\n\t\t\t\t}),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: `./paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: `./alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: `./alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: `./paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: `./paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureTitlePanelConfigArchive.titlePanelConfig);\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureFooterPanelConfigArchive.footerPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): Observable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): Observable<string>;\n\n}\n","import { SearchingRepository } from '../api/enabled/searching.repository';\nimport { SearchPhraseRepository } from '../api/phrase/search-phrase.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SearchWarehouse } from '../api/search.warehouse';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\"\n\t\t\t\t  class=\"gui-flex gui-relative gui-w-full\">\n\n\t\t\t\t<div gui-search-icon></div>\n\n\t\t\t\t<input formControlName=\"searchPhrase\"\n\t\t\t\t\t   class=\"gui-border-0 gui-w-full gui-h-full gui-py-5 gui-pr-5 gui-pl-21\"\n\t\t\t\t\t   [placeholder]=\"placeholder\">\n\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\"\n\t\t\t\t\t  class=\"gui-clear-search-icon\"\n\t\t\t\t\t  (click)=\"clear()\">\n\t\t\t\t</span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create();\n\t\tcompositionCommandDispatcher.create();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { ListViewReadModelRootId } from '../api/list-view.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new ListViewReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './list-view.global-id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { structureIdFactory } from '../../grid/feature/structure.component';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../grid/feature/local/local-providers';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<div gui-list-view-layout></div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker,\n\t\t\t\tprivate readonly translationService: TranslationService\n\t) {\n\t\tthis.translationService.setDefaultTranslation();\n\t\tstructureCommandService.create(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'div[gui-list-view-source]',\n\ttemplateUrl: `./list-view-source.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.containerTemplateArchive.onValue(),\n\t\t\t(template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-source';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../core/api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../core/api/mode/selector/list-view.selector.repository';\n\n\n@Component({\n\tselector: 'div[gui-list-view-layout]',\n\ttemplateUrl: `./list-view-layout.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewLayoutComponent extends SmartComponent implements OnInit {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewSelectorRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-layout';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'div[gui-list-view-item][item][template]',\n\ttemplateUrl: `./list-view-item.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-w-full');\n\t\tthis.addClassToHost('gui-my-6');\n\t\tthis.addClassToHost('gui-mx-0');\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnChanges() {\n\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-item';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: `./empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'div[gui-list-container-card]',\n\ttemplateUrl: `./list-view.container-card.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-flex-wrap');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-rounded');\n\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-container-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'div[gui-list-card-item][item][template]',\n\ttemplateUrl: `./list-view.card-item.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-cursor-pointer');\n\t\tthis.addClassToHost('gui-block');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-relative');\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../core/api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'div[gui-list-mode-select]',\n\ttemplateUrl: `./list-view.container-mode-select.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent implements OnInit {\n\n\toptions: Array<GuiSelectOption> = Object.keys(ListViewMode)\n\t\t\t\t\t\t\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t\t\t\t\t\t\t.filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t.map((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.toGuiSelectOption(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\tlistContainerMode: GuiSelectOption;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = this.toGuiSelectOption(mode);\n\t\t\t}\n\t\t);\n\t}\n\n\tchangeContainerMode(mode: GuiSelectOption): void {\n\t\tconst selectedMode = this.toListViewMode(mode.value);\n\t\tthis.listViewModeRepository.setMode(selectedMode, this.listViewReadModelRootId.toAggregateId());\n\t}\n\n\tprivate toGuiSelectOption(value: string | ListViewMode): GuiSelectOption {\n\t\treturn { value, name: value };\n\t}\n\n\tprivate toListViewMode(mode: string): ListViewMode {\n\n\t\tswitch (mode) {\n\t\t\tcase 'List':\n\t\t\t\treturn ListViewMode.LIST;\n\n\t\t\tcase 'Card':\n\t\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-mode-select';\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, null, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, mode, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, enabled, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract findById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewModeGate>) {\n\n\t\tif (this.isDefined('mode', changes)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', changes)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewTemplateGate>) {\n\n\t\tif (this.isDefined('template', changes)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', changes)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewFieldGate>) {\n\n\t\tif (this.isDefined('fields', changes)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiListLocalization } from '../../../../../gui/list/core/api/gui.list.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[localization]'\n})\nexport class ListViewL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { EditemItemValues } from '../../core/api/event/editem-item.values';\nimport { SourceCommandInvoker } from '../../core/api/source.command-invoker';\nimport { SourceEventService } from '../../core/api/event/source-event.service';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SourceGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\titems: Array<any> = [];\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly sourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\t\t\t  protected readonly sourceEventService: SourceEventService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceGate>) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (this.isDefined('source', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.source);\n\t\t}\n\n\t\tif (this.isDefined('items', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.items);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { SourceGate } from '../../../../source/feature/gate/source.gate';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../../source/core/api/event/source-event.service';\n\n\n@Directive({\n\tselector: 'gui-list-view[items]'\n})\nexport class ListViewSourceGate extends SourceGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprotected readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprotected readonly sourceEventService: SourceEventService) {\n\t\tsuper(structureId, sourceCommandService, sourceEventService);\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\nimport { ListViewL10nGate } from './l10n/list-view-l10n.gate';\nimport { ListViewSourceGate } from './source/list-view-source.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate,\n\tListViewL10nGate,\n\tListViewSourceGate\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-sorting-selector]',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SortingSelectorComponent extends SmartComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tchangeSorting(sorting: string) {\n\t\tconsole.log(sorting);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-sorting-selector';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: `./filter-type-selector.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tOutput,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../source/feature/empty/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view.gates';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/menu/filter-menu.feature-module';\n\nconst exportDeclarations = [\n\tListViewComponent,\n\tlistViewGatewayDeclarations,\n\t...listViewGatewayDeclarations\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: exportDeclarations,\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: `./structure-info-modal.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: `./structure.schema-manger.component.html`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: `./structure.schema-manager-icon.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-column-config',\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<div gui-unique-value-list\n\t\t\t\t\t\t\t [fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tInput,\n\tOnInit,\n\tOutput,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: `./structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: `./structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: `./structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.filterWarehouse\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from './structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from './structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t}\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../../../core/domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | guiTranslate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSummariesEventRepository } from '../../../../summaries/core/api/structure-summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.getBannerPanelConfig()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = title.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getBannerPanelConfig(): Observable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { Observable } from 'rxjs';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.onValue();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureThemeGateway>): void {\n\n\t\tif (changes.theme2 !== undefined && changes.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesEventRepository } from './structure-summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesEventRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../../panel/summaries/structure.summaries-config.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { StreamCloser } from '../../../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from './summaries/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gate/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}