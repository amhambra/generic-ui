{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/lib/container/template/contanier-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/lib/container/container.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/read/paging.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/structure-paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/lib/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/read/paging.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/read/paging.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/lib/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-list/lib/container/template/container-template.archive.ts","ng://@generic-ui/ngx-list/lib/container/container.providers.ts","ng://@generic-ui/ngx-list/lib/container/container.component.ts","ng://@generic-ui/ngx-list/lib/container/source/container-source.component.ts","ng://@generic-ui/ngx-list/lib/container/layout/container-layout.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/lib/container/source/list-item/container-list-item.component.ts","ng://@generic-ui/ngx-list/lib/container/container.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/structure-paging.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/paging/structure-paging.module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/paging/paging.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/feature-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","ContanierTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","GuiListGateway","ngOnChanges","changes","templateRef","listItem","containerTemplate","Input","guiListProviders","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","_this","_super","ofEvent","forEvents","pipe","subscribe","event","subs","console","tslib_1.__extends","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","structureId","set","toString","onOrigin","asObservable","map","get","distinctUntilChanged","Injectable","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","onStructure","structure","getEntities","ents1","ents2","flag","forEach","ent","index","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","GuiListComponent","platformId","elementRef","changeDetectorRef","structureSourceWarehouse","providers","host","[class]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ContainerGateway","sourceCommandService","containerTemplateArchive","simpleChanges","undefined","currentValue","source","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","enabled","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","paging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","pageSize","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","StructurePagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","pagerTop","changePagerBottom","pagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","page","pageSizes","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","pagingConfig","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","start","slice","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","PagingRepository","on","filter","getPaging","StructurePagingWarehouse","pagingRepository","onPaging","onSinglePaging","LocalPagingWarehouse","Observable","SetFormationCommand","payload","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","fieldId","externalFilterId","filterValue","getFieldId","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","getColumns","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FieldId","ASC","DESC","NONE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","Number","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","equalsById","getIds","Formation","selectedRows","selectedRowsList","ReadModelObject","FormationConverter","convert","aggregate","rows","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","Boolean","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","data","version","RandomStringGenerator","generate","getData","getUiId","replace","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","schemaId","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","columnFieldId","getItemId","getColumnFieldId","getValue","SourceCommandDispatcher","structureFieldUiRepository","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","ENTER","SUBMIT","CANCEL","StructureGateway","pagingCommandService","pagingEventService","sourceEventService","schemaCommandDispatcher","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelecting","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","displayMode","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","ngOnInit","onPageChange","emit","onPageSizeChange","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","onRowColoring","Output","NextPageEvent","PrevPageEvent","StructurePagingEventRepository","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","getPayload","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","sort","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","BASIC","ADVANCED","StructurePagingDisplayModeArchive","PagingDisplayMode","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","item","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","ngAfterViewInit","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure-border]","[id]","useExisting","Renderer2","ContainerTemplateArchive","containerProviders","ContainerComponent","ContainerSourceComponent","detectChanges","ContainerLayoutComponent","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","ContainerListItemComponent","context","ContainerModule","NgModule","imports","CommonModule","declarations","exports","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","StructurePagingComponent","alternativeDisplay","mode","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","FabricModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureInfoPanelComponent","dialog","menuColumnManagerService","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","TEXT","NUMBER","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","CUSTOM","FUNCTION","DATE","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","view","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","ViewChild","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","StringEditTemplateComponent","setSelectionRange","UNKNOWN","STRING","BOOLEAN","EditTemplatesComponent","dataType","DataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","type","text","CellValueType","FunctionViewComponent","element","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnField","columnConfig","presentation","header","align","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","cellEditingEnabled","isBooleanDataType","searchPhrase","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","field","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","isPlatformBrowser","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","PagingSetEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEventName","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEventName","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","matcher","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownField","SummariesType","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","delete","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SUMMARIES_CALCULATORS","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","structureAggregate","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","withoutGrid","imports$1","declarations$3","entryComponents$1"],"mappings":"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,OATuDoF,EAAAA,EAAAA,GASvD+xB,GATuDrM,EAAAA,SCoDvD,SAAgBsM,GAAmBC,GAClC,OAAO,IAAI9wB,EAAY,OAAS8wB,EAAUrtB,cAI3C,SAAgBstB,GAAqBD,GACpC,OAAO,IAAIprB,EAAc,OAASorB,EAAUrtB,cAI7C,SAAgButB,GAAgBF,GAC/B,OAAO,IAAIxR,GAAsB,OAASwR,EAAUrtB,cAIrD,IAAawtB,GAA+B90B,EAAA,CAC3C,CACC4lB,QAAS/hB,EACTkxB,WAAYL,GACZM,KAAM,CACL5tB,IAGF,CACCwe,QAASrc,EACTwrB,WAAYH,GACZI,KAAM,CACL5tB,IAGF,CACCwe,QAASzC,GACT4R,WAAYF,GACZG,KAAM,CACL5tB,KAGCue,GAAc,CAEjBG,GACAqC,GACA4J,GACA1J,GACAC,GACAC,GACAM,GACAK,GACA8H,GACAI,GACAE,GACAc,GACAD,GACAW,GACAa,GACAY,GACAE,KAIDQ,GAAA,SAAA/yB,GA6CC,SAAA+yB,EAAYhyB,EACTwG,EACAqgB,EACAC,EACAjjB,EACAkjB,EACAC,EACAC,EACAC,EACAC,EACAjF,EACAkF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACiBnlB,EACAC,EACA0gB,EACAuO,EACAC,EACAC,EACAC,EACAtR,EACAuR,GAlCpB,IAAArzB,EAoCCC,EAAAhE,KAAAZ,KACC2F,EACAwG,EACAsa,EACAoB,EACA2E,EACAC,EACAjjB,EACAkjB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACA7tB,YAtCkB2E,EAAA+D,WAAAA,EACA/D,EAAAgE,kBAAAA,EACAhE,EAAA0kB,SAAAA,EACA1kB,EAAAizB,oBAAAA,EACAjzB,EAAAkzB,0BAAAA,EACAlzB,EAAAmzB,4BAAAA,EACAnzB,EAAAozB,oBAAAA,EACApzB,EAAA8hB,sBAAAA,EACA9hB,EAA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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ContanierTemplate {\n\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\nimport { ContanierTemplate } from '../../../lib/container/template/contanier-template';\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@Input()\n\titems: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\tcontainerTemplate: ContanierTemplate;\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ContanierTemplate(this.template, templateRef);\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\nimport { StructureSourceWarehouse } from '../../../lib/structure/feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class]': `\"gui-list\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandDispatcher } from '../structure/feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../structure/domain/structure.id';\nimport { ContainerTemplateArchive } from './template/container-template.archive';\nimport { ContanierTemplate } from './template/contanier-template';\n\n\nexport abstract class ContainerGateway implements OnChanges {\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: ContanierTemplate;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandDispatcher,\n\t\tprotected readonly containerTemplateArchive: ContainerTemplateArchive\n\t\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.template !== undefined && simpleChanges.template.currentValue !== undefined) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\t}\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class StructurePagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingWarehouse } from '../../../feature-api/paging/structure-paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../feature-api/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends StructurePagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../paging/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../paging/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { StructureTitlePanelConfigArchive } from './title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './footer-panel/structure.footer-panel.config-archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ContanierTemplate } from './contanier-template';\n\n\n@Injectable()\nexport class ContainerTemplateArchive extends Archive<ContanierTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ContainerTemplateArchive } from './template/container-template.archive';\n\nexport const containerProviders = [\n\tContainerTemplateArchive\n];\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { ContainerGateway } from './container.gateway';\n\nimport { StructureId } from '../structure/domain/structure.id';\nimport { StructureIdGenerator } from '../structure/feature/structure-id.generator';\nimport { structureIdFactory } from '../structure/feature/structure.component';\nimport { StructureCommandDispatcher } from '../structure/feature-api/structure.command-dispatcher';\nimport { SourceCommandDispatcher } from '../structure/feature-api/source/source.command-dispatcher';\nimport { containerProviders } from './container.providers';\nimport { ContainerTemplateArchive } from './template/container-template.archive';\n\n\nconst localProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...containerProviders\n];\n\n@Component({\n\tselector: 'gui-container',\n\ttemplate: `\n\n\t\t<gui-container-layout></gui-container-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: localProviders,\n\tstyleUrls: [\n\t\t'./source/container-source.component.ngx.scss'\n\t],\n\thost: {\n\t\t'[class]': `\"gui-container\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ContainerComponent extends ContainerGateway {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tcontainerTemplateArchive: ContainerTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService,\n\t\t\tcontainerTemplateArchive\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { StructureSourceWarehouse } from '../../structure/feature-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../structure/domain/source/item.entity';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { ContainerTemplateArchive } from '../template/container-template.archive';\nimport { ContanierTemplate } from '../template/contanier-template';\n\n@Component({\n\tselector: 'gui-container-source',\n\ttemplate: `\n\n\t\t<gui-container-list-item *ngFor=\"let element of source\"\n\t\t\t\t\t   [item]=\"element\"\n\t\t\t\t\t   [template]=\"template\">\n\t\t</gui-container-list-item>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class]': `\"gui-container-source\"`\n\t}\n})\nexport class ContainerSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any>;\n\n\ttemplate: ContanierTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ContainerTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ContanierTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-container-layout',\n\ttemplate: `\n\n\t\t<gui-container-source></gui-container-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class]': `\"gui-container-layout\"`,\n\t}\n})\nexport class ContainerLayoutComponent {\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/pure-component';\nimport { ContanierTemplate } from '../../template/contanier-template';\n\n\n@Component({\n\tselector: 'gui-container-list-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div>\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class]': `\"gui-list-item\"`\n\t}\n})\nexport class ContainerListItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ContanierTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ContainerComponent } from './container.component';\nimport { ContainerSourceComponent } from './source/container-source.component';\nimport { ContainerLayoutComponent } from './layout/container-layout.component';\nimport { ContainerListItemComponent } from './source/list-item/container-list-item.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tContainerComponent,\n\t\tContainerListItemComponent,\n\t\tContainerLayoutComponent,\n\t\tContainerSourceComponent\n\t],\n\texports: [\n\t\tContainerComponent\n\t],\n\tproviders: []\n})\nexport class ContainerModule {\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.3\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../feature-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from './read/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { pagingProviders } from './paging/paging.providers';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { TitlePanelConfig } from './title-panel.config';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { FooterPanelConfig } from './footer-panel.config';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { StructurePagingModule } from '../feature/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../feature/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/footer-panel/structure.footer-panel.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ContainerModule } from '../../../lib/container/container.module';\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\n\nconst imports = [\n\tCommonModule,\n\tContainerModule\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tContainerModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t],\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n\n\tstatic withoutGrid(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListWithGridModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n}\n"]}