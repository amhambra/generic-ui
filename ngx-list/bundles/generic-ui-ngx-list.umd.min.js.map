{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-list/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-list/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-list/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain-read/paging.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain.command-invoker.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain-read/paging.domain.event-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.facade.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.domain-facade.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.id.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.archive.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.archive.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/gate.ts","ng://@generic-ui/ngx-list/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/l10n/list-view-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/source.gate.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/source/list-view-source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gates.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/search-phrase.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/enabled/searching-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-event-repository.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field-read-model.archive.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.archive.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.command-invoker.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.source-origin.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain-read/source.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.initial-values-ready.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/common/cdk/resize-detector/resize.detector.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/enabled/summaries-enabled-archive.service.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.event-repository.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/panel/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition-group.archive.ts","ng://@generic-ui/ngx-list/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/gate/structure-summaries.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-list/schema/feature/gate/grid/theme-grid.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/source-loading.gate.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/gate/structure-sorting.gate.ts","ng://@generic-ui/ngx-list/structure/filter/feature/gate/structure-filter.gate.ts","ng://@generic-ui/ngx-list/structure/filter/feature/gate/structure-quick-filters.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-list/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-list/common/cdk/resize-detector/resize-detector.module.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListDefaultTranslation","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","StructureCommandInvoker","Injectable","SourceCommandInvoker","ListViewTemplateArchive","Archive","ListViewCardTemplateArchive","listViewProviders","StreamCloser","unsubscribe$","HermesSubject","takeUntil","hermesTakeUntil","unsubscribe","isCompleted","complete","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","add","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","GuiComponent","innerElementRef","innerClassModifier","nativeElement","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","elementRef","viewInDom","streamCloser","hermesUnsubscribe$","ngAfterViewInit","ngOnDestroy","hermesUnsubscribe","reRender","isViewInDom","detectChanges","hermesSubscribe","stream$","callback","pipe","subscribe","streamValues","hermesSubscribeWithoutRender","subscribeAndEmit","emitter","mapper","PagingWarehouse","PagingCommandInvoker","SourceWarehouse","PagingDisplayModeArchive","TOP","BOTTOM","CssClassModifier","classModifier","select","CssClass","unselect","clazzName","toggle","PagingComponent","elRef","changeDetectorRef","cssClassModifier","structureId","pagingWarehouse","pagingCommandInvoker","sourceWarehouse","pagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","position","PagingPosition","ngOnInit","on","onPaging","calculatePagingVisibility","onOriginSize","size","sourceSize","changePageSize","nextPage","prevPage","isEnabled","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","currentPage","numberOfVisiblePages","sample","source","slice","compare","JSON","stringify","ReadModelObject","Boolean","Number","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","name","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","forEach","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","goToPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","pagingCommandService","calculate","pages","isSourceNotEmpty","pageNumber","activePage","PagingEventRepository","domainEventBus","DomainEventBus","EventRepository","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","config","Logger","StructureCommand","Command","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","CommandDispatcher","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","handle","structureAggregate","command","changePaging","publish","aggregate","DomainEventPublisher","NextPageEvent","NextPageCommandHandler","PrevPageEvent","PrevPageCommandHandler","structure","ChangePagesizeCommandHandler","aggregateEvents","getEvents","event","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","StructureReadModelRepository","ofEvent","forEvents","subs","console","Reactive","PagingRepository","structureRepository","hermesFilter","hermesMap","getPaging","PagingDomainWarehouse","pagingRepository","oncePaging","hermesTake","PagingDomainCommandInvoker","pagingDispatcher","enable","disable","changePagerTop","changePagerBottom","PagingDomainEventRepository","eventBus","hermesSwitchMap","PagingApiModule","provide","useClass","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationFacade","Dictionary","Map","resolver","changeTranslation","_b","keys","_c","set","getTranslation","from","reduce","obj","setResolver","TranslationDomainFacade","dictionary","dictionary$","HermesReplaySubject","toObservable","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","CreateAggregateCommand","ListViewCommand","SetListViewModeCommand","getMode","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","setMode","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","filterContainerToken","InjectionToken","CompositionReadModelRootId","CompositionId","SchemaId","SchemaReadModelRootId","listViewIdFactoryForList","generator","structureIdFactoryForList","compositionIdFactoryForList","schemaIdFactoryForList","componentListProviders","useFactory","deps","ListViewComponent","sourceCommandService","containerTemplateArchive","listCardTemplateArchive","structureCommandService","structurePagingCommandDispatcher","listViewCommandDispatcher","getElementRef","useExisting","[class.gui-list-view]","[class.gui-generic]","[id]","ListViewSourceComponent","structureSourceWarehouse","onEntities","items","getData","ListViewModeArchive","AggregateArchive","ListViewSelectorArchive","ListViewWarehouse","listViewModeArchive","listViewSelectorArchive","onMode","onSelector","ListViewLayoutComponent","listViewWarehouse","listModeEnabled","cardModeEnabled","selectorEnabled","searchBarEnabled","ListViewItemComponent","context","item","EmptySourceComponent","EmptySourceFeatureModule","ListViewContainerCardComponent","ListViewCardItemComponent","ListViewContainerModeSelectComponent","listViewModeRepository","options","filter","val","isInteger","toGuiSelectOption","listContainerMode","changeContainerMode","selectedMode","toListViewMode","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","schemaId","getTheme","ListViewModeSetAggregateEvent","SelectorVisibility","visible","isVisible","setEnabled","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","createEvent","addEvent","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","AggregateRoot","ListViewAggregateFactory","AggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryStore","InMemoryListViewAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","inMemorySchemaAggregateStore","findById","save","listViewAggregate","ListViewEventRepository","onModeChange","onEvent","SetListViewModeCommandHandler","publishFromAggregate","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","forEvent","ofMessageType","ListViewSelectorToggledEventHandler","listViewSelectorRepository","ListViewApiModule","defineAggregate","registerDomainEventHandler","Gate","isDefined","propertyName","PagingGate","compositionId","pagingEventRepository","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldCommandInvoker","initFields","ListViewFieldGate","fieldCommandDispatcher","SearchCommandInvoker","SearchEventRepository","SearchingGate","searchEventRepository","searchCommandInvoker","setSearchingConfig","onSearchPhrase","ListViewSearchingGate","ListViewL10nGate","localization","translationResolver","SourceGate","sourceCommandInvoker","sourceEventService","sourceEdited","setOrigin","onSourceEdited","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","ListViewSourceGate","listViewGatewayDeclarations","SetConfigSearchingCommand","getConfig","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchPhraseSetDomainEvent","OriginSetEvent","origin","getOrigin","StructureSummariesChangedEvent","values","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","getPreparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","some","dt","getDataType","removeSearchFilters","search","entities","searchedItems","Set","this_1","SearchManagerFactory","SearchHighlightArchive","HIGHLIGHTING","SearchPlaceholderArchive","PLACEHOLDER","SearchDispatcher","searchHighlightArchive","searchPlaceholderArchive","highlighting","placeholder","searchOnInit","SearchPhraseArchive","SEARCH_PHRASE","SearchPhraseSetEventHandler","searchPhraseRepository","SearchingEnabledArchive","ENABLED","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","domainEventHandlers","SearchWarehouse","SearchDomainWarehouse","searchingEnabledArchive","searchPhraseArchive","onSearchEnabled","onPhrase","onHighlight","onPlaceholder","SearchDomainEventRepository","SearchDomainCommandInvoker","searchDispatcher","SearchApiModule","StaticComponent","detach","IconComponent","SearchIconComponent","StructureWarehouse","SearchComponent","formBuilder","searchCommandDispatcher","structureWarehouse","searchWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","searchingEnabled","get","stopObserveChanges","setValue","reset","searchInputSubscription","fromRxJsObservable","controls","valueChanges","debounceTime","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","sorting","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","CompositionWarehouse","FieldReadModelArchive","FieldWarehouse","fieldReadModelArchive","onFields","FilterEnabledArchive","QuickFilterEnabledArchive","FilterTypeMap","getFilterTypes","fieldId","FilterTypeArchive","ActiveFilterArchive","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","getValues","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","UniqueValuesArchive","FilterWarehouse","filterEnabledArchive","structureQuickFilterRepository","filterTypeArchive","uniqueValuesArchive","activeFilterArchive","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","FilterMenuComponent","fieldWarehouse","filterWarehouse","filterCommandDispatcher","compositionWarehouse","columns","activeFilters","filterTypeMap","fieldReadModels","onHeaderColumns","onColumnSelect","selectedColumn","filterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","FilterMenuTriggerComponent","injector","drawerService","filterContainerRef","openDrawer","open","Injector","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","column","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","getEnabled","SetConfigFilterCommandHandler","setFilterConfig","SetConfigQuickFilterCommand","quickFiltersConfig","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","setQuickFiltersConfig","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","index","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","fields_1","fields_1_1","addField","dataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","getAll","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","structureFilterRepository","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFilterRepository","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","uniqueValuesRepository","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","ActiveFilterListComponent","ActiveSearchComponent","clearSearch","stopPropagation","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","exportDeclarations","ListViewFeatureModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","StructureThemeConverter","convertTheme","schemaTheme","SchemaTheme","Theme","SchemaWarehouse","StructureDialogColumnManagerService","schemaWarehouse","structureThemeConverter","fabricDialogService","readModelId","parentInjector","parent","useValue","onceTheme","theme","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","schemaReadModelRootId","menuColumnManagerService","schemaManagerService","structureInfoPanelArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","onPreparedEntities","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionCommandInvoker","StructureColumnManagerComponent","compositionCommandInvoker","onAllColumns","enabledColumnsCount","accumulator","toggleColumn","disableColumn","getColumnDefinitionId","enableColumn","StructureMenuColumnManagerComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","NONE","EVEN","ODD","SchemaCommandInvoker","StructureSchemaMangerComponent","schemaCommandInvoker","coloring","SchemaRowColoring","themes","onRowColoring","rowColoring","selectedRowColoring","onTheme","selectedTheme","onVerticalGrid","verticalGrid","onHorizontalGrid","horizontalGrid","toggleTheme","setTheme","toTheme","toggleRowColoring","schemaRowColoring","setRowColoring","toRowColoring","toggleVerticalGrid","setVerticalGrid","toggleHorizontalGrid","setHorizontalGrid","toLowerCase","RowColoring","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","withEnabled","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","SchemaCssClassManager","cssClass","init","cssHostRef","onCssClasses","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","SummariesCommandInvoker","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","setSummariesEnabled","structureComponentToken","ENTER","SUBMIT","CANCEL","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","setGroups","getConfigs","groups","initCommand","columnFieldIds","convertColumnFieldIds","params","convertColumns","setColumns","configs","columnConfigs","groupConfigs","matcher","summaries","columnFieldId","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structureCommandInvoker","sortingCommandDispatcher","compositionCommandDispatcher","compositionEventRepository","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureInitialValuesReadyArchive","themeChanged","columnsChanged","containerWidthChanged","cellEditEntered","cellEditCanceled","cellEditSubmitted","changeAfterInit","structureColumnInputHandler","editMode","cellEditing","width","setWidth","rowHeight","setRowHeight","autoResizeWidth","setResizeWidth","maxHeight","setContainerHeight","onColumnsChanged","onContainerWidthChanged","containerWidth","state","StructureCellEditState","onThemeChanged","componentInitialized","CompositionEventRepository","SelectedRow","itemId","getSource","getIndex","getItemId","SelectedRowChangedEvent","selectedRows","allUnselected","getSelectedRows","isAllSelected","isAllUnselected","FormationEventRepository","subject$","selectedItems","itemsMap","j","onItemSelected","has","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","getCompositionId","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","setSortingConfig","toggleSort","setSortOrder","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","ifPresent","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","equals","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldId","FieldIdGenerator","RandomStringGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldReadModelRepository","fieldUiConverter","FieldDomainModule","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","Source","loading","isLoading","SourceConverter","SetSourceLoadingEvent","SourceSetLoadingCommand","SourceSetLoadingCommandHandler","setLoading","SetOriginCommand","getItems","SetOriginCommandHandler","StructureEditSourceItemCommand","getParams","StructureEditSourceItemCommandHandler","editItem","SourceDispatcher","OriginItemEntity","rawData","version","getVersion","getPosition","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","EntityId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","ent","recalculatePositions","getEntities","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","payload","isArray","deleteOneOriginItem","deleteOriginItemByIndex","addOriginItem","toggleRow","getFormation","findOriginItemIndex","findIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","indexes","deleteManyOriginItemByItemID","itemIds","ADD","RANGE","FormationManager","RowSelectionMode","allItemIds","RowSelectToggleType","delete","rows","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedRepository","RowSelectedReadModel","isSelected","SelectedRowChangedEventHandler","rowSelectedRepository","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","RowSelectionModeRepository","SelectionModeSetEventHandler","rowSelectionModeRepository","modeSetEvent","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","byIndex","DeleteCommandPayloadType","byManyIndex","byItemId","byManyItemId","getPayload","DeleteOriginItemCommandHandler","deleteItem","StructureSourceOriginArchive","StructureOriginChangedEventHandler","structureSourceOriginRepository","origin_1","StructurePreparedItemsArchive","getValueOrNullOrThrowError","StructurePreparedItemsEventHandler","structurePreparedItemsRepository","SourceDomainModule","FormationWarehouse","selectedItemIds","getSelectedItemIds","onRowSelectedReadModel","onSelectedRows","rm","SourceDomainWarehouse","getStructure","hermesDistinctUntilChanged","ents1","ents2","flag","onEntitiesSize","onceEntities","onLoading","StructureEditSourceItemParams","getColumnFieldId","SourceDomainCommandInvoker","sourceDispatcher","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","toRxJsObservable","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","deleteManyItemsByItemIds","deleteManyItemsByIndex","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaDomainEvent","SchemaThemeSetEvent","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","SchemaAggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","InMemorySchemaAggregateRepository","schemaAggregate","CreateSchemaCommand","CreateSchemaCommandHandler","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaKey","SchemaVerticalGridRepository","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","registerMultiDomainEventHandler","SchemaDispatcher","SchemaDomainCommandInvoker","schemaDispatcher","fabricModalThemeService","toFabricTheme","setRowHeightBasedOnTheme","toSchemaRowColoring","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","SchemaDomainEventRepository","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","SchemaFeatureModule","schemaApiModule","StyleModifier","setStyleByName","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","StructureInitialValuesReadyArchive","v","once","structureIdFactoryForGrid","compositionIdFactoryForGrid","schemaIdFactoryForGrid","structureComponentSelfProviders","StructureComponent","sourceCommandDispatcher","schemaCommandDispatcher","detectorRef","structureDefinition","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","styleModifier","structureReadModelRoot","isLoaderVisible","offsetWidth","setContainerWidth","hermesTimer","onWidth","getStructureId","[class.gui-structure-border]","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","columnDefinitionId","sortStatus","sortable","align","getSortStatus","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","compositionReadModelService","translationFacade","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","structureFilterCommandService","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","VerticalFormationWarehouse","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","showGroups","onContainerWidth","containerRef","onGroups","collection","getGroups","onRowHeight","headerHeight","filtersRef","read","ChangedValueEmitter","StructureHeaderFilterComponent","sub","editContext","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","getUiId","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","onVerticalScrollEnabled","onVerticalFormation","onContainerHeight","onTopMargin","idToVerticalFormation","StructureContentComponent","formationCommandService","formationWarehouse","verticalFormationRepository","rowDetailOpened","schemaRowClass","schemaRowStyle","combineLatest","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","ResizeDetector","isPlatformBrowser","Observable","observer","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","throttleTime","hermesEmpty","destroy","StructureContainerComponent","ngZone","verticalFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","flatMap","onTemplateColumns","onResizeWidth","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","onScrollBarPosition","scrollPosition","scrollTop","height","runOutsideAngular","hermesFromEvent","setScrollPosition","NgZone","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","hermesStructure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","VerticalFormation_1","ROW_HEIGHT","HIDDEN_ITEMS_TOP","HIDDEN_ITEMS_BOTTOM","container","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","scrollToIndex","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","Override","getPrototypeOf","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","tslib_1.__decorate","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SummariesEnabledArchive","StructureCreatedEventHandler","summariesEnabledArchive","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","SetScrollPositionCommand","SetRowHeightCommand","StructureSetHeightCommand","SetRowHeightBasedOnThemeCommand","StructureDomainCommandInvoker","enableVirtualScroll","disableVirtualScroll","scrollToTop","scrollToBottom","MAX_SAFE_INTEGER","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","onSortOrder","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","moveLeft","moveRight","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","filterCommandInvoker","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","onBannerPanelConfig","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSetSummariesEnabledCommand","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","SummariesEventRepository","SummariesWarehouse","SummariesDomainWarehouse","structureSummariesRepository","onSummariesEnabled","SummariesDomainCommandInvoker","SummariesDomainEventRepository","onSummariesChanged","SummariesApiModule","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesEventRepository","summariesTranslations","isSummariesTypePresent","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","VerticalFormationScrollBarPositionArchive","DEFAULT_POSITION","ScrollBarPositionSetEventHandler","positionRepository","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationDomainWarehouse","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","getWidth","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","changeSort","sortParams","setSortStatus","param","sortParams_1","sortParams_1_1","columnId","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","ColumnId","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CompositionCommand","CreateCompositionCommand","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommand","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","composition","domainEvents","SetCompositionWidthCommand","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommand","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommand","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommand","getColumnId","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommand","getSortParams","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommand","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommand","CompositionMoveRightColumnCommandHandler","SetGroupsCommand","CompositionDispatcher","createComposition","setColumnEnabled","ChangeSortParams","CompositionChangeSortStatusEventHandler","compositionDispatcher","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isResizeWidthEnabled","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionReadModelRootRepository","ReadModelRootRepository","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","GroupCollection","CompositionGroupArchive","CompositionDomainCommandInvoker","compositionGroupRepository","toColumnId","defId","CompositionDomainEventRepository","CompositionDomainWarehouse","compositionRepository","compositionGroupArchive","onWidthForEachColumn","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","StructurePagingGate","SelectionGate","itemsSelected","rowSelection","StructureSelectionGate","StructureL10nGate","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","columnMenu","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","rowColoringChanged","StructureRowStyleGate","ThemeGridGate","horizontalGridChanged","verticalGridChanged","SourceLoadingGate","VerticalFormationGate","virtualScroll","StructureSortingGate","sortingCommandInvoker","StructureFilterGate","filtering","StructureQuickFiltersGate","quickFilters","structureGates","CssClassModule","StructureSharedModule","ResizeDetectorModule","createStructureDefinition","StructureModule","window","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ''\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ''\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiListLocalization {\n\n\ttranslation?: GuiListTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiListTranslation = TranslationChange;\n\nexport const GuiListDefaultTranslation = defaultTranslation;\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListLocalization, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: NgChanges<GuiListGateway>) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': '\"true\"'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\thermesSubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\thermesSubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<Paging>;\n\n\tabstract oncePaging(structureId: StructureId): HermesObservable<Paging>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from '../api/read/paging.repository';\nimport { Paging } from '../api/read/paging';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from '../api/read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { ListViewReadModelRootId } from '../api/list-view.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new ListViewReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './list-view.global-id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../core/api/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\n\n\n/** @internal */\nexport function listViewIdFactoryForList(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function structureIdFactoryForList(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForList(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-list-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForList(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-list-' + generator.generateId());\n}\n\nexport const componentListProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: ListViewReadModelRootId,\n\t\tuseFactory: listViewIdFactoryForList,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...listViewProviders,\n\n\tPagingFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<div gui-list-view-layout></div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentListProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': '\"true\"',\n\t\t'[class.gui-generic]': '\"true\"',\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker,\n\t\t\t\tprivate readonly translationService: TranslationFacade\n\t) {\n\t\tthis.translationService.setDefaultTranslation();\n\t\tstructureCommandService.create(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'div[gui-list-view-source]',\n\ttemplateUrl: './list-view-source.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.containerTemplateArchive.on(),\n\t\t\t(template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-source';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewModeArchive extends AggregateArchive<ListViewMode> {\n\n\tstatic readonly default = ListViewMode.LIST;\n\n\tconstructor() {\n\t\tsuper(ListViewModeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewSelectorArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(ListViewSelectorArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\nimport { ListViewModeArchive } from './mode/list-view.mode.archive';\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewSelectorArchive } from './mode/selector/list-view.selector.archive';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor(private readonly listViewModeArchive: ListViewModeArchive,\n\t\t\t\tprivate readonly listViewSelectorArchive: ListViewSelectorArchive) {\n\t}\n\n\tonMode(id: ListViewId): HermesObservable<ListViewMode> {\n\t\treturn this.listViewModeArchive.on(id);\n\t}\n\n\tonSelector(id: ListViewId): HermesObservable<boolean> {\n\t\treturn this.listViewSelectorArchive.on(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/list-view.read-model-root-id';\nimport { ListViewWarehouse } from '../../core/api/list-view.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-list-view-layout]',\n\ttemplateUrl: './list-view-layout.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewLayoutComponent extends SmartComponent implements OnInit {\n\n\tlistModeEnabled: boolean = false;\n\n\tcardModeEnabled: boolean = false;\n\n\tselectorEnabled: boolean = false;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewWarehouse: ListViewWarehouse\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onMode(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onSelector(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-layout';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'div[gui-list-view-item][item][template]',\n\ttemplateUrl: './list-view-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-w-full');\n\t\tthis.addClassToHost('gui-my-6');\n\t\tthis.addClassToHost('gui-mx-0');\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnChanges() {\n\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-item';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'div[gui-list-container-card]',\n\ttemplateUrl: './list-view.container-card.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-flex-wrap');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-rounded');\n\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listCardTemplateArchive.on(),\n\t\t\t(template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-container-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'div[gui-list-card-item][item][template]',\n\ttemplateUrl: './list-view.card-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-cursor-pointer');\n\t\tthis.addClassToHost('gui-block');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-relative');\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeArchive } from '../../../core/api/mode/list-view.mode.archive';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\nimport { ListViewWarehouse } from '../../../core/api/list-view.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-list-mode-select]',\n\ttemplateUrl: './list-view.container-mode-select.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent implements OnInit {\n\n\toptions: Array<GuiSelectOption> = Object.keys(ListViewMode)\n\t\t\t\t\t\t\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t\t\t\t\t\t\t.filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t.map((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.toGuiSelectOption(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\tlistContainerMode: GuiSelectOption;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewWarehouse: ListViewWarehouse,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.listViewWarehouse.onMode(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = this.toGuiSelectOption(mode);\n\t\t\t}\n\t\t);\n\t}\n\n\tchangeContainerMode(mode: GuiSelectOption): void {\n\t\tconst selectedMode = this.toListViewMode(mode.value);\n\t\tthis.listViewModeRepository.next(this.listViewReadModelRootId.toAggregateId(), selectedMode);\n\t}\n\n\tprivate toGuiSelectOption(value: string | ListViewMode): GuiSelectOption {\n\t\treturn { value, name: value };\n\t}\n\n\tprivate toListViewMode(mode: string): ListViewMode {\n\n\t\tswitch (mode) {\n\t\t\tcase 'List':\n\t\t\t\treturn ListViewMode.LIST;\n\n\t\t\tcase 'Card':\n\t\t\t\treturn ListViewMode.CARD;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-mode-select';\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, null, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, mode, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, enabled, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract findById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeArchive } from './list-view.mode.archive';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorArchive } from './list-view.selector.archive';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeArchive } from './mode/list-view.mode.archive';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorArchive } from './mode/selector/list-view.selector.archive';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeArchive,\n\t\tListViewSelectorArchive,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewModeGate>) {\n\n\t\tif (this.isDefined('mode', changes)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', changes)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewTemplateGate>) {\n\n\t\tif (this.isDefined('template', changes)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', changes)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewFieldGate>) {\n\n\t\tif (this.isDefined('fields', changes)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiListLocalization } from '../../../../../gui/list/core/api/gui.list.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[localization]'\n})\nexport class ListViewL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { EditemItemValues } from '../../core/api/event/editem-item.values';\nimport { SourceCommandInvoker } from '../../core/api/source.command-invoker';\nimport { SourceEventService } from '../../core/api/event/source-event.service';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SourceGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\titems: Array<any> = [];\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly sourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\t\t\t  protected readonly sourceEventService: SourceEventService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceGate>) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (this.isDefined('source', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.source, this.structureId);\n\t\t}\n\n\t\tif (this.isDefined('items', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.sourceEventService.onSourceEdited(this.structureId),\n\t\t\tthis.sourceEdited\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Directive } from '@angular/core';\n\nimport { SourceGate } from '../../../../source/feature/gate/source.gate';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../../source/core/api/event/source-event.service';\n\n\n@Directive({\n\tselector: 'gui-list-view[items]'\n})\nexport class ListViewSourceGate extends SourceGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprotected readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprotected readonly sourceEventService: SourceEventService) {\n\t\tsuper(structureId, sourceCommandService, sourceEventService);\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\nimport { ListViewL10nGate } from './l10n/list-view-l10n.gate';\nimport { ListViewSourceGate } from './source/list-view-source.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate,\n\tListViewL10nGate,\n\tListViewSourceGate\n];\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-sorting-selector]',\n\ttemplateUrl: './sorting-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SortingSelectorComponent extends SmartComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tchangeSorting(sorting: string) {\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-sorting-selector';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelArchive extends AggregateArchive<ReadonlyArray<FieldReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldReadModelArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldReadModelArchive) {\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldReadModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeMap> {\n\n\tstatic readonly default = new FilterTypeMap(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesArchive extends AggregateArchive<UniqueValuesReadModel> {\n\n\tstatic readonly default = new UniqueValuesReadModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValuesArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValuesArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeMap> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesArchive } from './unique-values.archive';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValuesArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../source/feature/empty/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view.gates';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/menu/filter-menu.feature-module';\n\nconst exportDeclarations = [\n\tListViewComponent,\n\tlistViewGatewayDeclarations,\n\t...listViewGatewayDeclarations\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: exportDeclarations,\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { SummariesCommandInvoker } from '../core/api/summaries.command-invoker';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SummariesConfig } from '../core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: SummariesCommandInvoker,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../../../summaries/feature/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width, this.compositionId);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: any;\n\n\tconstructor(source: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): any {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './field-read-model.archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelArchive,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.get(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../api/formation/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn this.on(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../../summaries/feature/structure.summaries.archive';\nimport { StructureSummariesConfigService } from '../../summaries/feature/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationReadModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureCellEditArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n}\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.hermesSubscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../../../summaries/feature/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../../../summaries/feature/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesArchive.on(),\n\t\t\t(config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSummariesEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: SummariesEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureSummariesRepository.on(structureId);\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\nimport { Injectable } from '@angular/core';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceReadModelService.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onHeaderColumns(this.structureId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from '../api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../structure.summaries-config.service';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tif (this.isDefined('sorting', changes)) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/filter-config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tif (this.isDefined('filtering', changes)) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tif (this.isDefined('quickFilters', changes)) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}