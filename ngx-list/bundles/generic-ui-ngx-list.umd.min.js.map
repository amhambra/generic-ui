{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/template/contanier-template.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/common/cdk/reactive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.gateway.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-list/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/smart-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/common/cdk/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/alternative-paging/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/alternative-paging/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/template/container-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.providers.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/container-source.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/container-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/container-list-item.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/container.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-list/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-list/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-list/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/domain-api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","ContanierTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListGateway","guiListPagingConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","paging","currentValue","Input","guiListProviders","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","_this","_super","ofEvent","forEvents","pipe","subscribe","event","subs","console","tslib_1.__extends","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","structureId","set","toString","onOrigin","asObservable","map","get","distinctUntilChanged","Injectable","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","onStructure","structure","getEntities","ents1","ents2","flag","forEach","ent","index","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","GuiListComponent","platformId","elementRef","changeDetectorRef","structureSourceWarehouse","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ContainerGateway","sourceCommandService","containerTemplateArchive","structurePagingCommandDispatcher","simpleChanges","setPaging","items","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CreateCompositionCommand","compositionId","Command","SetColumnsCommand","columns","getParams","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","commandDispatcher","createComposition","dispatch","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","CommandDispatcher","compositionGlobalId","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","SetPagingCommand","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","changePageSize","nextPage","prevPage","PagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","PageChangedEvent","aggregateId","DomainEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","AggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","PagingRepository","on","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","LocalPagingWarehouse","Observable","SetFormationCommand","payload","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","fieldId","externalFilterId","filterValue","getFieldId","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","getColumns","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FieldId","ASC","DESC","NONE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","LocalStructureCommandDispatcher","Number","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","equalsById","getIds","Formation","selectedRows","selectedRowsList","ReadModelObject","FormationConverter","aggregate","rows","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","Boolean","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","data","version","RandomStringGenerator","generate","getData","getUiId","replace","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","schemaId","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","DomainEventBus","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","columnFieldId","getItemId","getColumnFieldId","getValue","SourceCommandDispatcher","structureFieldUiRepository","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","LocalSourceCommandDispatcher","LocalSourceWarehouse","ColumnDefinitionId","ReadModelEntityId","LocalCompositionCommandDispatcher","columnDefId","CompositionReadModelRootRepository","ReadModelRootRepository","CompositionWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","LocalSchemaWarehouse","schemaReadModelRootId","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","rowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","EVEN","ODD","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","RowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","provide","useClass","provideComponentServices","SchemaCssClassManager","rendererFactory2","schemaReadModelRepository","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","SchemaTheme","className","nativeElement","RendererFactory2","StructureCellEditArchive","Archive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","SmartComponent","ENTER","SUBMIT","CANCEL","StructureGateway","pagingEventService","sourceEventService","schemaCommandDispatcher","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","rowDetail","titlePanel","footerPanel","columnMenu","nextConfig","rowSelecting","infoPanel","summaries","editMode","cellEditing","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","ngOnInit","onPageChange","emit","onPageSizeChange","onItemSelected","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","onSearchPhrase","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","onRowColoring","Output","NextPageEvent","PrevPageEvent","PagingEventRepository","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionEventRepository","getPayload","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","sort","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","PagingDisplayModeArchive","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","item","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValues","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","alternativeDisplay","PagingPosition","mode","detectChanges","isPagingVisible","[class.gui-paging]","Renderer2","PagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","[class.gui-paging-navigator]","PagingSelectComponent","[class.gui-paging-select]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","PagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","[class.gui-paging-stats]","AlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","pages","activePage","[class.gui-alternative-paging-pages]","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","getType","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","PagingApiModule","PagingFeatureModule","forComponent","FabricModule","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","ngAfterViewInit","offsetWidth","timer","setStyle","getStructureId","getElementRef","[class.gui-structure]","[class.gui-structure-border]","[id]","useExisting","ContainerTemplateArchive","containerProviders","componentProviders","ContainerComponent","[class.gui-container]","[class.gui-generic]","ContainerSourceComponent","[class.gui-container-source]","ContainerLayoutComponent","[class.gui-container-layout]","ContainerListItemComponent","context","[class.gui-list-item]","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","ContainerModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","NumberFormatterPipe","transform","number","Pipe","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","StructureDialogColumnManagerService","structureThemeConverter","fabricDialogService","readModelId","FabricDialogService","StructureInfoPanelComponent","dialog","menuColumnManagerService","infoModal","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","TEXT","NUMBER","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","CUSTOM","FUNCTION","DATE","BAR","PERCENTAGE_BAR","PERCENTAGE","ViewTemplatesComponent","getTemplate","view","CellView","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","ViewChild","read","ChangedValueEmitter","subject$","BLUR","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","StringEditTemplateComponent","setSelectionRange","UNKNOWN","STRING","BOOLEAN","EditTemplatesComponent","dataType","DataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","changed","ColumnQueryComponent","HTML","CellValue","type","text","CellValueType","FunctionViewComponent","element","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","RIGHT","CENTER","LEFT","AbstractColumnEntity","columnField","columnConfig","presentation","header","align","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnAlign","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","cellEditingEnabled","isBooleanDataType","searchPhrase","findValue","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","field","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","[class.gui-text-view]","Attribute","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","defineAggregate","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","isPlatformBrowser","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","matcher","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownField","SummariesType","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","delete","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","createStructureDefinition","StructureModule","window","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","withoutGrid","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ``\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ContanierTemplate {\n\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../domain-api/gui.list.api';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\nimport { ContanierTemplate } from '../../../structure/list/feature/template/contanier-template';\n\nimport { GuiListPaging } from '../domain-api/gui.list.api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@Input()\n\titems: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\tcontainerTemplate: ContanierTemplate;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ContanierTemplate(this.template, templateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\nimport { StructureSourceWarehouse } from '../../../lib/structure/feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': `\"true\"`\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n}\n","import { Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SourceCommandDispatcher } from '../../../lib/structure/feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { ContainerTemplateArchive } from './template/container-template.archive';\nimport { ContanierTemplate } from './template/contanier-template';\nimport { PagingConfig } from '../../paging/domain-api/paging-config';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\n\n\nexport abstract class ContainerGateway implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\t@Input()\n\ttemplate: ContanierTemplate;\n\n\t@Input()\n\tpaging: PagingConfig;\n\n\tprotected constructor(\n\t\tpublic readonly structureId: StructureId,\n\t\tprotected readonly sourceCommandService: SourceCommandDispatcher,\n\t\tprotected readonly containerTemplateArchive: ContainerTemplateArchive,\n\t\tprotected readonly structurePagingCommandDispatcher: PagingCommandDispatcher\n\t\t) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.template !== undefined && simpleChanges.template.currentValue !== undefined) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\t// if (this.paging.displayMode !== undefined) {\n\t\t\t\t// \tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.items) {\n\t\t\tthis.sourceCommandService.setOrigin(this.items, this.structureId);\n\t\t}\n\t}\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../../structure/paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/feature-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandDispatcher } from '../../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../../structure/paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../../structure/paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../lib/structure/feature-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../lib/structure/feature-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../../lib/structure/feature-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../../structure/paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../../structure/paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../../../../structure/paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../lib/structure/domain/structure.id';\nimport { structureGlobalId } from '../../lib/structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../lib/structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { PagingCommandDispatcher } from '../../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandDispatcher,\n\t\tprotected pagingEventService: PagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandDispatcher } from '../domain-api/paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../../lib/structure/feature-api/source/structure-source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandDispatcher,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandDispatcher } from '../../../domain-api/paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../lib/structure/domain/structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../lib/structure/domain/structure/structure.aggregate';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagingCommandDispatcher } from './paging.command-dispatcher';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandDispatcher,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule {\n\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingNavigatorComponent } from './navigator/paging-navigator.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { PagingStatsComponent } from './stats/paging-stats.component';\nimport { AlternativePagingNavigatorComponent } from './alternative-paging/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './alternative-paging/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { PagingCommandDispatcher } from '../../../structure/paging/domain-api/paging.command-dispatcher';\nimport { PagingEventRepository } from '../../../structure/paging/domain-api/paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../structure/paging/feature/mode/paging-display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandDispatcher,\n\t\t\t\tpagingEventService: PagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ContanierTemplate } from './contanier-template';\n\n\n@Injectable()\nexport class ContainerTemplateArchive extends Archive<ContanierTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ContainerTemplateArchive } from './template/container-template.archive';\n\nexport const containerProviders = [\n\tContainerTemplateArchive\n];\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { ContainerGateway } from './container.gateway';\n\nimport { StructureId } from '../../../lib/structure/domain/structure.id';\nimport { StructureIdGenerator } from '../../../lib/structure/feature/structure-id.generator';\nimport { structureIdFactory } from '../../../lib/structure/feature/structure.component';\nimport { StructureCommandDispatcher } from '../../../lib/structure/feature-api/structure.command-dispatcher';\nimport { SourceCommandDispatcher } from '../../../lib/structure/feature-api/source/source.command-dispatcher';\nimport { containerProviders } from './container.providers';\nimport { ContainerTemplateArchive } from './template/container-template.archive';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { localProviders, provideComponentServices } from '../../../lib/structure/feature/local/local-providers';\nimport { PagingCommandDispatcher } from '../../paging/domain-api/paging.command-dispatcher';\n\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...containerProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-container',\n\ttemplate: `\n\n\t\t<gui-container-layout></gui-container-layout>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: componentProviders,\n\tstyleUrls: [\n\t\t'./source/container-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-container]': `\"true\"`,\n\t\t'[class.gui-generic]': `\"true\"`,\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ContainerComponent extends ContainerGateway {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tcontainerTemplateArchive: ContainerTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandDispatcher\n\t) {\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tsourceCommandService,\n\t\t\tcontainerTemplateArchive,\n\t\t\tstructurePagingCommandDispatcher\n\t\t);\n\t\tstructureCommandService.createStructure(this.structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { StructureSourceWarehouse } from '../../../../lib/structure/feature-api/source/structure-source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ItemEntity } from '../../../../lib/structure/domain/source/item.entity';\nimport { StructureId } from '../../../../lib/structure/domain/structure.id';\nimport { ContainerTemplateArchive } from '../template/container-template.archive';\nimport { ContanierTemplate } from '../template/contanier-template';\n\n@Component({\n\tselector: 'gui-container-source',\n\ttemplate: `\n\n\t\t<gui-container-list-item *ngFor=\"let element of source\"\n\t\t\t\t\t   [item]=\"element\"\n\t\t\t\t\t   [template]=\"template\">\n\t\t</gui-container-list-item>\n\t\t\n\t\t<gui-empty-source [items]=\"source\">\n\t\t</gui-empty-source>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-container-source]': `\"true\"`\n\t}\n})\nexport class ContainerSourceComponent extends SmartComponent implements OnInit {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ContanierTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ContainerTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.containerTemplateArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ContanierTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-container-layout',\n\ttemplate: `\n\n\t\t<gui-paging [position]=\"0\" ></gui-paging>\n\t\t\n\t\t<gui-container-source></gui-container-source>\n\t\t\n\t\t<gui-paging [position]=\"1\"></gui-paging>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-container-layout]': `\"true\"`,\n\t}\n})\nexport class ContainerLayoutComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { ContanierTemplate } from '../../template/contanier-template';\n\n\n@Component({\n\tselector: 'gui-container-list-item[item][template]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"hasTemplateRef; else templateMethod\">\n\t\t\t<div class=\"gui-list-item-container\" >\n\t\t\t\t<ng-template *ngTemplateOutlet=\"template.getTemplateRef(); context: {item: item}\"></ng-template>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t\t<ng-template #templateMethod>\n\t\t\t<div class=\"gui-list-item-container\"\n\t\t\t\t [innerHTML]=\"context\"></div>\n\t\t</ng-template>\n\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-list-item]': `\"true\"`\n\t}\n})\nexport class ContainerListItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ContanierTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation, Input } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ContainerComponent } from './container.component';\nimport { ContainerSourceComponent } from './source/container-source.component';\nimport { ContainerLayoutComponent } from './layout/container-layout.component';\nimport { ContainerListItemComponent } from './source/list-item/container-list-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingFeatureModule,\n\t\tEmptySourceFeatureModule\n\t],\n\tdeclarations: [\n\t\tContainerComponent,\n\t\tContainerListItemComponent,\n\t\tContainerLayoutComponent,\n\t\tContainerSourceComponent\n\t],\n\texports: [\n\t\tContainerComponent\n\t],\n\tproviders: []\n})\nexport class ContainerModule {\n\n\tconstructor(private readonly paging: PagingFeatureModule) {}\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.4\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t  (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t  [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigService } from './structure.info-panel-config.service';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../feature-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../../../structure/paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../../structure/paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../../structure/paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../../structure/paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../../structure/paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../../structure/paging/domain/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../../../structure/paging/domain/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../../../structure/paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../../../structure/paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../structure/paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../structure/paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../structure/empty-source/feature/empty-source.feature-module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../feature/gui.list.component';\n\nimport { ContainerModule } from '../../../structure/list/feature/container.module';\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\nimport { GuiListItemComponent } from '../feature/item/gui.list-item.component';\n\nconst imports = [\n\tCommonModule,\n\tContainerModule\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tContainerModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t],\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n\n\tstatic withoutGrid(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListWithGridModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n}\n"]}