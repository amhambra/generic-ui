{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-list/gui/list/feature/item/gui.list-item.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-list/gui/list/feature/paging/gui-list.paging.converter.ts","ng://@generic-ui/ngx-list/gui/list/feature/card/gui.list-card.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode.ts","ng://@generic-ui/ngx-list/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-list/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.public-api.ts","ng://@generic-ui/ngx-list/gui/list/feature/mode/gui-list.mode.converter.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.gateway.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.providers.ts","ng://@generic-ui/ngx-list/gui/list/feature/gui.list.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.id.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-list/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.id.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.global-id.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-list/common/cdk/decorators.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/reactive.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-list/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-list/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-list/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.global-id.ts","ng://@generic-ui/ngx-list/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-list/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-list/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-list/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-list/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.global-id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/group/composition.group.repository.ts","ng://@generic-ui/ngx-list/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-list/structure/search/core/api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-list/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-list/structure/grid/feature/local/local-providers.ts","ng://@generic-ui/ngx-list/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-list/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-list/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-list/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-list/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-list/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-list/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-list/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-list/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-list/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-list/l10n/core/api/translation.service.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-list/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-list/l10n/core/domain/translation.service-impl.ts","ng://@generic-ui/ngx-list/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-list/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.warehouse.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.event-repository.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/searching.repository.ts","ng://@generic-ui/ngx-list/structure/search/core/api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-list/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-list/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-list/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-list/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-list/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-list/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-list/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-list/structure/source/core/api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-list/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-list/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-list/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-list/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/template/list-view-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/template/list-view.card-template.archive.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.providers.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.read-model-root-id.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.dispatcher.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.global-id.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.command-invoker.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-view-source.component.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view.mode.repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view.selector.repository.ts","ng://@generic-ui/ngx-list/structure/list/feature/layout/list-view-layout.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/source/list-item/list-view-item.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/list-view.container-card.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/card/card-item/list-view.card-item.component.ts","ng://@generic-ui/ngx-list/structure/list/feature/container/select/list-view.container-mode-select.component.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/list-view-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/list-view-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/selector-visibility.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/list-view-selector-toggled.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/create/create-list-view.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.store.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/infrastructure/in-memory/in-memory.list-view.aggregate-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.event-repository.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.warehouse.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/set-list-view-mode.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/mode/selector/toggle-list-view-selector.command-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/domain/list-view.domain-module.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/list-view-mode-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/mode/selector/list-view-selector-toggled.event-handler.ts","ng://@generic-ui/ngx-list/structure/list/core/api/list-view.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/component/gate.ts","ng://@generic-ui/ngx-list/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/paging/list-view-paging.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/mode/list-view-mode.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/template/list-view-template.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/field/list-view-field.gate.ts","ng://@generic-ui/ngx-list/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/searching/list-view-searching.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/l10n/list-view-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/source/list-view-source.gate.ts","ng://@generic-ui/ngx-list/structure/list/feature/gateway/list-view.gates.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.component.ts","ng://@generic-ui/ngx-list/structure/sorting/feature/selector/sorting-selector.feature-module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-list/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-list/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-list/structure/list/feature/list-view.feature-module.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-list/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-list/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-list/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-list/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-list/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-list/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-list/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-list/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-list/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-list/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-list/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-list/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.event-repository.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-translations.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-list/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-list/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-list/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-list/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-list/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.ts","ng://@generic-ui/ngx-list/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-list/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-list/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-list/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-list/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-list/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-list/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-list/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-list/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-list/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-list/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-list/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-list/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/summaries/structure-summaries.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-list/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-list/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-list/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-list/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-list/gui/list/core/api/gui.list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","GuiListItemComponent","Component","args","selector","template","ContentChild","TemplateRef","static","BASIC","ADVANCED","GuiListPagingConverter","convert","guiListPaging","pagingConfig","undefined","enabled","page","pageSize","pageSizes","pagerTop","pagerBottom","displayMode","PagingDisplayMode","GuiListCardComponent","LIST","CARD","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","GuiListDefaultTranslation","GuiListModeConverter","mode","GuiListMode","ListViewMode","ListViewCardTemplate","templRef","hasTemplateRef","getTemplateRef","getTemplateMethod","ListViewTemplate","GuiListGateway","pageChanged","EventEmitter","pageSizeChanged","searchPhraseChanged","guiListPagingConverter","guiListModeConverter","ngOnChanges","changes","templateRef","listItem","containerTemplate","cardTemplateRef","listCard","listCardTemplate","cardTemplate","paging","currentValue","view","active","listViewMode","listViewModeSelector","fields","listFields","map","f","field","type","searching","searchConfig","Input","Output","guiListProviders","GuiListComponent","platformId","_this","_super","tslib_1.__extends","onPageChange","emit","onPageSizeChange","onSearchPhraseChange","phrase","providers","host","[class.gui-list]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","StructureIdGenerator","increment","generateId","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","PagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","CompositionReadModelRootId","CompositionId","CompositionCommandInvoker","Injectable","StructureCommand","Command","SetPagingCommand","structureId","config","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","structureGlobalId","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","Override","container","getPrototypeOf","Error","name","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","sourceSize","logger","events","default","fromConfig","defaultPagingDefinition","getPage","getPageSizes","isPagerTop","isPagerBottom","isDisabled","getSourceSize","change","warn","setSourceSize","size","isNextPageDisabled","isPrevPageDisabled","find","ps","setPage","setPageSize","Math","ceil","calculateStart","firstItem","calculateEnd","lastItem","sample","source","start","slice","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","tslib_1.__decorate","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","LocalPagingWarehouse","Observable","ToggleSelectedRowCommand","selectedRow","getSelectedRow","getType","FormationDispatcher","toggleSelectedRow","SetEnabledSelectionCommand","SetSelectionModeCommand","getMode","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","selectAll","unselectAll","NONE","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SelectedRow","index","itemId","getData","getIndex","getItemId","StructureSourceOriginRepository","origin","Map","origin$","ReplaySubject","setOrigin","set","onOrigin","asObservable","get","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","ents1","ents2","flag","forEach","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","getSelectedRows","items","selectedItemIds","getSelectedItemIds","selectedItems","item","some","onRowSelectedReadModel","getValueOrNullOrThrowError","getAll","onSelectedRows","rm","onMode","LocalFormationWarehouse","rowSelectedArchive","StructureCommandInvoker","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","SourceSetLoadingCommand","SetOriginCommand","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","position","getPosition","SetScrollPositionCommand","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","theme","getTheme","StructureDomainCommandInvoker","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","scrollToTop","scrollToBottom","Number","MAX_SAFE_INTEGER","scrollToIndex","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","EVEN","ODD","SchemaDomainEvent","SchemaThemeSetEvent","schemaId","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","rowColoring","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","verticalGrid","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","horizontalGrid","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","setTheme","DEFAULT_THEME","setHorizontalGrid","DEFAULT_HORIZONTAL_GRID","setVerticalGrid","DEFAULT_VERTICAL_GRID","setRowColoring","DEFAULT_ROW_COLORING","createEvent","changeTheme","SchemaTheme","SchemaRowColoring","coloring","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","AggregateRepository","InMemorySchemaStore","InMemoryStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","findById","save","schemaAggregate","CreateSchemaCommand","CreateAggregateCommand","CreateSchemaCommandHandler","forCommand","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","domainEventPublisher","handle","command","publish","aggregate","publishFromAggregate","DomainEventPublisher","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","theme$","setCssClass","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaTheme","ofMessageType","schemaKey","SchemaVerticalGridRepository","forEvent","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","commandHandlers","HermesModule","registerCommandHandler","domainEventHandlers","registerDomainEventHandler","registerMultiDomainEventHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","SchemaDispatcher","SchemaCommandInvoker","SchemaWarehouse","SchemaEventRepository","DomainEventBus","EventRepository","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaDomainCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","toFabricTheme","schemaRowColoring","toSchemaRowColoring","RowColoring","Theme","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onTheme","onSingleTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","onCssClasses","SchemaDomainEventRepository","onThemeChanged","onEvent","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","defineAggregate","provide","useClass","ApiModule","SchemaRowClassArchive","Archive","SchemaRowStyleArchive","LocalStructureCommandDispatcher","compositionId","StructureWarehouse","LocalStructureWarehouse","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","FieldReadModelRepository","FieldWarehouse","fieldReadModelRepository","onFields","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","deleteRow","row","deleteItemById","deleteItemByIndex","deleteRows","rows","deleteManyItemsByItemIds","deleteManyItemsByIndex","LocalSourceCommandDispatcher","LocalSourceWarehouse","CompositionCommand","CreateCompositionCommand","SetColumnsCommand","columns","SetCompositionWidthCommand","width","getWidth","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","SetGroupsCommand","configs","getConfigs","CompositionDispatcher","createComposition","setColumns","setGroups","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","compositionGlobalId","ColumnDefinitionId","ReadModelEntityId","GroupCollection","groups","showGroups","getGroups","isVisible","CompositionGroupRepository","ColumnId","EntityId","CompositionDomainCommandInvoker","compositionDispatcher","compositionGroupRepository","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","LocalCompositionCommandDispatcher","columnDefId","CompositionWarehouse","CompositionReadModelRootRepository","ReadModelRootRepository","FieldId","CompositionDomainWarehouse","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","onGroups","LocalCompositionWarehouse","SetConfigSearchingCommand","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","search","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","schemaReadModelRootId","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","Paging","isNextDisabled","isPrevDisabled","end","getStart","getEnd","calculateVisiblePages","numberOfVisiblePages","compare","JSON","stringify","ReadModelObject","Boolean","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","version","RandomStringGenerator","generate","getUiId","replace","getVersion","isSelected","isEven","isOdd","entity","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","PagingSetEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","ifPresent","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","has","VerticalFormationScrollBarPositionRepository","StructureVerticalFormationWarehouse","verticalFormationRepository","positionRepository","onScrollBarPosition","LocalStructureVerticalFormationWarehouse","localProviders","provideComponentServices","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","ClassModifier","_a","class_1","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","SchemaCssClassManager","schemaReadModelRepository","cssClass","classModifier","init","elementRef","cssHostRef","diff","updateState","renderCssClasses","css","diff_1","keys","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","toggle","cssClassName","removeClass","className","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","nativeElement","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","InjectionToken","StreamCloser","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","ngAfterViewInit","reRender","isViewInDom","detectChanges","subscribeAndRender","obs$","callback","subscribeArguments","subscribeWithoutRender","ENTER","SUBMIT","CANCEL","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnFieldId","ColumnParams","column","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","columnConfigs","groupConfigs","matcher","summaries","sorting","columnField","getAccessorMethod","getDataType","getSearchAccessorMethod","StructureGateway","changeDetectorRef","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","searchCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandInvoker","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","formationCommandDispatcher","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","translationService","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","themeChanged","horizontalGridChanged","verticalGridChanged","changeAfterInit","structureColumnInputHandler","setDefaultTranslation","editMode","cellEditing","autoResizeWidth","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","ngOnInit","onColumnsChanged","onContainerWidthChanged","containerWidth","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","componentInitialized","isInitialized","isNotInitialized","NextPageEvent","PrevPageEvent","PagingEventRepository","eventBus","pagingReadModelService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionEventRepository","SelectedRowChangedEvent","selectedRows","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","onItemSelected","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","PagingDisplayModeArchive","RowSelectEnabledRepository","SearchEventRepository","onSearchPhrase","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","StructureRowDetailService","injector","drawerService","ref","turnOn","turnOff","close","Injector","parent","useValue","open","FabricDrawerService","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","PagingComponent","elRef","cssClassModifier","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","alternativeDisplay","isPagingVisible","localStreamCloser","PagingPosition","a","calculatePagingVisibility","ElementRef","ChangeDetectorRef","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","StructureAggregateRepository","SetPagingCommandHandler","structureAggregateRepository","structureAggregate","changePaging","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","PagingApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationService","Dictionary","resolver","changeTranslation","_b","_c","getTranslation","from","reduce","obj","setResolver","TranslationServiceImpl","dictionary","dictionary$","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigConverter","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","infoPanelConfig","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","preparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","DataType","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchPhraseSetEventHandler","structureSearchPhraseRepository","SearchingRepository","enabled$","setEnabled","onSearchingEnabled","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","SearchCommandInvoker","searchDispatcher","SearchWarehouse","SearchDomainWarehouse","searchPhraseRepository","onSearchEnabled","SearchApiModule","StaticComponent","detach","IconComponent","SearchIconComponent","SearchComponent","formBuilder","structureWarehouse","searchWarehouse","verticalFormationWarehouse","searchingEnabled","controlsConfig","FORM_SEARCH_NAME","searchForm","group","observeChanges","stopObserveChanges","setValue","reset","searchInputSubscription","controls","valueChanges","debounceTime","FormBuilder","ViewChild","SearchFeatureModule","searchApiModule","ReactiveFormsModule","FieldReadModel","dataType","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getAccessor","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","val","getSortMatcher","getSearchValue","DataField","summariesConfig","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","summariesTypes","assignDefaultSummaries","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","UnknownDataField","SummariesType","one","two","NumberDataField","numOne","numTwo","StringDataField","toLowerCase","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","filterContainerToken","ROW","CHECKBOX","SINGLE","MULTIPLE","RowSelection","isModeDefined","isTypeDefined","isEnabledDefined","RowSelectionBuilder","withType","withMode","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","RowSelectionType","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","isArray","deleteOneOriginItem","isInteger","deleteOriginItemByIndex","findOriginItemIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","findIndex","FormationManager","RowSelectionMode","setMode","allItemIds","RowSelectToggleType","delete","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaFeatureModule","schemaApiModule","StyleModifier","setStyleByName","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","sourceCommandDispatcher","schemaCommandDispatcher","compositionEventRepository","pagingDisplayModeArchive","detectorRef","structureDefinition","structureReadModelService","compositionReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","styleModifier","offsetWidth","timer","getStructureId","getElementRef","[class.gui-structure-border]","[id]","useExisting","ListViewTemplateArchive","ListViewCardTemplateArchive","listViewProviders","ListViewId","ListViewReadModelRootId","CreateListViewCommand","listViewId","ListViewCommand","SetListViewModeCommand","ToggleListViewSelectorCommand","iseEnabled","ListViewDispatcher","toggleSelector","listViewGlobalId","ListViewCommandInvoker","listViewDispatcher","listViewReadModelRootId","listViewIdFactory","componentProviders","ListViewComponent","containerTemplateArchive","listCardTemplateArchive","listViewCommandDispatcher","[class.gui-list-view]","[class.gui-generic]","ListViewSourceComponent","ListViewModeRepository","mode$","ListViewSelectorRepository","selectorEnabled","selectorEnabled$","ListViewLayoutComponent","listViewModeRepository","listViewSelectorRepository","searchBarEnabled","listModeEnabled","cardModeEnabled","ListViewItemComponent","context","EmptySourceComponent","EmptySourceFeatureModule","ListViewContainerCardComponent","ListViewCardItemComponent","ListViewContainerModeSelectComponent","options","toGuiSelectOption","listContainerMode","changeContainerMode","selectedMode","toListViewMode","ListViewDomainEvent","ListViewCreatedEvent","ListViewAggregateEvent","ListViewCreatedAggregateEvent","ListViewModeSetEvent","ListViewModeSetAggregateEvent","SelectorVisibility","visible","setVisible","ListViewSelectorToggledEvent","ListViewSelectorToggledAggregateEvent","ListViewAggregate","initSelectorVisibility","toggleModeSelector","selectorVisibility","emitEventAfterSelectorVisibilityChange","ListViewAggregateFactory","CreateListViewCommandHandler","InMemoryListViewStore","InMemoryListViewAggregateStore","ListViewAggregateRepository","InMemoryListViewAggregateRepository","listViewAggregate","ListViewEventRepository","onModeChange","ListViewWarehouse","SetListViewModeCommandHandler","ToggleListViewSelectorCommandHandler","ListViewDomainModule","listViewKey","ListViewModeSetEventHandler","ListViewSelectorToggledEventHandler","ListViewApiModule","Gate","isDefined","propertyName","PagingGate","ListViewPagingGate","Directive","ListViewModeGate","modeSelector","ListViewTemplateGate","ListViewFieldGate","SearchingGate","searchCommandInvoker","ListViewSearchingGate","ListViewL10nGate","localization","translationResolver","SourceGate","sourceCommandInvoker","ListViewSourceGate","listViewGatewayDeclarations","SortingSelectorComponent","sortingOptions","selectedSorting","changeSorting","SortingSelectorFeatureModule","FabricSelectModule","FilterIconComponent","FilterEnabledRepository","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","FilterMenuTriggerComponent","filterContainerRef","openDrawer","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","valueChanged","FORM_FILTER_VALUE","filterForm","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValuesReadModel","allDisabled","calculateSelection","getValues","areAllSelected","areAllDisabled","isSelectAllChecked","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","uv","uniqueValues","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","ActiveFilterListComponent","ActiveSearchComponent","clearSearch","stopPropagation","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","exportDeclarations","ListViewFeatureModule","NumberFormatterPipe","number","NumberFormatterModule","StructureInfoModalComponent","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","StructureDialogColumnManagerService","schemaWarehouse","structureThemeConverter","fabricDialogService","readModelId","parentInjector","FabricDialogService","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","infoModal","infoPanel","totalItemsSize","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","StructureColumnManagerComponent","enabledColumnsCount","accumulator","toggleColumn","getColumnDefinitionId","StructureMenuColumnManagerComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","SourceCounterFeatureModule","StructureInfoPanelModule","ASC","DESC","RIGHT","CENTER","LEFT","CellTemplateWithContext","viewTemplate","editTemplate","sortStatus","sortable","align","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","ColumnAlign","isAlignCenter","isAlignRight","StructureColumnConfigComponent","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","collection","headerHeight","filtersRef","read","ChangedValueEmitter","subject$","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationWarehouse","rowDetailOpened","combineLatest","schemaRowClass","schemaRowStyle","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","FUNCTION","BAR","PERCENTAGE_BAR","PERCENTAGE","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","CellView","txt","lowerCasedText","toLocaleLowerCase","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","structureParentComponent","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","scrollPosition","scrollTop","destroy","runOutsideAngular","fromEvent","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","pagingWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureSummariesRepository","onSummariesEnabled","StructureCreatedEventHandler","structureSummariesRepository","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesEventRepository","onSummariesChanged","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","summariesTranslations","isSummariesTypePresent","StructureSummariesPanelModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","getBannerPanelConfig","title","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","StructureThemeGateway","theme2","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","StructureSummariesWarehouse","SummariesApiModule","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","ScrollBarPositionSetEventHandler","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","setSortStatus","param","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","columnConfig","presentation","header","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","formatter","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","CompositionDomainEventRepository","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","StructurePagingGate","SelectionGate","itemsSelected","rowSelection","StructureSelectionGate","StructureL10nGate","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","columnMenu","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","rowColoringChanged","StructureRowStyleGate","structureGates","CssClassModule","StructureSharedModule","createStructureDefinition","StructureModule","isPlatformBrowser","window","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","GuiListWithGridModule","GuiListModule","forRoot","forChild","imports$1","declarations$3","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-item',\n\ttemplate: ''\n})\nexport class GuiListItemComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { GuiListPaging } from '../../core/api/gui.list.public-api';\nimport { PagingConfig } from '../../../../structure/paging/core/api/paging-config';\nimport { PagingDisplayMode } from '../../../../structure/paging/feature/mode/paging-display-mode';\n\n\nexport class GuiListPagingConverter {\n\n\tconvert(guiListPaging: GuiListPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiListPaging.enabled !== undefined && guiListPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiListPaging.enabled;\n\t\t}\n\n\t\tif (guiListPaging.page !== undefined && guiListPaging.page !== null) {\n\t\t\tpagingConfig.page = guiListPaging.page;\n\t\t}\n\n\t\tif (guiListPaging.pageSize !== undefined && guiListPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiListPaging.pageSize;\n\t\t}\n\n\t\tif (guiListPaging.pageSizes !== undefined && guiListPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiListPaging.pageSizes;\n\t\t}\n\n\t\tif (guiListPaging.pagerTop !== undefined && guiListPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiListPaging.pagerTop;\n\t\t} else {\n\t\t\tpagingConfig.pagerTop = true;\n\t\t}\n\n\t\tif (guiListPaging.pagerBottom !== undefined && guiListPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiListPaging.pagerBottom;\n\t\t}\n\n\t\tpagingConfig.displayMode = PagingDisplayMode.BASIC;\n\n\t\treturn pagingConfig;\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef } from '@angular/core';\n\n@Component({\n\tselector: 'gui-list-card',\n\ttemplate: ''\n})\nexport class GuiListCardComponent {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n}\n","export enum ListViewMode {\n\tLIST = 'List',\n\tCARD = 'Card'\n}\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport interface GuiListPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiListMode {\n\tLIST,\n\tCARD\n}\n\nexport interface GuiListView {\n\n\tactive?: GuiListMode;\n\n\tselector?: boolean;\n\n}\n\nexport interface GuiListField {\n\n\tfield?: string;\n\n\ttype?: GuiListFieldType;\n\n}\n\nexport enum GuiListFieldType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport interface GuiListSearching {\n\n\tenabled?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiListLocalization {\n\n\ttranslation?: GuiListTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiListTranslation = TranslationChange;\n\nexport const GuiListDefaultTranslation = defaultTranslation;\n","import { ListViewMode } from '../../../../structure/list/core/domain/mode/list-view-mode';\nimport { GuiListMode } from '../../core/api/gui.list.public-api';\n\nexport class GuiListModeConverter {\n\n\tconvert(mode: GuiListMode): ListViewMode {\n\n\t\tif (mode === GuiListMode.LIST) {\n\t\t\treturn ListViewMode.LIST;\n\t\t} else {\n\t\t\treturn ListViewMode.CARD;\n\t\t}\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewCardTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nexport class ListViewTemplate {\n\n\tconstructor(private readonly template: (item: any) => string,\n\t\t\t\tprivate readonly templRef: TemplateRef<any>) {\n\t}\n\n\thasTemplateRef(): boolean {\n\t\treturn !!this.templRef;\n\t}\n\n\tgetTemplateRef(): TemplateRef<any> {\n\t\treturn this.templRef;\n\t}\n\n\tgetTemplateMethod(): (item: any) => string {\n\t\treturn this.template;\n\t}\n}\n","import { ContentChild, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { GuiListItemComponent } from './item/gui.list-item.component';\n\nimport { GuiListField, GuiListLocalization, GuiListPaging, GuiListSearching, GuiListView } from '../core/api/gui.list.public-api';\nimport { GuiListPagingConverter } from './paging/gui-list.paging.converter';\nimport { GuiListCardComponent } from './card/gui.list-card.component';\nimport { GuiListModeConverter } from './mode/gui-list.mode.converter';\n\nimport { ListViewCardTemplate } from '../../../structure/list/feature/card/template/list-view.card-template';\nimport { ListViewTemplate } from '../../../structure/list/feature/source/template/list-view-template';\nimport { ListViewMode } from '../../../structure/list/core/domain/mode/list-view-mode';\nimport { FieldConfig } from '../../../structure/field/core/api/field.config';\nimport { SearchConfig } from '../../../structure/search/core/api/search-config';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiListGateway implements OnChanges {\n\n\t@ContentChild(GuiListItemComponent, { static: true })\n\tlistItem: GuiListItemComponent;\n\n\t@ContentChild(GuiListCardComponent, { static: true })\n\tlistCard: GuiListCardComponent;\n\n\t@Input()\n\tsource: Array<any>;\n\n\t@Input()\n\ttemplate: (item: any) => string;\n\n\t@Input()\n\tcardTemplate: (item: any) => string;\n\n\t@Input()\n\tpaging: boolean | GuiListPaging;\n\n\t@Input()\n\tview: GuiListView;\n\n\t@Input()\n\tfields: Array<GuiListField>;\n\n\t@Input()\n\tsearching: GuiListSearching;\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter<string>();\n\n\tcontainerTemplate: ListViewTemplate;\n\n\tlistCardTemplate: ListViewCardTemplate;\n\n\tlistViewMode: ListViewMode;\n\n\tlistViewModeSelector: boolean;\n\n\tguiListPagingConverter: GuiListPagingConverter = new GuiListPagingConverter();\n\n\tguiListModeConverter: GuiListModeConverter = new GuiListModeConverter();\n\n\tlistFields: Array<FieldConfig>;\n\n\tsearchConfig: SearchConfig;\n\n\tngOnChanges(changes: NgChanges<GuiListGateway>) {\n\n\t\tconst templateRef = this.listItem ? this.listItem.templateRef : null;\n\n\t\tthis.containerTemplate = new ListViewTemplate(this.template, templateRef);\n\n\t\tconst cardTemplateRef = this.listCard ? this.listCard.templateRef : null;\n\n\t\tthis.listCardTemplate = new ListViewCardTemplate(this.cardTemplate, cardTemplateRef);\n\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.guiListPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.view !== undefined && changes.view.currentValue !== undefined) {\n\n\t\t\tif (this.view.active !== undefined) {\n\t\t\t\tthis.listViewMode = this.guiListModeConverter.convert(this.view.active);\n\t\t\t}\n\n\t\t\tif (this.view.selector !== undefined) {\n\t\t\t\tthis.listViewModeSelector = this.view.selector;\n\t\t\t}\n\n\t\t}\n\n\t\tif (changes.fields !== undefined && changes.fields.currentValue !== undefined) {\n\n\t\t\tthis.listFields = this.fields.map((f) => {\n\t\t\t\treturn {\n\t\t\t\t\tfield: f.field,\n\t\t\t\t\ttype: f.type as any // DataType\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tif (changes.searching !== undefined && changes.searching.currentValue !== undefined) {\n\n\t\t\tthis.searchConfig = this.searching as SearchConfig;\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\n\nexport const guiListProviders = [] as Array<Provider>;\n","import { Component, Inject, PLATFORM_ID, ViewEncapsulation } from '@angular/core';\n\nimport { GuiListGateway } from './gui.list.gateway';\nimport { guiListProviders } from './gui.list.providers';\n\n\n@Component({\n\tselector: 'gui-list',\n\ttemplateUrl: './gui.list.component.html',\n\tstyleUrls: [\n\t\t'./gui.list.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiListProviders\n\t],\n\thost: {\n\t\t'[class.gui-list]': '\"true\"'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiListComponent extends GuiListGateway {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tsuper();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonSearchPhraseChange(phrase: string): void {\n\t\tthis.searchPhraseChanged.emit(phrase);\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId?: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId?: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId?: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId?: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId?: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId?: CompositionId): void;\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from './structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/core/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/core/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/core/api/paging.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingRepository } from '../../../../paging/core/api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/core/api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationDispatcher } from '../../../../source/core/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: any;\n\n\tconstructor(source: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t   //    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/core/api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../domain/structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId?: StructureId): void;\n\n\tabstract enableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract disableVerticalScroll(structureId?: StructureId): void;\n\n\tabstract scrollToTop(structureId?: StructureId): void;\n\n\tabstract scrollToBottom(structureId?: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId?: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId?: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId?: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId?: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId?: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId?: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId?: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId?: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { StructureId } from '../structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from './structure.id';\nimport { structureGlobalId } from '../api/structure.global-id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/core';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring),\n\t\t\t\taggregateId\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId?: SchemaReadModelRootId,\n\t\tstructureId?: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId?: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onSingleTheme(schemaId?: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGrid(schemaId?: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId?: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId?: SchemaReadModelRootId): Observable<SchemaCssClass>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): Observable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): Observable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): Observable<SchemaRowColoring>;\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../../structure/core/api/structure.global-id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId = schemaGlobalId,\n\t\t\t structureId: StructureId = structureGlobalId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { schemaGlobalId } from '../api/schema.global-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/core/api/quick-filters.config';\nimport { StructureDomainCommandInvoker } from '../../../../core/domain/structure.domain-command-invoker';\nimport { SchemaTheme } from '../../../../../schema/core';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureDomainCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tscrollToTop(): void {\n\t\tsuper.scrollToTop(this.structureId);\n\t}\n\n\t@Override\n\tscrollToBottom(): void {\n\t\tsuper.scrollToBottom(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../core/api/structure.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceDispatcher } from '../../../../source/core/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/core/api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureReadModelRepository } from '../../../core/api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/core/api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/core/api/prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupRepository extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], true);\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionId } from './composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/core/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/core/domain-read/definition/column-definition-id';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../../../../../composition/core/domain/compositon.domain-command-invoker';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionDomainCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionDispatcher, compositionGroupRepository);\n\t}\n\n\t@Override\n\tcreate(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.create(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetGroups(configs: any, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setGroups(configs, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onContainerWidth(compositionId?: CompositionId): Observable<number>;\n\n\tabstract onWidthForEachColumn(compositionId?: CompositionId): Observable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId?: CompositionId): Observable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId?: CompositionId): Observable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId?: CompositionId): Observable<boolean>;\n\n\tabstract onGroups(compositionId?: CompositionId): Observable<GroupCollection>;\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupRepository } from './group/composition.group.repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from '../api/composition.global-id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId = compositionGlobalId): Observable<GroupCollection> {\n\t\treturn this.compositionGroupRepository.on(compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/core/domain-read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/core/api/composition.global-id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { CompositionGroupRepository } from '../../../../../composition/core/domain-read/group/composition.group.repository';\nimport { CompositionDomainWarehouse } from '../../../../../composition/core/domain-read/composition.domain-warehouse';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionDomainWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tcompositionGroupRepository: CompositionGroupRepository) {\n\t\tsuper(compositionRepository, compositionGroupRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../../core/api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/core/domain/search.dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchConfig } from '../../../../search/core/api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/core/api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/core/api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/core/domain-read/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/core/domain-read/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/core/domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/core/domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaDomainWarehouse } from '../../../../../schema/core/domain-read/schema.domain-warehouse';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaDomainWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/core/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { SchemaDomainCommandInvoker } from '../../../../../schema/core/domain/schema.domain-command-invoker';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { FabricModalThemeService } from '@generic-ui/fabric';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaDomainCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tschemaDispatcher: SchemaDispatcher,\n\t\t\t\tfabricModalThemeService: FabricModalThemeService) {\n\t\tsuper(schemaDispatcher, structureCommandService, fabricModalThemeService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { StructureId } from '../structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionRepository extends AggregateArchive<number> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { VerticalFormationRepository } from '../../../../vertical-formation/core/api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionRepository } from '../../../../vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tpositionRepository: VerticalFormationScrollBarPositionRepository) {\n\t\tsuper(verticalFormationRepository, positionRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n\n\t@Override\n\tonScrollBarPosition(): Observable<number> {\n\t\treturn super.onScrollBarPosition(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/core/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandInvoker, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../domain/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../../summaries/core/api/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { Subscription } from 'rxjs';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\tsubscribeAndRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tsubscribeWithoutRender(obs$: any, callback: (args: any) => void): Subscription {\n\t\treturn obs$\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((subscribeArguments: any) => {\n\t\t\t\tcallback(subscribeArguments);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SortingConfig } from '../../../sorting/core/api/sorting-config';\nimport { FilterConfig } from '../../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/core/api/quick-filters.config';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationService } from '../../../../l10n/core/api/translation.service';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t// @Input()\n\t// rowColoring: RowColoring;\n\n\t// @Input()\n\t// rowStyle: GuiRowStyle;\n\n\t// @Input()\n\t// rowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t// @Input()\n\t// infoPanel: boolean | InfoPanelConfig;\n\n\t// @Input()\n\t// summaries: SummariesConfig;\n\n\t// @Input()\n\t// columnMenu: ColumnMenuConfig;\n\t//\n\t// @Input()\n\t// rowDetail: RowDetailConfig;\n\n\t// @Input()\n\t// titlePanel: TitlePanelConfig;\n\t//\n\t// @Input()\n\t// footerPanel: FooterPanelConfig;\n\t//\n\t// @Input()\n\t// localization: GuiLocalization;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t// @Output()\n\t// rowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationService\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme);\n\t\t}\n\n\t\t// if (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t// \tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t// }\n\n\t\t// if (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t// \tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t// }\n\t\t//\n\t\t// if (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t// \tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t// \tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t// }\n\n\t\t// if (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (typeof this.infoPanel === 'boolean') {\n\t\t// \t\tthis.infoPanel = {\n\t\t// \t\t\tenabled: this.infoPanel\n\t\t// \t\t};\n\t\t// \t}\n\t\t//\n\t\t// \tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t// }\n\n\t\t// if (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t// \tthis.structureSummariesConfigService.set(this.summaries);\n\t\t// }\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (changes.loading !== undefined && changes.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.verticalGrid !== undefined && changes.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (changes.horizontalGrid !== undefined && changes.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\t// if (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t// \tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t// }\n\n\t\t// if (simpleChanges.rowClass !== undefined && simpleChanges.rowClass.currentValue !== undefined) {\n\t\t// \tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t// }\n\n\t\t// if (simpleChanges.rowStyle !== undefined && simpleChanges.rowStyle.currentValue !== undefined) {\n\t\t// \tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t// }\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (changes.virtualScroll !== undefined && changes.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (changes.sorting !== undefined && changes.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (changes.filtering !== undefined && changes.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (changes.quickFilters !== undefined && changes.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\t// if (simpleChanges.localization !== undefined && simpleChanges.localization.currentValue !== undefined) {\n\t\t//\n\t\t// \tif (this.localization.translationResolver) {\n\t\t// \t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t// \t}\n\t\t//\n\t\t// \tif (this.localization.translation) {\n\t\t// \t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t// \t}\n\t\t// }\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\n\t\tthis.componentInitialized();\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\t// this.schemaEventRepository\n\t\t// \t.onRowColoring(this.schemaId)\n\t\t// \t.pipe(this.takeUntil())\n\t\t// \t.subscribe((coloring: SchemaRowColoring) => {\n\t\t// \t\tthis.rowColoringChanged.emit(coloring);\n\t\t// \t});\n\t}\n\n\tprivate isInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate isNotInitialized(): boolean {\n\t\treturn this.changeAfterInit;\n\t}\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): Observable<number>;\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\ton(): Observable<PagingDisplayMode> {\n\t\treturn super.on();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getData(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getData();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged(),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tdistinctUntilChanged((a: Paging, b: Paging) => {\n\t\t\t\t\treturn a.compare(b);\n\t\t\t\t}),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Observable } from 'rxjs';\nimport { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\n\nexport abstract class TranslationService {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): Observable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TranslationService } from '../core/api/translation.service';\nimport { Translation } from '../core/api/translation';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: Subscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationService) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\n\nimport { TranslationService } from '../api/translation.service';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\n\n\n@Injectable()\nexport class TranslationServiceImpl extends TranslationService {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: Subject<Translation> = new ReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): Observable<Translation> {\n\t\treturn this.dictionary$\n\t\t\t\t   .asObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationService } from '../core/api/translation.service';\nimport { TranslationServiceImpl } from '../core/domain/translation.service-impl';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationService, useClass: TranslationServiceImpl }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureTitlePanelConfigArchive.titlePanelConfig);\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper(StructureFooterPanelConfigArchive.footerPanelConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../api/enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): Observable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): Observable<string>;\n\n}\n","import { SearchingRepository } from '../api/enabled/searching.repository';\nimport { SearchPhraseRepository } from '../api/phrase/search-phrase.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SearchWarehouse } from '../api/search.warehouse';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../core/api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\"\n\t\t\t\t  class=\"gui-flex gui-relative gui-w-full\">\n\n\t\t\t\t<div gui-search-icon></div>\n\n\t\t\t\t<input formControlName=\"searchPhrase\"\n\t\t\t\t\t   class=\"gui-border-0 gui-w-full gui-h-full gui-py-5 gui-pr-5 gui-pl-21\"\n\t\t\t\t\t   [placeholder]=\"placeholder\">\n\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\"\n\t\t\t\t\t  class=\"gui-clear-search-icon\"\n\t\t\t\t\t  (click)=\"clear()\">\n\t\t\t\t</span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationService,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create();\n\t\tcompositionCommandDispatcher.create();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewTemplate } from './list-view-template';\n\n\n@Injectable()\nexport class ListViewTemplateArchive extends Archive<ListViewTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { ListViewCardTemplate } from './list-view.card-template';\n\n\n@Injectable()\nexport class ListViewCardTemplateArchive extends Archive<ListViewCardTemplate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\n\nexport const listViewProviders = [\n\tListViewTemplateArchive,\n\tListViewCardTemplateArchive\n];\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { ListViewReadModelRootId } from '../api/list-view.read-model-root-id';\n\nexport class ListViewId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new ListViewReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\n\n\nexport class ListViewReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): ListViewId {\n\t\treturn new ListViewId(this.getId());\n\t}\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../list-view.id';\n\n\nexport class CreateListViewCommand extends CreateAggregateCommand {\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'CreateListViewCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewCommand extends Command<ListViewId> {\n}\n","import { ListViewMode } from './list-view-mode';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewCommand } from '../list-view.command';\n\n\nexport class SetListViewModeCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'SetListViewModeCommand');\n\t}\n\n\tgetMode(): ListViewMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewCommand } from '../../list-view.command';\n\n\nexport class ToggleListViewSelectorCommand extends ListViewCommand {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ToggleListViewSelectorCommand');\n\t}\n\n\tiseEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { CreateListViewCommand } from './create/create-list-view.command';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SetListViewModeCommand } from './mode/set-list-view-mode.command';\nimport { ToggleListViewSelectorCommand } from './mode/selector/toggle-list-view-selector.command';\n\n\n@Injectable()\nexport class ListViewDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateListViewCommand(listViewId));\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new SetListViewModeCommand(listViewId, mode));\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleListViewSelectorCommand(listViewId, enabled));\n\t}\n\n}\n","import { ListViewReadModelRootId } from './list-view.read-model-root-id';\n\nexport const listViewGlobalId = new ListViewReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from '../domain/list-view.dispatcher';\nimport { listViewGlobalId } from './list-view.global-id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewMode } from '../domain/mode/list-view-mode';\n\n\n@Injectable()\nexport class ListViewCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly listViewDispatcher: ListViewDispatcher) {\n\t}\n\n\tcreate(listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.create(listViewReadModelRootId.toAggregateId());\n\t}\n\n\tsetMode(mode: ListViewMode, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.setMode(mode, listViewReadModelRootId.toAggregateId());\n\t}\n\n\ttoggleSelector(enabled: boolean, listViewReadModelRootId: ListViewReadModelRootId = listViewGlobalId): void {\n\t\tthis.listViewDispatcher.toggleSelector(enabled, listViewReadModelRootId.toAggregateId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureIdGenerator } from '../../grid/feature/structure-id.generator';\nimport { structureIdFactory } from '../../grid/feature/structure.component';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { listViewProviders } from './list-view.providers';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { provideComponentServices } from '../../grid/feature/local/local-providers';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { ListViewTemplateArchive } from './source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from './card/template/list-view.card-template.archive';\nimport { ListViewReadModelRootId } from '../core/api/list-view.read-model-root-id';\nimport { ListViewCommandInvoker } from '../core/api/list-view.command-invoker';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { TranslationService } from '../../../l10n/core/api/translation.service';\n\n\n/** @internal */\nexport function listViewIdFactory(generator: StructureIdGenerator): ListViewReadModelRootId {\n\treturn new ListViewReadModelRootId('gui-' + generator.generateId());\n}\n\nconst componentProviders = [{\n\tprovide: StructureId,\n\tuseFactory: structureIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n}, {\n\tprovide: ListViewReadModelRootId,\n\tuseFactory: listViewIdFactory,\n\tdeps: [\n\t\tStructureIdGenerator\n\t]\n},\n\t...listViewProviders,\n\n\t...provideComponentServices(),\n\n\tPagingFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent()\n];\n\n@Component({\n\tselector: 'gui-list-view',\n\ttemplate: `\n\n\t\t<div gui-list-view-layout></div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tproviders: [\n\t\t...componentProviders,\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: ListViewComponent\n\t\t}\n\t],\n\tstyleUrls: [\n\t\t'./style/list-view.ngx.scss',\n\t\t'./source/list-view-source.component.ngx.scss',\n\t\t'./style/theme/generic.list.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-list-view]': '\"true\"',\n\t\t'[class.gui-generic]': '\"true\"',\n\t\t'[id]': 'structureId.toString()'\n\t}\n})\nexport class ListViewComponent implements FilterContainerRef {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tsourceCommandService: SourceCommandInvoker,\n\t\t\t\tcontainerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tlistCardTemplateArchive: ListViewCardTemplateArchive,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tlistViewCommandDispatcher: ListViewCommandInvoker,\n\t\t\t\tprivate readonly translationService: TranslationService\n\t) {\n\t\tthis.translationService.setDefaultTranslation();\n\t\tstructureCommandService.create(this.structureId);\n\t\tlistViewCommandDispatcher.create(this.listViewReadModelRootId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewTemplate } from './template/list-view-template';\nimport { ListViewTemplateArchive } from './template/list-view-template.archive';\n\n@Component({\n\tselector: 'div[gui-list-view-source]',\n\ttemplateUrl: './list-view-source.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewSourceComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\tsource: Array<any> = [];\n\n\ttemplate: ListViewTemplate;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly containerTemplateArchive: ListViewTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.structureSourceWarehouse.onEntities(this.structureId),\n\t\t\t(items: Array<ItemEntity>) => {\n\t\t\t\tthis.source = items.map(i => i.getData());\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.containerTemplateArchive.on(),\n\t\t\t(template: ListViewTemplate) => {\n\t\t\t\tthis.template = template;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-source';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { ListViewMode } from '../../domain/mode/list-view-mode';\nimport { ListViewId } from '../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewModeRepository extends Reactive {\n\n\tprivate mode = new Map<string, ListViewMode>();\n\n\tprivate mode$ = new ReplaySubject<Map<string, ListViewMode>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.next(mode, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<ListViewMode> {\n\n\t\treturn this.mode$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, ListViewMode>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(mode: ListViewMode, listViewId: ListViewId): void {\n\t\tthis.mode.set(listViewId.toString(), mode);\n\t\tthis.mode$.next(this.mode);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../../domain/list-view.id';\n\n\n@Injectable()\nexport class ListViewSelectorRepository extends Reactive {\n\n\tprivate selectorEnabled = new Map<string, boolean>();\n\n\tprivate selectorEnabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetMode(selectorEnabled: boolean, listViewId: ListViewId): void {\n\t\tthis.next(selectorEnabled, listViewId);\n\t}\n\n\ton(listViewId: ListViewId): Observable<boolean> {\n\n\t\treturn this.selectorEnabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(listViewId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, listViewId: ListViewId): void {\n\t\tthis.selectorEnabled.set(listViewId.toString(), enabled);\n\t\tthis.selectorEnabled$.next(this.selectorEnabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../core/domain/mode/list-view-mode';\nimport { ListViewReadModelRootId } from '../../core/api/list-view.read-model-root-id';\nimport { ListViewModeRepository } from '../../core/api/mode/list-view.mode.repository';\nimport { ListViewSelectorRepository } from '../../core/api/mode/selector/list-view.selector.repository';\n\n\n@Component({\n\tselector: 'div[gui-list-view-layout]',\n\ttemplateUrl: './list-view-layout.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewLayoutComponent extends SmartComponent implements OnInit {\n\n\tlistModeEnabled: boolean;\n\n\tcardModeEnabled: boolean;\n\n\tselectorEnabled: boolean;\n\n\tsearchBarEnabled: boolean = true;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository,\n\t\t\t\tprivate readonly listViewSelectorRepository: ListViewSelectorRepository\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listModeEnabled = mode === ListViewMode.LIST;\n\t\t\t\tthis.cardModeEnabled = mode === ListViewMode.CARD;\n\t\t\t}\n\t\t);\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewSelectorRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.selectorEnabled = enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-view-layout';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewTemplate } from '../template/list-view-template';\n\n\n@Component({\n\tselector: 'div[gui-list-view-item][item][template]',\n\ttemplateUrl: './list-view-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-w-full');\n\t\tthis.addClassToHost('gui-my-6');\n\t\tthis.addClassToHost('gui-mx-0');\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnChanges() {\n\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-item';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ListViewCardTemplate } from './template/list-view.card-template';\nimport { ListViewCardTemplateArchive } from './template/list-view.card-template.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'div[gui-list-container-card]',\n\ttemplateUrl: './list-view.container-card.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerCardComponent extends SmartComponent implements OnInit, OnDestroy {\n\n\titems: Array<any> = [];\n\n\tcardTemplate: ListViewCardTemplate;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-flex-wrap');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-rounded');\n\n\t}\n\n\tngOnInit() {\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((items: Array<ItemEntity>) => {\n\t\t\t\tthis.items = items.map(i => i.getData());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.listCardTemplateArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((template: ListViewCardTemplate) => {\n\t\t\t\tthis.cardTemplate = template;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-container-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { ListViewCardTemplate } from '../template/list-view.card-template';\n\n\n@Component({\n\tselector: 'div[gui-list-card-item][item][template]',\n\ttemplateUrl: './list-view.card-item.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewCardItemComponent extends PureComponent {\n\n\t@Input()\n\titem: any;\n\n\t@Input()\n\ttemplate: ListViewCardTemplate;\n\n\tcontext: string = 'Template not provided';\n\n\thasTemplateRef: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\n\t\tthis.addClassToHost('gui-cursor-pointer');\n\t\tthis.addClassToHost('gui-block');\n\t\tthis.addClassToHost('gui-m-0');\n\t\tthis.addClassToHost('gui-p-0');\n\t\tthis.addClassToHost('gui-relative');\n\t}\n\n\tngOnChanges() {\n\t\tif (this.template && this.item) {\n\n\t\t\tthis.hasTemplateRef = this.template.hasTemplateRef();\n\n\t\t\tif (!this.hasTemplateRef) {\n\t\t\t\tthis.context = this.template.getTemplateMethod()(this.item);\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-card';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewModeRepository } from '../../../core/api/mode/list-view.mode.repository';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\n\n@Component({\n\tselector: 'div[gui-list-mode-select]',\n\ttemplateUrl: './list-view.container-mode-select.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListViewContainerModeSelectComponent extends SmartComponent implements OnInit {\n\n\toptions: Array<GuiSelectOption> = Object.keys(ListViewMode)\n\t\t\t\t\t\t\t\t\t\t\t.map((key: string) => ListViewMode[key])\n\t\t\t\t\t\t\t\t\t\t\t.filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t.map((val) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.toGuiSelectOption(val);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\tlistContainerMode: GuiSelectOption;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewModeRepository: ListViewModeRepository) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndRender(\n\t\t\tthis.listViewModeRepository.on(this.listViewReadModelRootId.toAggregateId()),\n\t\t\t(mode: ListViewMode) => {\n\t\t\t\tthis.listContainerMode = this.toGuiSelectOption(mode);\n\t\t\t}\n\t\t);\n\t}\n\n\tchangeContainerMode(mode: GuiSelectOption): void {\n\t\tconst selectedMode = this.toListViewMode(mode.value);\n\t\tthis.listViewModeRepository.setMode(selectedMode, this.listViewReadModelRootId.toAggregateId());\n\t}\n\n\tprivate toGuiSelectOption(value: string | ListViewMode): GuiSelectOption {\n\t\treturn { value, name: value };\n\t}\n\n\tprivate toListViewMode(mode: string): ListViewMode {\n\n\t\tswitch (mode) {\n\t\t\tcase 'List':\n\t\t\t\treturn ListViewMode.LIST;\n\n\t\t\tcase 'Card':\n\t\t\t\treturn ListViewMode.CARD;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-list-mode-select';\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewDomainEvent extends DomainEvent<ListViewId> {\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewCreatedEvent extends ListViewDomainEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, null, 'ListViewCreatedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ListViewId } from './list-view.id';\n\nexport abstract class ListViewAggregateEvent extends AggregateEvent<ListViewId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewCreatedEvent } from './list-view-created.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewCreatedAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(aggregateId: ListViewId) {\n\t\tsuper(aggregateId, 'ListViewCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewDomainEvent } from '../list-view.domain-event';\n\n\nexport class ListViewModeSetEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(schemaId, mode, 'ListViewModeSetEvent');\n\t}\n\n\tgetTheme(): ListViewMode {\n\t\treturn this.mode;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewModeSetEvent } from './list-view-mode-set.event';\nimport { ListViewId } from '../list-view.id';\nimport { ListViewMode } from './list-view-mode';\nimport { ListViewAggregateEvent } from '../list-view.aggregate-event';\n\nexport class ListViewModeSetAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly mode: ListViewMode) {\n\t\tsuper(listViewId, 'ListViewModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","export class SelectorVisibility {\n\n\tenabled: boolean = null;\n\n\tvisible: boolean = false;\n\n\tconstructor() {\n\t}\n\n\tisVisible(): boolean {\n\n\t\tif (this.enabled !== null) {\n\t\t\treturn this.enabled;\n\t\t}\n\n\t\treturn this.visible;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tthis.visible = visible;\n\t}\n\n}\n","import { ListViewId } from '../../list-view.id';\nimport { ListViewDomainEvent } from '../../list-view.domain-event';\n\n\nexport class ListViewSelectorToggledEvent extends ListViewDomainEvent {\n\n\tconstructor(schemaId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, enabled, 'ListViewSelectorToggledEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { ListViewSelectorToggledEvent } from './list-view-selector-toggled.event';\nimport { ListViewId } from '../../list-view.id';\nimport { ListViewAggregateEvent } from '../../list-view.aggregate-event';\n\n\nexport class ListViewSelectorToggledAggregateEvent extends ListViewAggregateEvent {\n\n\tconstructor(listViewId: ListViewId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(listViewId, 'ListViewSelectorToggledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<ListViewId> {\n\t\treturn new ListViewSelectorToggledEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewCreatedAggregateEvent } from './create/list-view-created.aggregate-event';\nimport { ListViewModeSetAggregateEvent } from './mode/list-view-mode-set.aggregate-event';\nimport { ListViewMode } from './mode/list-view-mode';\nimport { SelectorVisibility } from './mode/selector/selector-visibility';\nimport { ListViewSelectorToggledAggregateEvent } from './mode/selector/list-view-selector-toggled.aggregate-event';\n\n\nexport class ListViewAggregate extends AggregateRoot<ListViewId> {\n\n\tprivate mode: ListViewMode;\n\n\tprivate selectorVisibility: SelectorVisibility;\n\n\tconstructor(listViewId: ListViewId) {\n\t\tsuper(listViewId, 'ListViewAggregate');\n\t\tthis.setMode(ListViewMode.LIST);\n\t\tthis.initSelectorVisibility();\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<ListViewId>> {\n\t\treturn ListViewCreatedAggregateEvent;\n\t}\n\n\tsetMode(mode: ListViewMode): void {\n\t\tthis.mode = mode;\n\t\tthis.addEvent(new ListViewModeSetAggregateEvent(this.getId(), this.mode));\n\t}\n\n\ttoggleModeSelector(enabled: boolean): void {\n\t\tthis.selectorVisibility.setEnabled(enabled);\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate initSelectorVisibility(): void {\n\t\tthis.selectorVisibility = new SelectorVisibility();\n\t\tthis.emitEventAfterSelectorVisibilityChange();\n\t}\n\n\tprivate emitEventAfterSelectorVisibilityChange(): void {\n\t\tthis.addEvent(new ListViewSelectorToggledAggregateEvent(this.getId(), this.selectorVisibility.isVisible()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\n@Injectable()\nexport class ListViewAggregateFactory extends AggregateFactory<ListViewId, ListViewAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(id: ListViewId): ListViewAggregate {\n\t\treturn new ListViewAggregate(id);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateListViewCommand } from './create-list-view.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\n\n\n@Injectable()\nexport class CreateListViewCommandHandler implements CreateAggregateCommandHandler<ListViewAggregate, CreateListViewCommand> {\n\n\tforCommand(): CommandType<CreateListViewCommand> {\n\t\treturn CreateListViewCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewStore extends InMemoryStore<ListViewId, ListViewAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { InMemoryListViewStore } from './in-memory.list-view.store';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateStore extends InMemoryAggregateStore<ListViewId, ListViewAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemoryListViewStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { ListViewId } from './list-view.id';\nimport { ListViewAggregate } from './list-view.aggregate';\n\n\nexport abstract class ListViewAggregateRepository extends AggregateRepository<ListViewId, ListViewAggregate> {\n\n\tabstract findById(listViewId: ListViewId): Optional<ListViewAggregate>;\n\n\tabstract save(aggregate: ListViewAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { InMemoryListViewAggregateStore } from './in-memory.list-view.aggregate-store';\n\nimport { ListViewAggregateRepository } from '../../domain/list-view.aggregate-repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewAggregate } from '../../domain/list-view.aggregate';\n\n\n@Injectable()\nexport class InMemoryListViewAggregateRepository extends ListViewAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemoryListViewAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(listViewId: ListViewId): Optional<ListViewAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(listViewId);\n\t}\n\n\tsave(listViewAggregate: ListViewAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(listViewAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { ListViewId } from '../domain/list-view.id';\nimport { ListViewReadModelRootId } from './list-view.read-model-root-id';\nimport { ListViewModeSetEvent } from '../domain/mode/list-view-mode-set.event';\n\n@Injectable()\nexport class ListViewEventRepository extends EventRepository<ListViewReadModelRootId, ListViewId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonModeChange(listViewReadModelRootId: ListViewReadModelRootId) {\n\n\t\treturn this.onEvent(listViewReadModelRootId, ListViewModeSetEvent);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ListViewWarehouse implements Warehouse {\n\n\tconstructor() {\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetListViewModeCommand } from './set-list-view-mode.command';\nimport { ListViewAggregate } from '../list-view.aggregate';\nimport { ListViewCommand } from '../list-view.command';\n\n\n@Injectable()\nexport class SetListViewModeCommandHandler implements CommandHandler<ListViewAggregate, SetListViewModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetListViewModeCommand> {\n\t\treturn SetListViewModeCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: SetListViewModeCommand): void {\n\n\t\tconst mode = command.getMode();\n\n\t\tlistViewAggregate.setMode(mode);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ToggleListViewSelectorCommand } from './toggle-list-view-selector.command';\nimport { ListViewAggregate } from '../../list-view.aggregate';\nimport { ListViewCommand } from '../../list-view.command';\n\n\n@Injectable()\nexport class ToggleListViewSelectorCommandHandler implements CommandHandler<ListViewAggregate, ToggleListViewSelectorCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleListViewSelectorCommand> {\n\t\treturn ToggleListViewSelectorCommand;\n\t}\n\n\thandle(listViewAggregate: ListViewAggregate, command: ToggleListViewSelectorCommand): void {\n\n\t\tconst enabled = command.iseEnabled();\n\n\t\tlistViewAggregate.toggleModeSelector(enabled);\n\t}\n\n\tpublish(aggregate: ListViewAggregate, command: ListViewCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewDispatcher } from './list-view.dispatcher';\nimport { listViewKey } from '../api/list-view.api-module';\nimport { SetListViewModeCommandHandler } from './mode/set-list-view-mode.command-handler';\nimport { ToggleListViewSelectorCommandHandler } from './mode/selector/toggle-list-view-selector.command-handler';\n\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tListViewDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewDomainModule {\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetListViewModeCommandHandler, listViewKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleListViewSelectorCommandHandler, listViewKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewModeRepository } from './list-view.mode.repository';\nimport { ListViewId } from '../../domain/list-view.id';\nimport { ListViewModeSetEvent } from '../../domain/mode/list-view-mode-set.event';\n\n\n@Injectable()\nexport class ListViewModeSetEventHandler implements DomainEventHandler<ListViewId, ListViewModeSetEvent> {\n\n\tconstructor(private listViewModeRepository: ListViewModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewModeSetEvent> {\n\t\treturn ListViewModeSetEvent;\n\t}\n\n\thandle(event: ListViewModeSetEvent): void {\n\n\t\tif (event.ofMessageType('ListViewModeSetEvent')) {\n\t\t\tthis.listViewModeRepository.setMode(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { ListViewSelectorRepository } from './list-view.selector.repository';\n\nimport { ListViewId } from '../../../domain/list-view.id';\nimport { ListViewSelectorToggledEvent } from '../../../domain/mode/selector/list-view-selector-toggled.event';\n\n\n@Injectable()\nexport class ListViewSelectorToggledEventHandler implements DomainEventHandler<ListViewId, ListViewSelectorToggledEvent> {\n\n\tconstructor(private listViewSelectorRepository: ListViewSelectorRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ListViewSelectorToggledEvent> {\n\t\treturn ListViewSelectorToggledEvent;\n\t}\n\n\thandle(event: ListViewSelectorToggledEvent): void {\n\n\t\tif (event.ofMessageType('ListViewSelectorToggledEvent')) {\n\t\t\tthis.listViewSelectorRepository.setMode(event.isEnabled(), event.getAggregateId());\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ListViewAggregateFactory } from '../domain/list-view.aggregate-factory';\nimport { CreateListViewCommandHandler } from '../domain/create/create-list-view.command-handler';\nimport { InMemoryListViewAggregateRepository } from '../infrastructure/in-memory/in-memory.list-view.aggregate-repository';\nimport { ListViewCommandInvoker } from './list-view.command-invoker';\nimport { ListViewEventRepository } from './list-view.event-repository';\nimport { ListViewWarehouse } from './list-view.warehouse';\nimport { InMemoryListViewAggregateStore } from '../infrastructure/in-memory/in-memory.list-view.aggregate-store';\nimport { InMemoryListViewStore } from '../infrastructure/in-memory/in-memory.list-view.store';\nimport { ListViewDomainModule } from '../domain/list-view.domain-module';\nimport { ListViewModeRepository } from './mode/list-view.mode.repository';\nimport { ListViewModeSetEventHandler } from './mode/list-view-mode-set.event-handler';\nimport { ListViewSelectorToggledEventHandler } from './mode/selector/list-view-selector-toggled.event-handler';\nimport { ListViewSelectorRepository } from './mode/selector/list-view.selector.repository';\n\nexport const listViewKey = 'ListViewKey';\n\n@NgModule({\n\timports: [\n\n\t\tHermesModule,\n\t\tHermesModule.defineAggregate(\n\t\t\tlistViewKey,\n\t\t\tListViewAggregateFactory,\n\t\t\tInMemoryListViewAggregateRepository,\n\t\t\tCreateListViewCommandHandler,\n\t\t\t[\n\t\t\t\t...ListViewDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewModeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(ListViewSelectorToggledEventHandler)\n\t\t\t]\n\t\t),\n\t\tListViewDomainModule\n\n\t],\n\tproviders: [\n\t\tListViewCommandInvoker,\n\t\tListViewEventRepository,\n\t\tListViewWarehouse,\n\n\t\tListViewModeRepository,\n\t\tListViewSelectorRepository,\n\n\t\tInMemoryListViewAggregateStore,\n\t\tInMemoryListViewStore\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class ListViewApiModule {\n}\n","import { OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[paging]'\n})\nexport class ListViewPagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewMode } from '../../../core/domain/mode/list-view-mode';\nimport { ListViewCommandInvoker } from '../../../core/api/list-view.command-invoker';\nimport { ListViewReadModelRootId } from '../../../core/api/list-view.read-model-root-id';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewModeGate extends Gate implements OnChanges {\n\n\t@Input()\n\tmode: ListViewMode;\n\n\t@Input()\n\tmodeSelector: boolean;\n\n\tconstructor(public readonly listViewReadModelRootId: ListViewReadModelRootId,\n\t\t\t\tprivate readonly listViewCommandDispatcher: ListViewCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewModeGate>) {\n\n\t\tif (this.isDefined('mode', changes)) {\n\t\t\tthis.listViewCommandDispatcher.setMode(this.mode, this.listViewReadModelRootId);\n\t\t}\n\n\t\tif (this.isDefined('modeSelector', changes)) {\n\t\t\tthis.listViewCommandDispatcher.toggleSelector(this.modeSelector, this.listViewReadModelRootId);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ListViewTemplateArchive } from '../../source/template/list-view-template.archive';\nimport { ListViewCardTemplateArchive } from '../../card/template/list-view.card-template.archive';\nimport { ListViewTemplate } from '../../source/template/list-view-template';\nimport { ListViewCardTemplate } from '../../card/template/list-view.card-template';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[mode]'\n})\nexport class ListViewTemplateGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttemplate: ListViewTemplate;\n\n\t@Input()\n\tcardTemplate: ListViewCardTemplate;\n\n\tconstructor(private readonly containerTemplateArchive: ListViewTemplateArchive,\n\t\t\t\tprivate readonly listCardTemplateArchive: ListViewCardTemplateArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewTemplateGate>) {\n\n\t\tif (this.isDefined('template', changes)) {\n\t\t\tthis.containerTemplateArchive.next(this.template);\n\t\t}\n\n\t\tif (this.isDefined('cardTemplate', changes)) {\n\t\t\tthis.listCardTemplateArchive.next(this.cardTemplate);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldCommandInvoker } from '../../../../field/core/api/field.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[fields]'\n})\nexport class ListViewFieldGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfields: Array<FieldConfig>;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldCommandDispatcher: FieldCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewFieldGate>) {\n\n\t\tif (this.isDefined('fields', changes)) {\n\n\t\t\tthis.fieldCommandDispatcher.initFields(this.fields, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\n\n\n@Directive({\n\tselector: 'gui-list-view[searching]'\n})\nexport class ListViewSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiListLocalization } from '../../../../../gui/list/core/api/gui.list.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-list-view[localization]'\n})\nexport class ListViewL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiListLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ListViewL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { EditemItemValues } from '../../core/api/event/editem-item.values';\nimport { SourceCommandInvoker } from '../../core/api/source.command-invoker';\nimport { SourceEventService } from '../../core/api/event/source-event.service';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SourceGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\titems: Array<any> = [];\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly sourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\t\t\t  protected readonly sourceEventService: SourceEventService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceGate>) {\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (this.isDefined('source', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.source);\n\t\t}\n\n\t\tif (this.isDefined('items', changes)) {\n\t\t\tthis.sourceCommandInvoker.setOrigin(this.items);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { SourceGate } from '../../../../source/feature/gate/source.gate';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../../source/core/api/event/source-event.service';\n\n\n@Directive({\n\tselector: 'gui-list-view[items]'\n})\nexport class ListViewSourceGate extends SourceGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprotected readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprotected readonly sourceEventService: SourceEventService) {\n\t\tsuper(structureId, sourceCommandService, sourceEventService);\n\t}\n\n}\n","import { ListViewPagingGate } from './paging/list-view-paging.gate';\nimport { ListViewModeGate } from './mode/list-view-mode.gate';\nimport { ListViewTemplateGate } from './template/list-view-template.gate';\nimport { ListViewFieldGate } from './field/list-view-field.gate';\nimport { ListViewSearchingGate } from './searching/list-view-searching.gate';\nimport { ListViewL10nGate } from './l10n/list-view-l10n.gate';\nimport { ListViewSourceGate } from './source/list-view-source.gate';\n\nexport const listViewGatewayDeclarations = [\n\tListViewPagingGate,\n\tListViewModeGate,\n\tListViewTemplateGate,\n\tListViewFieldGate,\n\tListViewSearchingGate,\n\tListViewL10nGate,\n\tListViewSourceGate\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-sorting-selector]',\n\ttemplate: `\n\n\t\t<gui-select (optionChanged)=\"changeSorting($event)\"\n\t\t\t\t\t[options]=\"sortingOptions\"\n\t\t\t\t\t[selected]=\"selectedSorting\"\n\t\t\t\t\t[width]=\"200\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SortingSelectorComponent extends SmartComponent {\n\n\tsortingOptions = [\n\t\t'Name: A-Z',\n\t\t'Name: Z-A',\n\t\t'Price: Low to High',\n\t\t'Price: High to Low',\n\t\t'None'\n\t];\n\n\tselectedSorting = this.sortingOptions[0];\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tchangeSorting(sorting: string) {\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-sorting-selector';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { SortingSelectorComponent } from './sorting-selector.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricSelectModule\n\t],\n\tdeclarations: [\n\t\tSortingSelectorComponent\n\t],\n\texports: [\n\t\tSortingSelectorComponent\n\t]\n})\nexport class SortingSelectorFeatureModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricSelectModule } from '@generic-ui/fabric';\n\nimport { ListViewComponent } from './list-view.component';\nimport { ListViewSourceComponent } from './source/list-view-source.component';\nimport { ListViewLayoutComponent } from './layout/list-view-layout.component';\nimport { ListViewItemComponent } from './source/list-item/list-view-item.component';\n\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { EmptySourceFeatureModule } from '../../source/feature/empty/empty-source.feature-module';\nimport { ListViewContainerCardComponent } from './card/list-view.container-card.component';\nimport { ListViewCardItemComponent } from './card/card-item/list-view.card-item.component';\nimport { ListViewContainerModeSelectComponent } from './container/select/list-view.container-mode-select.component';\nimport { ListViewApiModule } from '../core/api/list-view.api-module';\nimport { listViewGatewayDeclarations } from './gateway/list-view.gates';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SortingSelectorFeatureModule } from '../../sorting/feature/selector/sorting-selector.feature-module';\nimport { FilterMenuFeatureModule } from '../../filter/feature/menu/filter-menu.feature-module';\n\nconst exportDeclarations = [\n\tListViewComponent,\n\tlistViewGatewayDeclarations,\n\t...listViewGatewayDeclarations\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewApiModule,\n\n\t\tFabricSelectModule,\n\t\tPagingFeatureModule,\n\t\tSearchFeatureModule,\n\t\tEmptySourceFeatureModule,\n\t\tSortingSelectorFeatureModule,\n\t\tFilterMenuFeatureModule\n\t],\n\tdeclarations: [\n\t\tListViewComponent,\n\t\tListViewItemComponent,\n\t\tListViewLayoutComponent,\n\t\tListViewSourceComponent,\n\n\t\tListViewContainerCardComponent,\n\t\tListViewCardItemComponent,\n\t\tListViewContainerModeSelectComponent,\n\n\t\t...listViewGatewayDeclarations\n\t],\n\texports: exportDeclarations,\n\tproviders: []\n})\nexport class ListViewFeatureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tconstructor(private readonly paging: PagingFeatureModule) {\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionWarehouse\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'gui-column-config',\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [dropdownTextTranslation]=\"dropdownTextTranslation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<div gui-unique-value-list\n\t\t\t\t\t\t\t [fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<div gui-structure-menu-column-manager>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tswitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\tthis.config = config;\n\t\t\t\t\treturn this.translationService.onTranslation();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onGroups(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((collection: GroupCollection) => {\n\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchPhraseRepository } from '../../../search/core/api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/core/api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.reRender();\n\t\t });\n\n\t\tthis.schemaRowClassArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.schemaRowStyleArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../../vertical-formation/core/api/structure-vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.reRender();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onScrollBarPosition()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.on()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(this.localStreamCloser.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.filterWarehouse\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from './structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from './structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive/reactive';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SummariesManager } from '../../domain/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../summaries/core/api/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t}\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../../../core/domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"dropdownTextTranslation\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortAscending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">\n\t\t\t\t\t{{'headerMenuMainTabColumnSortDescending' | guiTranslate}}\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\t{{'headerMenuMainTabColumnSortNone' | guiTranslate}}\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSummariesEventRepository } from '../../../../summaries/core/api/structure-summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../../summaries/core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { Translation } from '../../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from './structure.summaries-translations';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.countTooltip\">{{'summariesCount' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.distinctTooltip\">{{'summariesDist' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\t{{'summariesSum' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.averageTooltip\">{{'summariesAvg' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.minTooltip\">\n\t\t\t\t\t\t\t{{'summariesMin' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.maxTooltip\">\n\t\t\t\t\t\t\t{{'summariesMax' | guiTranslate}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"summariesTranslations.medTooltip\">{{'summariesMed' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesTruthy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>{{'summariesFalsy' | guiTranslate}}</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesUiEventsRepository: StructureSummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationService,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.translationService\n\t\t\t.onTranslation()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.getBannerPanelConfig()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = title.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getBannerPanelConfig(): Observable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { Observable } from 'rxjs';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tgetBannerPanelConfig(): Observable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureThemeGateway>): void {\n\n\t\tif (changes.theme2 !== undefined && changes.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../domain/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from '../api/enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/api/structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSummariesCommandDispatcher } from './structure-summaries.command-dispatcher';\nimport { StructureSummariesEventRepository } from './structure-summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\nimport { StructureSummariesWarehouse } from './structure-summaries.warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\tStructureSummariesCommandDispatcher,\n\t\tStructureSummariesEventRepository,\n\n\t\tStructureSummariesRepository,\n\t\tStructureSummariesWarehouse\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionRepository } from './vertical-formation.scroll-bar-position.repository';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureVerticalFormationWarehouse } from './structure-vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionRepository } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\tStructureVerticalFormationWarehouse,\n\t\tVerticalFormationScrollBarPositionRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { DomainEventBus } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupRepository } from '../domain-read/group/composition.group.repository';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupRepository,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectedDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationService } from '../../../../../l10n/core/api/translation.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../../../summaries/core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../../panel/summaries/structure.summaries-config.service';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { StreamCloser } from '../../../../../../common/cdk/reactive/stream-closer';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from './summaries/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { StructureThemeGateway } from '../../feature/gate/schema/structure-theme.gateway';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GuiListComponent } from '../../feature/gui.list.component';\n\nimport { ListViewFeatureModule } from '../../../../structure/list/feature/list-view.feature-module';\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\nimport { GuiListItemComponent } from '../../feature/item/gui.list-item.component';\nimport { GuiListCardComponent } from '../../feature/card/gui.list-card.component';\n\nconst imports = [\n\tCommonModule,\n\tListViewFeatureModule,\n\tStructureModule.withConfig({\n\t\tcssClassName: 'list',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst providers = [] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiListComponent,\n\tGuiListItemComponent,\n\tGuiListCardComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiListComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tListViewFeatureModule,\n\t\tStructureModule.withConfig({\n\t\t\tcssClassName: 'list',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n\t]\n\t// declarations,\n\t// exports: exportDeclarations,\n\t// entryComponents\n})\nexport class GuiListWithGridModule {\n}\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiListModule {\n\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: providers\n\t\t};\n\t}\n\n\tstatic forChild(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: GuiListModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}